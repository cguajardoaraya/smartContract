{
	"id": "45c881e85c569a7ca069114a0f45297e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PropiedadesERC721_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: contracts/PropiedadesERC721.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n// Contrato ERC-721 para representar propiedades individuales\ncontract PropiedadesERC721 is ERC721, Ownable {\n    constructor() ERC721(\"Prop\", \"PP\") Ownable(msg.sender) {}\n\n    // Función para crear un nuevo token ERC-721 que representa una propiedad\n    function mint(address to, uint256 tokenId) public onlyOwner {\n        _mint(to, tokenId);\n    }\n\n    // Función para quemar un token ERC-721 que representa una propiedad\n    function burn(uint256 tokenId) public  onlyOwner {\n        _burn(tokenId);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/PropiedadesERC721_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "contracts/PropiedadesERC721_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC721_flattened.sol\":8087:23001  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC721_flattened.sol\":8087:23001  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220517a04d7b210c09e0faa6397b5a828d1260f21c3a235a167f36d5ddf1285154364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220517a04d7b210c09e0faa6397b5a828d1260f21c3a235a167f36d5ddf1285154364736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH27 0x4D7B210C09E0FAA6397B5A828D1260F21C3A235A167F36D5DDF12 DUP6 ISZERO NUMBER PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "8087:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220517a04d7b210c09e0faa6397b5a828d1260f21c3a235a167f36d5ddf1285154364736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH27 0x4D7B210C09E0FAA6397B5A828D1260F21C3A235A167F36D5DDF12 DUP6 ISZERO NUMBER PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "8087:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8087,
									"end": 23001,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220517a04d7b210c09e0faa6397b5a828d1260f21c3a235a167f36d5ddf1285154364736f6c63430008190033",
									".code": [
										{
											"begin": 8087,
											"end": 23001,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 23001,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC721_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1578,
								"contract": "contracts/PropiedadesERC721_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PropiedadesERC721": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC721_flattened.sol\":56111:56562  contract PropiedadesERC721 is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PropiedadesERC721_flattened.sol\":56163:56220  constructor() ERC721(\"Prop\", \"PP\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":56206:56216  msg.sender */\n  caller\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39656:39769  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x50726f7000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5050000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39730:39735  name_ */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39722:39727  _name */\n  0x00\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39722:39735  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39755:39762  symbol_ */\n  dup1\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39745:39752  _symbol */\n  0x01\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39745:39762  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":39656:39769  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28295:28296  0 */\n  0x00\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28271:28297  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28271:28283  initialOwner */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28271:28297  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28267:28362  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28348:28349  0 */\n  0x00\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28320:28351  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28267:28362  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28371:28403  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28390:28402  initialOwner */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28371:28389  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28371:28403  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/PropiedadesERC721_flattened.sol\":28223:28410  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":56111:56562  contract PropiedadesERC721 is ERC721, Ownable {... */\n  jump(tag_16)\n    /* \"contracts/PropiedadesERC721_flattened.sol\":29910:30097  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"contracts/PropiedadesERC721_flattened.sol\":29983:29999  address oldOwner */\n  0x00\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30002:30008  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC721_flattened.sol\":29983:30008  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30027:30035  newOwner */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30018:30024  _owner */\n  0x06\n  0x00\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30018:30035  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30081:30089  newOwner */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30050:30090  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30071:30079  oldOwner */\n  dup2\n    /* \"contracts/PropiedadesERC721_flattened.sol\":30050:30090  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/PropiedadesERC721_flattened.sol\":29973:30097  {... */\n  pop\n    /* \"contracts/PropiedadesERC721_flattened.sol\":29910:30097  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PropiedadesERC721_flattened.sol\":56111:56562  contract PropiedadesERC721 is ERC721, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56111:56562  contract PropiedadesERC721 is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39836:40136  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40640:40729  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41772:41926  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41598:41711  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42418:42996  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56305:56400  function mint(address to, uint256 tokenId) public onlyOwner {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43062:43194  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56480:56560  function burn(uint256 tokenId) public  onlyOwner {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40460:40578  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40195:40403  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29291:29392  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28636:28721  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40793:40886  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41993:42137  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43260:43468  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40952:41207  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42203:42356  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29541:29756  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39836:40136  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39938:39942  bool */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39988:40013  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40013  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:39984  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40013  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40077  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40044:40077  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40029:40077  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40029:40040  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40029:40077  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40077  interfaceId == type(IERC721).interfaceId ||... */\n    tag_96:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40129  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40093:40129  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40117:40128  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40093:40116  super.supportsInterface */\n      tag_99\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40093:40129  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39973:40129  interfaceId == type(IERC721).interfaceId ||... */\n    tag_97:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39954:40129  return... */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":39836:40136  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40640:40729  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40685:40698  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40717:40722  _name */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40710:40722  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40640:40729  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41772:41926  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41839:41846  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41858:41880  _requireOwned(tokenId) */\n      tag_108\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41872:41879  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41858:41871  _requireOwned */\n      tag_109\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41858:41880  _requireOwned(tokenId) */\n      jump\t// in\n    tag_108:\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41898:41919  _getApproved(tokenId) */\n      tag_110\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41911:41918  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41898:41910  _getApproved */\n      tag_111\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41898:41919  _getApproved(tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41891:41919  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41772:41926  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41598:41711  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41669:41704  _approve(to, tokenId, _msgSender()) */\n      tag_113\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41678:41680  to */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41682:41689  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41691:41703  _msgSender() */\n      tag_114\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41691:41701  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41691:41703  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41669:41677  _approve */\n      tag_116\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41669:41704  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41598:41711  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42418:42996  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42526:42527  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42512:42528  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42512:42514  to */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42512:42528  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42508:42595  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42581:42582  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42551:42584  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42508:42595  if (to == address(0)) {... */\n    tag_118:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42813:42834  address previousOwner */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42837:42871  _update(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42845:42847  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42849:42856  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42858:42870  _msgSender() */\n      tag_121\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42858:42868  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42858:42870  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42837:42844  _update */\n      tag_122\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42837:42871  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42813:42871  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42902:42906  from */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42885:42906  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42885:42898  previousOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42885:42906  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42881:42990  if (previousOwner != from) {... */\n      tag_123\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42950:42954  from */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42956:42963  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42965:42978  previousOwner */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42929:42979  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42881:42990  if (previousOwner != from) {... */\n    tag_123:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42498:42996  {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42418:42996  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56305:56400  function mint(address to, uint256 tokenId) public onlyOwner {... */\n    tag_50:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      tag_127\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28540  _checkOwner */\n      tag_128\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56375:56393  _mint(to, tokenId) */\n      tag_130\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56381:56383  to */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56385:56392  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56375:56380  _mint */\n      tag_131\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56375:56393  _mint(to, tokenId) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56305:56400  function mint(address to, uint256 tokenId) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43062:43194  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_53:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43148:43187  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_133\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43165:43169  from */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43171:43173  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43175:43182  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43148:43187  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43148:43164  safeTransferFrom */\n      tag_82\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43148:43187  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_133:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43062:43194  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56480:56560  function burn(uint256 tokenId) public  onlyOwner {... */\n    tag_56:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      tag_135\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28540  _checkOwner */\n      tag_128\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56539:56553  _burn(tokenId) */\n      tag_137\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56545:56552  tokenId */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56539:56544  _burn */\n      tag_138\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56539:56553  _burn(tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":56480:56560  function burn(uint256 tokenId) public  onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40460:40578  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_59:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40523:40530  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40549:40571  _requireOwned(tokenId) */\n      tag_140\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40563:40570  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40549:40562  _requireOwned */\n      tag_109\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40549:40571  _requireOwned(tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40542:40571  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40460:40578  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40195:40403  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40258:40265  uint256 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40298:40299  0 */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40281:40300  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40281:40286  owner */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40281:40300  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40277:40364  if (owner == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40350:40351  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40323:40353  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40277:40364  if (owner == address(0)) {... */\n    tag_142:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40380:40389  _balances */\n      0x03\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40380:40396  _balances[owner] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40390:40395  owner */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40380:40396  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40373:40396  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40195:40403  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29291:29392  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      tag_145\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28540  _checkOwner */\n      tag_128\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29355:29385  _transferOwnership(address(0)) */\n      tag_147\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29382:29383  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29355:29373  _transferOwnership */\n      tag_148\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29355:29385  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29291:29392  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28636:28721  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28682:28689  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28708:28714  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28701:28714  return _owner */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28636:28721  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40793:40886  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40840:40853  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40872:40879  _symbol */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40865:40879  return _symbol */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_102\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_102\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40793:40886  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41993:42137  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_78:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42078:42130  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_157\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42097:42109  _msgSender() */\n      tag_158\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42097:42107  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42097:42109  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42111:42119  operator */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42121:42129  approved */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42078:42096  _setApprovalForAll */\n      tag_159\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42078:42130  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41993:42137  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43260:43468  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_82:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43373:43404  transferFrom(from, to, tokenId) */\n      tag_161\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43386:43390  from */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43392:43394  to */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43396:43403  tokenId */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43373:43385  transferFrom */\n      tag_47\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43373:43404  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43414:43461  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_162\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43437:43441  from */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43443:43445  to */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43447:43454  tokenId */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43456:43460  data */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43414:43436  _checkOnERC721Received */\n      tag_163\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43414:43461  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43260:43468  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40952:41207  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41016:41029  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41041:41063  _requireOwned(tokenId) */\n      tag_165\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41055:41062  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41041:41054  _requireOwned */\n      tag_109\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41041:41063  _requireOwned(tokenId) */\n      jump\t// in\n    tag_165:\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41074:41095  string memory baseURI */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41098:41108  _baseURI() */\n      tag_166\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41098:41106  _baseURI */\n      tag_167\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41098:41108  _baseURI() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41074:41108  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41149:41150  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41131:41138  baseURI */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41125:41146  bytes(baseURI).length */\n      mload\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41125:41150  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41125:41200  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_168\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_169)\n    tag_168:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41167:41174  baseURI */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41176:41194  tokenId.toString() */\n      tag_170\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41176:41183  tokenId */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41176:41192  tokenId.toString */\n      tag_171\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41176:41194  tokenId.toString() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41153:41195  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_172\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41125:41200  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_169:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41118:41200  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":40952:41207  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42203:42356  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_90:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42291:42295  bool */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42314:42332  _operatorApprovals */\n      0x05\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42314:42339  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42333:42338  owner */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42314:42339  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42314:42349  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42340:42348  operator */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42314:42349  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42307:42349  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":42203:42356  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29541:29756  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      tag_176\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28540  _checkOwner */\n      tag_128\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28529:28542  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29645:29646  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29625:29647  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29625:29633  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29625:29647  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29621:29712  if (newOwner == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29698:29699  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29670:29701  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29621:29712  if (newOwner == address(0)) {... */\n    tag_178:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29721:29749  _transferOwnership(newOwner) */\n      tag_180\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29740:29748  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29721:29739  _transferOwnership */\n      tag_148\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29721:29749  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29541:29756  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32795:32941  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_99:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32871:32875  bool */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32909:32934  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32894:32934  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32894:32905  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32894:32934  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32887:32934  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":32795:32941  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54413:54654  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_109:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54476:54483  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54495:54508  address owner */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54511:54528  _ownerOf(tokenId) */\n      tag_183\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54520:54527  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54511:54519  _ownerOf */\n      tag_184\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54511:54528  _ownerOf(tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54495:54528  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54559:54560  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54542:54561  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54542:54547  owner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54542:54561  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54538:54626  if (owner == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54607:54614  tokenId */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54584:54615  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54538:54626  if (owner == address(0)) {... */\n    tag_185:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54642:54647  owner */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54635:54647  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54413:54654  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44213:44340  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_111:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44283:44290  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44309:44324  _tokenApprovals */\n      0x04\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44309:44333  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44325:44332  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44309:44333  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44302:44333  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44213:44340  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":26714:26810  function _msgSender() internal view virtual returns (address) {... */\n    tag_115:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":26767:26774  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":26793:26803  msg.sender */\n      caller\n        /* \"contracts/PropiedadesERC721_flattened.sol\":26786:26803  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":26714:26810  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52693:52813  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_116:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52773:52806  _approve(to, tokenId, auth, true) */\n      tag_190\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52782:52784  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52786:52793  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52795:52799  auth */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52801:52805  true */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52773:52781  _approve */\n      tag_191\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52773:52806  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52693:52813  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47113:47908  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_122:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47199:47206  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47218:47230  address from */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47233:47250  _ownerOf(tokenId) */\n      tag_193\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47242:47249  tokenId */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47233:47241  _ownerOf */\n      tag_184\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47233:47250  _ownerOf(tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47218:47250  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47326:47327  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47310:47328  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47310:47314  auth */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47310:47328  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47306:47392  if (auth != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47344:47381  _checkAuthorized(from, auth, tokenId) */\n      tag_195\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47361:47365  from */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47367:47371  auth */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47373:47380  tokenId */\n      dup7\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47344:47360  _checkAuthorized */\n      tag_196\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47344:47381  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47306:47392  if (auth != address(0)) {... */\n    tag_194:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47452:47453  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47436:47454  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47436:47440  from */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47436:47454  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47432:47688  if (from != address(0)) {... */\n      tag_197\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47552:47600  _approve(address(0), tokenId, address(0), false) */\n      tag_198\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47569:47570  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47573:47580  tokenId */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47590:47591  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47594:47599  false */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47552:47560  _approve */\n      tag_191\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47552:47600  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47662:47663  1 */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47643:47652  _balances */\n      0x03\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47643:47658  _balances[from] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47653:47657  from */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47643:47658  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47643:47663  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47432:47688  if (from != address(0)) {... */\n    tag_197:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47716:47717  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47702:47718  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47702:47704  to */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47702:47718  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47698:47805  if (to != address(0)) {... */\n      tag_199\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47779:47780  1 */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47762:47771  _balances */\n      0x03\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47762:47775  _balances[to] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47772:47774  to */\n      dup8\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47762:47775  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47762:47780  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47698:47805  if (to != address(0)) {... */\n    tag_199:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47834:47836  to */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47815:47822  _owners */\n      0x02\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47815:47831  _owners[tokenId] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47823:47830  tokenId */\n      dup7\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47815:47831  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47815:47836  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47871:47878  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47867:47869  to */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47852:47879  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47861:47865  from */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47852:47879  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47897:47901  from */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47890:47901  return from */\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":47113:47908  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28794:28956  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28864:28876  _msgSender() */\n      tag_201\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28864:28874  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28864:28876  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28853:28876  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28853:28860  owner() */\n      tag_202\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28853:28858  owner */\n      tag_70\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28853:28860  owner() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28853:28876  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28849:28950  if (owner() != _msgSender()) {... */\n      tag_203\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28926:28938  _msgSender() */\n      tag_204\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28926:28936  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28926:28938  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28899:28939  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28849:28950  if (owner() != _msgSender()) {... */\n    tag_203:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":28794:28956  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48230:48557  function _mint(address to, uint256 tokenId) internal {... */\n    tag_131:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48311:48312  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48297:48313  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48297:48299  to */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48297:48313  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48293:48380  if (to == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48366:48367  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48336:48369  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48293:48380  if (to == address(0)) {... */\n    tag_207:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48389:48410  address previousOwner */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48413:48445  _update(to, tokenId, address(0)) */\n      tag_209\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48421:48423  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48425:48432  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48442:48443  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48413:48420  _update */\n      tag_122\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48413:48445  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48389:48445  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48484:48485  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48459:48486  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48459:48472  previousOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48459:48486  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48455:48551  if (previousOwner != address(0)) {... */\n      tag_210\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48537:48538  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48509:48540  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48455:48551  if (previousOwner != address(0)) {... */\n    tag_210:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48283:48557  {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":48230:48557  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49737:49964  function _burn(uint256 tokenId) internal {... */\n    tag_138:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49788:49809  address previousOwner */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49812:49852  _update(address(0), tokenId, address(0)) */\n      tag_213\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49828:49829  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49832:49839  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49849:49850  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49812:49819  _update */\n      tag_122\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49812:49852  _update(address(0), tokenId, address(0)) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49788:49852  address previousOwner = _update(address(0), tokenId, address(0)) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49891:49892  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49866:49893  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49866:49879  previousOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49866:49893  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49862:49958  if (previousOwner == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49939:49946  tokenId */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49916:49947  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49862:49958  if (previousOwner == address(0)) {... */\n    tag_214:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49778:49964  {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":49737:49964  function _burn(uint256 tokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29910:30097  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29983:29999  address oldOwner */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30002:30008  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29983:30008  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30027:30035  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30018:30024  _owner */\n      0x06\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30018:30035  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30081:30089  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30050:30090  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30071:30079  oldOwner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":30050:30090  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29973:30097  {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":29910:30097  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53866:54178  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_159:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53993:53994  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53973:53995  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53973:53981  operator */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53973:53995  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53969:54060  if (operator == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54040:54048  operator */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54018:54049  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53969:54060  if (operator == address(0)) {... */\n    tag_218:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54107:54115  approved */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54087  _operatorApprovals */\n      0x05\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54094  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54088:54093  owner */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54094  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54104  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54095:54103  operator */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54104  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54069:54115  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54152:54160  operator */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54130:54171  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54145:54150  owner */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54130:54171  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54162:54170  approved */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":54130:54171  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53866:54178  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55193:55975  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_163:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55326:55327  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55309:55311  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55309:55323  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55309:55327  to.code.length > 0 */\n      gt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55305:55969  if (to.code.length > 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55363:55365  to */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55347:55383  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55384:55396  _msgSender() */\n      tag_223\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55384:55394  _msgSender */\n      tag_115\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55384:55396  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55398:55402  from */\n      dup7\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55404:55411  tokenId */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55413:55417  data */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55347:55418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x01\n    tag_226:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55343:55959  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_229\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_234\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_233)\n    tag_234:\n      0x60\n      swap2\n      pop\n    tag_233:\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55673:55674  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55656:55662  reason */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55656:55669  reason.length */\n      mload\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55656:55674  reason.length == 0 */\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55652:55945  if (reason.length == 0) {... */\n      tag_235\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55727:55729  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55705:55730  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55652:55945  if (reason.length == 0) {... */\n    tag_235:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55897:55903  reason */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55891:55904  mload(reason) */\n      mload\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55882:55888  reason */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55878:55880  32 */\n      0x20\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55874:55889  add(32, reason) */\n      add\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55867:55905  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55343:55959  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_229:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55475:55516  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55465:55516  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55465:55471  retval */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55465:55516  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55461:55591  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_239\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55569:55571  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55547:55572  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55461:55591  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_239:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55419:55605  returns (bytes4 retval) {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55305:55969  if (to.code.length > 0) {... */\n    tag_222:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":55193:55975  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41449:41541  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_167:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41500:41513  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41525:41534  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":41449:41541  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23574:24272  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_171:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23630:23643  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23679:23693  uint256 length */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23716:23717  1 */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23696:23713  Math.log10(value) */\n      tag_243\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23707:23712  value */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23696:23706  Math.log10 */\n      tag_244\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23696:23713  Math.log10(value) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23696:23717  Math.log10(value) + 1 */\n      add\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23679:23717  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23731:23751  string memory buffer */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23765:23771  length */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23754:23772  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      tag_246\n      tag_247\n      jump\t// in\n    tag_246:\n    tag_245:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_248:\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23731:23772  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23786:23797  uint256 ptr */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23912:23918  length */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23908:23910  32 */\n      0x20\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23904:23919  add(32, length) */\n      add\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23896:23902  buffer */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23892:23920  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23885:23920  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23947:24229  while (true) {... */\n    tag_249:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23954:23958  true */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23947:24229  while (true) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23978:23983  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24117:24127  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24112:24114  10 */\n      0x0a\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24105:24110  value */\n      dup7\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24101:24115  mod(value, 10) */\n      mod\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24096:24128  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24091:24094  ptr */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24083:24129  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24173:24175  10 */\n      0x0a\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24164:24175  value /= 10 */\n      dup6\n      dup2\n      tag_251\n      jumpi\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n    tag_251:\n      div\n      swap5\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24206:24207  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24197:24202  value */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24197:24207  value == 0 */\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23947:24229  while (true) {... */\n      tag_249\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24193:24214  if (value == 0) break */\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23947:24229  while (true) {... */\n    tag_250:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24249:24255  buffer */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":24242:24255  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23574:24272  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43982:44097  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_184:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44048:44055  address */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44074:44081  _owners */\n      0x02\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44074:44090  _owners[tokenId] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44082:44089  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44074:44090  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44067:44090  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":43982:44097  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52995:53657  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_191:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53155:53164  emitEvent */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53155:53186  emitEvent || auth != address(0) */\n      dup1\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53184:53185  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53168:53186  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53168:53172  auth */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53168:53186  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53155:53186  emitEvent || auth != address(0) */\n    tag_257:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53151:53611  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53202:53215  address owner */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53218:53240  _requireOwned(tokenId) */\n      tag_259\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53232:53239  tokenId */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53218:53231  _requireOwned */\n      tag_109\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53218:53240  _requireOwned(tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53202:53240  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53384:53385  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53386  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53372  auth */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53386  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53403  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53399:53403  auth */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53390:53403  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53390:53395  owner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53390:53403  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53403  auth != address(0) && owner != auth */\n    tag_260:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53437  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53408:53437  isApprovedForAll(owner, auth) */\n      tag_262\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53425:53430  owner */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53432:53436  auth */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53408:53424  isApprovedForAll */\n      tag_90\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53408:53437  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53407:53437  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53368:53437  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_261:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53364:53506  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53486:53490  auth */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53464:53491  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53364:53506  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_263:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53524:53533  emitEvent */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53520:53601  if (emitEvent) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53578:53585  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53574:53576  to */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53558:53586  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53567:53572  owner */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53558:53586  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53520:53601  if (emitEvent) {... */\n    tag_265:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53188:53611  {... */\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53151:53611  if (emitEvent || auth != address(0)) {... */\n    tag_258:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53648:53650  to */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53621:53636  _tokenApprovals */\n      0x04\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53621:53645  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53637:53644  tokenId */\n      dup6\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53621:53645  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":53621:53650  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":52995:53657  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45357:45725  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_196:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45469:45507  _isAuthorized(owner, spender, tokenId) */\n      tag_267\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45483:45488  owner */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45490:45497  spender */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45499:45506  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45469:45482  _isAuthorized */\n      tag_268\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45469:45507  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45464:45719  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_269\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45544:45545  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45527:45546  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45527:45532  owner */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45527:45546  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45523:45709  if (owner == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45596:45603  tokenId */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45573:45604  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45523:45709  if (owner == address(0)) {... */\n    tag_270:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45677:45684  spender */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45686:45693  tokenId */\n      dup2\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45650:45694  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45464:45719  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_269:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":45357:45725  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20098:21014  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_244:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20151:20158  uint256 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20170:20184  uint256 result */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20187:20188  0 */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20170:20188  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20235:20243  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20226:20231  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20226:20243  value >= 10 ** 64 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20222:20325  if (value >= 10 ** 64) {... */\n      tag_276\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20272:20280  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20263:20280  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_277\n      jumpi\n      tag_278\n      tag_253\n      jump\t// in\n    tag_278:\n    tag_277:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20308:20310  64 */\n      0x40\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20298:20310  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20222:20325  if (value >= 10 ** 64) {... */\n    tag_276:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20351:20359  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20342:20347  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20342:20359  value >= 10 ** 32 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20338:20441  if (value >= 10 ** 32) {... */\n      tag_279\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20388:20396  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20379:20396  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_280\n      jumpi\n      tag_281\n      tag_253\n      jump\t// in\n    tag_281:\n    tag_280:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20424:20426  32 */\n      0x20\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20414:20426  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20338:20441  if (value >= 10 ** 32) {... */\n    tag_279:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20467:20475  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20458:20463  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20458:20475  value >= 10 ** 16 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20454:20557  if (value >= 10 ** 16) {... */\n      tag_282\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20504:20512  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20495:20512  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_283\n      jumpi\n      tag_284\n      tag_253\n      jump\t// in\n    tag_284:\n    tag_283:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20540:20542  16 */\n      0x10\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20530:20542  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20454:20557  if (value >= 10 ** 16) {... */\n    tag_282:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20583:20590  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20574:20579  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20574:20590  value >= 10 ** 8 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20570:20670  if (value >= 10 ** 8) {... */\n      tag_285\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20619:20626  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20610:20626  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_286\n      jumpi\n      tag_287\n      tag_253\n      jump\t// in\n    tag_287:\n    tag_286:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20654:20655  8 */\n      0x08\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20644:20655  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20570:20670  if (value >= 10 ** 8) {... */\n    tag_285:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20696:20703  10 ** 4 */\n      0x2710\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20687:20692  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20687:20703  value >= 10 ** 4 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20683:20783  if (value >= 10 ** 4) {... */\n      tag_288\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20732:20739  10 ** 4 */\n      0x2710\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20723:20739  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_289\n      jumpi\n      tag_290\n      tag_253\n      jump\t// in\n    tag_290:\n    tag_289:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20767:20768  4 */\n      0x04\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20757:20768  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20683:20783  if (value >= 10 ** 4) {... */\n    tag_288:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20809:20816  10 ** 2 */\n      0x64\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20800:20805  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20800:20816  value >= 10 ** 2 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20796:20896  if (value >= 10 ** 2) {... */\n      tag_291\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20845:20852  10 ** 2 */\n      0x64\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20836:20852  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_292\n      jumpi\n      tag_293\n      tag_253\n      jump\t// in\n    tag_293:\n    tag_292:\n      div\n      swap3\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20880:20881  2 */\n      0x02\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20870:20881  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20796:20896  if (value >= 10 ** 2) {... */\n    tag_291:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20922:20929  10 ** 1 */\n      0x0a\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20913:20918  value */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20913:20929  value >= 10 ** 1 */\n      lt\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20909:20975  if (value >= 10 ** 1) {... */\n      tag_294\n      jumpi\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20959:20960  1 */\n      0x01\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20949:20960  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20909:20975  if (value >= 10 ** 1) {... */\n    tag_294:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":21001:21007  result */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20994:21007  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":20098:21014  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44651:44923  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_268:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44754:44758  bool */\n      0x00\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44808:44809  0 */\n      dup1\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44789:44810  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44789:44796  spender */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44789:44810  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44789:44916  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44836:44843  spender */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44843  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44832  owner */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44843  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44879  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_297\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44847:44879  isApprovedForAll(owner, spender) */\n      tag_298\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44864:44869  owner */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44871:44878  spender */\n      dup5\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44847:44863  isApprovedForAll */\n      tag_90\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44847:44879  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44879  owner == spender || isApprovedForAll(owner, spender) */\n    tag_297:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44915  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_299\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44908:44915  spender */\n      dup3\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44883:44915  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44883:44904  _getApproved(tokenId) */\n      tag_300\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44896:44903  tokenId */\n      dup4\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44883:44895  _getApproved */\n      tag_111\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44883:44904  _getApproved(tokenId) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44883:44915  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44827:44915  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_299:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44789:44916  spender != address(0) &&... */\n    tag_296:\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44770:44916  return... */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC721_flattened.sol\":44651:44923  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_301:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_302:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_303:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_304:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_305:\n        /* \"#utility.yul\":561:584   */\n      tag_346\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_304\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_347:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_306:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_349\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_305\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_352\n      tag_302\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":833:952   */\n    tag_351:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_353\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_306\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_307:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_308:\n        /* \"#utility.yul\":1268:1289   */\n      tag_356\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_307\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_358\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_308\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_309:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_310:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_311:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_312:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_313:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_364\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_309\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2222:2293   */\n      tag_365\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_310\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_366\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_311\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2392:2421   */\n      tag_367\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_312\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_369\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_313\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_314:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_315:\n        /* \"#utility.yul\":2909:2933   */\n      tag_372\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_314\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_373:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_316:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_375\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_315\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_36:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_378\n      tag_302\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3185:3304   */\n    tag_377:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_379\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_316\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_317:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_318:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_382\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_317\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_319:\n        /* \"#utility.yul\":3765:3789   */\n      tag_384\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_318\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_39:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_386\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_319\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_320:\n        /* \"#utility.yul\":4103:4127   */\n      tag_388\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_318\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_389:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_321:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_391\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_320\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_42:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_394\n      tag_302\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4396:4515   */\n    tag_393:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_395\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_321\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_396\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_316\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_46:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_399\n      tag_302\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4893:5012   */\n    tag_398:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_400\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_321\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_401\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_321\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_402\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_316\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_63:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_405\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5484:5603   */\n    tag_404:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_406\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_321\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_322:\n        /* \"#utility.yul\":5830:5854   */\n      tag_408\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_314\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_66:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_410\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_322\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_323:\n        /* \"#utility.yul\":6165:6186   */\n      tag_412\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_307\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      dup1\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_413:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_324:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_415\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_323\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_77:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      dup1\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_418\n      tag_302\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6446:6565   */\n    tag_417:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_419\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_321\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_420\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_324\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_325:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_326:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      dup1\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_247:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_327:\n        /* \"#utility.yul\":7345:7372   */\n      tag_425\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_312\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_427\n      tag_247\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7418:7506   */\n    tag_426:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_328:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_429\n      tag_301\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_430\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_327\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_329:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_433\n      tag_247\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7821:7877   */\n    tag_432:\n        /* \"#utility.yul\":7895:7924   */\n      tag_434\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_312\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_330:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_331:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_437\n        /* \"#utility.yul\":8269:8317   */\n      tag_438\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_329\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8253:8318   */\n      tag_328\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_440\n      tag_326\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8393:8505   */\n    tag_439:\n        /* \"#utility.yul\":8514:8568   */\n      tag_441\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_330\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_332:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_444\n      tag_325\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8664:8786   */\n    tag_443:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_445\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_331\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_81:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      dup1\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup1\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_448\n      tag_302\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9073:9193   */\n    tag_447:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_449\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_321\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_450\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_321\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_451\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_316\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_453\n      tag_303\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9660:9777   */\n    tag_452:\n        /* \"#utility.yul\":9801:9863   */\n      tag_454\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_332\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_89:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      dup1\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_457\n      tag_302\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9979:10098   */\n    tag_456:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_458\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_321\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_459\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_321\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_333:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_102:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_462:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_464\n      tag_333\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10782:10866   */\n    tag_463:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11320   */\n    tag_125:\n        /* \"#utility.yul\":11027:11031   */\n      0x00\n        /* \"#utility.yul\":11065:11067   */\n      0x60\n        /* \"#utility.yul\":11054:11063   */\n      dup3\n        /* \"#utility.yul\":11050:11068   */\n      add\n        /* \"#utility.yul\":11042:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11149   */\n      tag_466\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11135:11144   */\n      dup4\n        /* \"#utility.yul\":11131:11148   */\n      add\n        /* \"#utility.yul\":11122:11128   */\n      dup7\n        /* \"#utility.yul\":11078:11149   */\n      tag_319\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11159:11231   */\n      tag_467\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11216:11225   */\n      dup4\n        /* \"#utility.yul\":11212:11230   */\n      add\n        /* \"#utility.yul\":11203:11209   */\n      dup6\n        /* \"#utility.yul\":11159:11231   */\n      tag_322\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11241:11313   */\n      tag_468\n        /* \"#utility.yul\":11309:11311   */\n      0x40\n        /* \"#utility.yul\":11298:11307   */\n      dup4\n        /* \"#utility.yul\":11294:11312   */\n      add\n        /* \"#utility.yul\":11285:11291   */\n      dup5\n        /* \"#utility.yul\":11241:11313   */\n      tag_319\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10878:11320   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11474   */\n    tag_334:\n        /* \"#utility.yul\":11428:11439   */\n      0x00\n        /* \"#utility.yul\":11465:11468   */\n      dup2\n        /* \"#utility.yul\":11450:11468   */\n      swap1\n      pop\n        /* \"#utility.yul\":11326:11474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11870   */\n    tag_335:\n        /* \"#utility.yul\":11586:11589   */\n      0x00\n        /* \"#utility.yul\":11614:11653   */\n      tag_471\n        /* \"#utility.yul\":11647:11652   */\n      dup3\n        /* \"#utility.yul\":11614:11653   */\n      tag_309\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11669:11758   */\n      tag_472\n        /* \"#utility.yul\":11751:11757   */\n      dup2\n        /* \"#utility.yul\":11746:11749   */\n      dup6\n        /* \"#utility.yul\":11669:11758   */\n      tag_334\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11662:11758   */\n      swap4\n      pop\n        /* \"#utility.yul\":11767:11832   */\n      tag_473\n        /* \"#utility.yul\":11825:11831   */\n      dup2\n        /* \"#utility.yul\":11820:11823   */\n      dup6\n        /* \"#utility.yul\":11813:11817   */\n      0x20\n        /* \"#utility.yul\":11806:11811   */\n      dup7\n        /* \"#utility.yul\":11802:11818   */\n      add\n        /* \"#utility.yul\":11767:11832   */\n      tag_311\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11857:11863   */\n      dup1\n        /* \"#utility.yul\":11852:11855   */\n      dup5\n        /* \"#utility.yul\":11848:11864   */\n      add\n        /* \"#utility.yul\":11841:11864   */\n      swap2\n      pop\n        /* \"#utility.yul\":11590:11870   */\n      pop\n        /* \"#utility.yul\":11480:11870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11876:12311   */\n    tag_173:\n        /* \"#utility.yul\":12056:12059   */\n      0x00\n        /* \"#utility.yul\":12078:12173   */\n      tag_475\n        /* \"#utility.yul\":12169:12172   */\n      dup3\n        /* \"#utility.yul\":12160:12166   */\n      dup6\n        /* \"#utility.yul\":12078:12173   */\n      tag_335\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12071:12173   */\n      swap2\n      pop\n        /* \"#utility.yul\":12190:12285   */\n      tag_476\n        /* \"#utility.yul\":12281:12284   */\n      dup3\n        /* \"#utility.yul\":12272:12278   */\n      dup5\n        /* \"#utility.yul\":12190:12285   */\n      tag_335\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12183:12285   */\n      swap2\n      pop\n        /* \"#utility.yul\":12302:12305   */\n      dup2\n        /* \"#utility.yul\":12295:12305   */\n      swap1\n      pop\n        /* \"#utility.yul\":11876:12311   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12317:12415   */\n    tag_336:\n        /* \"#utility.yul\":12368:12374   */\n      0x00\n        /* \"#utility.yul\":12402:12407   */\n      dup2\n        /* \"#utility.yul\":12396:12408   */\n      mload\n        /* \"#utility.yul\":12386:12408   */\n      swap1\n      pop\n        /* \"#utility.yul\":12317:12415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12421:12589   */\n    tag_337:\n        /* \"#utility.yul\":12504:12515   */\n      0x00\n        /* \"#utility.yul\":12538:12544   */\n      dup3\n        /* \"#utility.yul\":12533:12536   */\n      dup3\n        /* \"#utility.yul\":12526:12545   */\n      mstore\n        /* \"#utility.yul\":12578:12582   */\n      0x20\n        /* \"#utility.yul\":12573:12576   */\n      dup3\n        /* \"#utility.yul\":12569:12583   */\n      add\n        /* \"#utility.yul\":12554:12583   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12595:12968   */\n    tag_338:\n        /* \"#utility.yul\":12681:12684   */\n      0x00\n        /* \"#utility.yul\":12709:12747   */\n      tag_480\n        /* \"#utility.yul\":12741:12746   */\n      dup3\n        /* \"#utility.yul\":12709:12747   */\n      tag_336\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12763:12833   */\n      tag_481\n        /* \"#utility.yul\":12826:12832   */\n      dup2\n        /* \"#utility.yul\":12821:12824   */\n      dup6\n        /* \"#utility.yul\":12763:12833   */\n      tag_337\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12756:12833   */\n      swap4\n      pop\n        /* \"#utility.yul\":12842:12907   */\n      tag_482\n        /* \"#utility.yul\":12900:12906   */\n      dup2\n        /* \"#utility.yul\":12895:12898   */\n      dup6\n        /* \"#utility.yul\":12888:12892   */\n      0x20\n        /* \"#utility.yul\":12881:12886   */\n      dup7\n        /* \"#utility.yul\":12877:12893   */\n      add\n        /* \"#utility.yul\":12842:12907   */\n      tag_311\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12932:12961   */\n      tag_483\n        /* \"#utility.yul\":12954:12960   */\n      dup2\n        /* \"#utility.yul\":12932:12961   */\n      tag_312\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12927:12930   */\n      dup5\n        /* \"#utility.yul\":12923:12962   */\n      add\n        /* \"#utility.yul\":12916:12962   */\n      swap2\n      pop\n        /* \"#utility.yul\":12685:12968   */\n      pop\n        /* \"#utility.yul\":12595:12968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12974:13614   */\n    tag_225:\n        /* \"#utility.yul\":13169:13173   */\n      0x00\n        /* \"#utility.yul\":13207:13210   */\n      0x80\n        /* \"#utility.yul\":13196:13205   */\n      dup3\n        /* \"#utility.yul\":13192:13211   */\n      add\n        /* \"#utility.yul\":13184:13211   */\n      swap1\n      pop\n        /* \"#utility.yul\":13221:13292   */\n      tag_485\n        /* \"#utility.yul\":13289:13290   */\n      0x00\n        /* \"#utility.yul\":13278:13287   */\n      dup4\n        /* \"#utility.yul\":13274:13291   */\n      add\n        /* \"#utility.yul\":13265:13271   */\n      dup8\n        /* \"#utility.yul\":13221:13292   */\n      tag_319\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13302:13374   */\n      tag_486\n        /* \"#utility.yul\":13370:13372   */\n      0x20\n        /* \"#utility.yul\":13359:13368   */\n      dup4\n        /* \"#utility.yul\":13355:13373   */\n      add\n        /* \"#utility.yul\":13346:13352   */\n      dup7\n        /* \"#utility.yul\":13302:13374   */\n      tag_319\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13384:13456   */\n      tag_487\n        /* \"#utility.yul\":13452:13454   */\n      0x40\n        /* \"#utility.yul\":13441:13450   */\n      dup4\n        /* \"#utility.yul\":13437:13455   */\n      add\n        /* \"#utility.yul\":13428:13434   */\n      dup6\n        /* \"#utility.yul\":13384:13456   */\n      tag_322\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13503:13512   */\n      dup2\n        /* \"#utility.yul\":13497:13501   */\n      dup2\n        /* \"#utility.yul\":13493:13513   */\n      sub\n        /* \"#utility.yul\":13488:13490   */\n      0x60\n        /* \"#utility.yul\":13477:13486   */\n      dup4\n        /* \"#utility.yul\":13473:13491   */\n      add\n        /* \"#utility.yul\":13466:13514   */\n      mstore\n        /* \"#utility.yul\":13531:13607   */\n      tag_488\n        /* \"#utility.yul\":13602:13606   */\n      dup2\n        /* \"#utility.yul\":13593:13599   */\n      dup5\n        /* \"#utility.yul\":13531:13607   */\n      tag_338\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13523:13607   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:13614   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13620:13761   */\n    tag_339:\n        /* \"#utility.yul\":13676:13681   */\n      0x00\n        /* \"#utility.yul\":13707:13713   */\n      dup2\n        /* \"#utility.yul\":13701:13714   */\n      mload\n        /* \"#utility.yul\":13692:13714   */\n      swap1\n      pop\n        /* \"#utility.yul\":13723:13755   */\n      tag_490\n        /* \"#utility.yul\":13749:13754   */\n      dup2\n        /* \"#utility.yul\":13723:13755   */\n      tag_305\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13620:13761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13767:14116   */\n    tag_228:\n        /* \"#utility.yul\":13836:13842   */\n      0x00\n        /* \"#utility.yul\":13885:13887   */\n      0x20\n        /* \"#utility.yul\":13873:13882   */\n      dup3\n        /* \"#utility.yul\":13864:13871   */\n      dup5\n        /* \"#utility.yul\":13860:13883   */\n      sub\n        /* \"#utility.yul\":13856:13888   */\n      slt\n        /* \"#utility.yul\":13853:13972   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":13891:13970   */\n      tag_493\n      tag_302\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13853:13972   */\n    tag_492:\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14036:14099   */\n      tag_494\n        /* \"#utility.yul\":14091:14098   */\n      dup5\n        /* \"#utility.yul\":14082:14088   */\n      dup3\n        /* \"#utility.yul\":14071:14080   */\n      dup6\n        /* \"#utility.yul\":14067:14089   */\n      add\n        /* \"#utility.yul\":14036:14099   */\n      tag_339\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":14026:14099   */\n      swap2\n      pop\n        /* \"#utility.yul\":13982:14109   */\n      pop\n        /* \"#utility.yul\":13767:14116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14122:14302   */\n    tag_253:\n        /* \"#utility.yul\":14170:14247   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14167:14168   */\n      0x00\n        /* \"#utility.yul\":14160:14248   */\n      mstore\n        /* \"#utility.yul\":14267:14271   */\n      0x12\n        /* \"#utility.yul\":14264:14265   */\n      0x04\n        /* \"#utility.yul\":14257:14272   */\n      mstore\n        /* \"#utility.yul\":14291:14295   */\n      0x24\n        /* \"#utility.yul\":14288:14289   */\n      0x00\n        /* \"#utility.yul\":14281:14296   */\n      revert\n        /* \"#utility.yul\":14308:14640   */\n    tag_274:\n        /* \"#utility.yul\":14429:14433   */\n      0x00\n        /* \"#utility.yul\":14467:14469   */\n      0x40\n        /* \"#utility.yul\":14456:14465   */\n      dup3\n        /* \"#utility.yul\":14452:14470   */\n      add\n        /* \"#utility.yul\":14444:14470   */\n      swap1\n      pop\n        /* \"#utility.yul\":14480:14551   */\n      tag_497\n        /* \"#utility.yul\":14548:14549   */\n      0x00\n        /* \"#utility.yul\":14537:14546   */\n      dup4\n        /* \"#utility.yul\":14533:14550   */\n      add\n        /* \"#utility.yul\":14524:14530   */\n      dup6\n        /* \"#utility.yul\":14480:14551   */\n      tag_319\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14561:14633   */\n      tag_498\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14632   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14633   */\n      tag_322\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14308:14640   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bda1c54163b3db15c04c68fb4e13918e5aacf7df24ec93f25a9621e3af12d2a364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1959": {
									"entryPoint": null,
									"id": 1959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2915": {
									"entryPoint": null,
									"id": 2915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_1716": {
									"entryPoint": 291,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:1",
										"nodeType": "YulBlock",
										"src": "0:5817:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5050000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x123 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x547 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x261 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x21D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2D6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x2E0 DUP7 DUP4 PUSH2 0x29B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x324 PUSH2 0x31F PUSH2 0x31A DUP5 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33D DUP4 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x351 PUSH2 0x349 DUP3 PUSH2 0x32B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x370 DUP2 DUP5 DUP5 PUSH2 0x334 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH2 0x388 PUSH0 DUP3 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x376 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3A9 DUP2 PUSH2 0x27A JUMP JUMPDEST PUSH2 0x3B2 DUP5 PUSH2 0x28C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3D5 PUSH2 0x3CD DUP6 PUSH2 0x28C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x375 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3DD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x410 DUP4 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x429 DUP3 PUSH2 0x1E6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x442 JUMPI PUSH2 0x441 PUSH2 0x1F0 JUMP JUMPDEST JUMPDEST PUSH2 0x44C DUP3 SLOAD PUSH2 0x24A JUMP JUMPDEST PUSH2 0x457 DUP3 DUP3 DUP6 PUSH2 0x397 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x488 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x476 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x480 DUP6 DUP3 PUSH2 0x405 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x496 DUP7 PUSH2 0x27A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4BD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x498 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4DA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4D6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x518 DUP3 PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x528 DUP2 PUSH2 0x50E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x541 PUSH0 DUP4 ADD DUP5 PUSH2 0x51F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x202F DUP1 PUSH2 0x554 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AA JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x222 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x72C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x446 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x456 JUMPI POP PUSH2 0x455 DUP3 PUSH2 0x9A2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x46B SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x497 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4F6 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP PUSH2 0x500 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x514 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0x59B PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x616 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xD75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x662 DUP2 PUSH2 0xE68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x66F DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x73D PUSH0 PUSH2 0xEEA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x809 PUSH2 0x802 PUSH2 0xACA JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x818 DUP5 DUP5 DUP5 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1116 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP PUSH0 PUSH2 0x83F PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x888 JUMP JUMPDEST DUP1 PUSH2 0x867 DUP5 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x878 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x926 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x996 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99F DUP2 PUSH2 0xEEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA16 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA88 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xADE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAEE DUP5 PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2F JUMPI PUSH2 0xB2E DUP2 DUP5 DUP7 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBA JUMPI PUSH2 0xB6E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC39 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0xACA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD14 PUSH2 0x73F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD73 JUMPI PUSH2 0xD37 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDF1 DUP4 DUP4 PUSH0 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE74 PUSH0 DUP4 PUSH0 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12C2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1159 PUSH2 0xACA JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1237 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x122F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12C0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x12EC DUP5 PUSH2 0x1663 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x133C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x139D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1349 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1419 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x154B JUMPI PUSH0 PUSH2 0x1428 DUP5 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14A5 JUMPI POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x890 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14E7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1549 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15AB DUP4 DUP4 DUP4 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x165E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1655 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16BF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16FC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x172B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1754 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1779 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x176F JUMPI PUSH2 0x176E PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x179C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17AB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x182C JUMPI POP PUSH2 0x182B DUP5 DUP5 PUSH2 0x890 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x186A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1852 DUP4 PUSH2 0xA91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B9 DUP2 PUSH2 0x1885 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D4 DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18FC DUP5 DUP3 DUP6 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 DUP2 PUSH2 0x1905 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1932 PUSH0 DUP4 ADD DUP5 PUSH2 0x1910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x197A DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1984 DUP2 DUP6 PUSH2 0x1942 JUMP JUMPDEST SWAP4 POP PUSH2 0x1994 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C0 DUP2 DUP5 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F5 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1D DUP5 DUP3 DUP6 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4F DUP3 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA2 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACB DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ADC DUP6 DUP3 DUP7 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AFC PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0A DUP7 DUP3 DUP8 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B1B DUP7 DUP3 DUP8 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B2C DUP7 DUP3 DUP8 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B58 DUP5 DUP3 DUP6 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1905 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C2F DUP3 PUSH2 0x1960 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C60 PUSH2 0x1874 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6C DUP3 DUP3 PUSH2 0x1C26 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1C94 DUP3 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC1 PUSH2 0x1CBC DUP5 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE8 DUP5 DUP3 DUP6 PUSH2 0x1CA1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D42 DUP8 DUP3 DUP9 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D53 DUP8 DUP3 DUP9 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D64 DUP8 DUP3 DUP9 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH2 0x1D91 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1DB2 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B61 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E81 DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1E8B DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1E9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB2 DUP3 DUP6 PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBE DUP3 DUP5 PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEE DUP3 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1EF8 DUP2 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1F11 DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F2F PUSH0 DUP4 ADD DUP8 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1F3C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1F49 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B61 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 DUP5 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F74 DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8F JUMPI PUSH2 0x1F8E PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9C DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1FF2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD LOG1 0xC5 COINBASE PUSH4 0xB3DB15C0 0x4C PUSH9 0xFB4E13918E5AACF7DF 0x24 0xEC SWAP4 CALLCODE GAS SWAP7 0x21 0xE3 0xAF SLT 0xD2 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "56111:451:0:-:0;;;56163:57;;;;;;;;;;56206:10;39656:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39730:5;39722;:13;;;;;;:::i;:::-;;39755:7;39745;:17;;;;;;:::i;:::-;;39656:113;;28295:1;28271:26;;:12;:26;;;28267:95;;28348:1;28320:31;;;;;;;;;;;:::i;:::-;;;;;;;;28267:95;28371:32;28390:12;28371:18;;;:32;;:::i;:::-;28223:187;56111:451;;29910:187;29983:16;30002:6;;;;;;;;;;;29983:25;;30027:8;30018:6;;:17;;;;;;;;;;;;;;;;;;30081:8;30050:40;;30071:8;30050:40;;;;;;;;;;;;29973:124;29910:187;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;56111:451:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2701": {
									"entryPoint": 2769,
									"id": 2701,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2767": {
									"entryPoint": 5089,
									"id": 2767,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2094": {
									"entryPoint": 4808,
									"id": 2094,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_2579": {
									"entryPoint": 3688,
									"id": 2579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkAuthorized_2349": {
									"entryPoint": 5536,
									"id": 2349,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2897": {
									"entryPoint": 4374,
									"id": 2897,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_1654": {
									"entryPoint": 3310,
									"id": 1654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_2276": {
									"entryPoint": 2705,
									"id": 2276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2312": {
									"entryPoint": 6068,
									"id": 2312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2505": {
									"entryPoint": 3445,
									"id": 2505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1554": {
									"entryPoint": 2762,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2263": {
									"entryPoint": 5032,
									"id": 2263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2833": {
									"entryPoint": 2571,
									"id": 2833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_2804": {
									"entryPoint": 4013,
									"id": 2804,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1716": {
									"entryPoint": 3818,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_2455": {
									"entryPoint": 2787,
									"id": 2455,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2110": {
									"entryPoint": 1287,
									"id": 2110,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_2018": {
									"entryPoint": 1654,
									"id": 2018,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2942": {
									"entryPoint": 1617,
									"id": 2942,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_2127": {
									"entryPoint": 1260,
									"id": 2127,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2160": {
									"entryPoint": 2192,
									"id": 2160,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1113": {
									"entryPoint": 5731,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2930": {
									"entryPoint": 1564,
									"id": 2930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_2040": {
									"entryPoint": 1117,
									"id": 2040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2031": {
									"entryPoint": 1637,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1637": {
									"entryPoint": 1855,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1668": {
									"entryPoint": 1836,
									"id": 1668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2224": {
									"entryPoint": 1586,
									"id": 2224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2250": {
									"entryPoint": 2061,
									"id": 2250,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2143": {
									"entryPoint": 2039,
									"id": 2143,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1765": {
									"entryPoint": 2466,
									"id": 1765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1990": {
									"entryPoint": 892,
									"id": 1990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2049": {
									"entryPoint": 1895,
									"id": 2049,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1356": {
									"entryPoint": 4830,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2085": {
									"entryPoint": 2090,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2206": {
									"entryPoint": 1309,
									"id": 2206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1696": {
									"entryPoint": 2334,
									"id": 1696,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7964,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14643:1",
										"nodeType": "YulBlock",
										"src": "0:14643:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:77:1",
													"nodeType": "YulBlock",
													"src": "1860:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:1"
																},
																"nativeSrc": "1871:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:1"
															},
															"nativeSrc": "1871:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nativeSrc": "1910:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:1"
															},
															"nativeSrc": "1903:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:139:1"
											},
											{
												"body": {
													"nativeSrc": "1991:54:1",
													"nodeType": "YulBlock",
													"src": "1991:54:1",
													"statements": [
														{
															"nativeSrc": "2001:38:1",
															"nodeType": "YulAssignment",
															"src": "2001:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nativeSrc": "2015:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:1"
																		},
																		"nativeSrc": "2031:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nativeSrc": "2011:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:1",
														"nodeType": "YulTypedName",
														"src": "1974:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:1",
														"nodeType": "YulTypedName",
														"src": "1984:6:1",
														"type": ""
													}
												],
												"src": "1943:102:1"
											},
											{
												"body": {
													"nativeSrc": "2143:285:1",
													"nodeType": "YulBlock",
													"src": "2143:285:1",
													"statements": [
														{
															"nativeSrc": "2153:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:1"
																},
																"nativeSrc": "2167:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:1",
															"nodeType": "YulAssignment",
															"src": "2215:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:1"
																},
																"nativeSrc": "2222:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:1"
																		},
																		"nativeSrc": "2337:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:1"
																},
																"nativeSrc": "2302:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:1"
															},
															"nativeSrc": "2302:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:1"
														},
														{
															"nativeSrc": "2376:46:1",
															"nodeType": "YulAssignment",
															"src": "2376:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:1"
																		},
																		"nativeSrc": "2392:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																},
																"nativeSrc": "2383:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:1",
														"nodeType": "YulTypedName",
														"src": "2124:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:1",
														"nodeType": "YulTypedName",
														"src": "2131:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:1",
														"nodeType": "YulTypedName",
														"src": "2139:3:1",
														"type": ""
													}
												],
												"src": "2051:377:1"
											},
											{
												"body": {
													"nativeSrc": "2552:195:1",
													"nodeType": "YulBlock",
													"src": "2552:195:1",
													"statements": [
														{
															"nativeSrc": "2562:26:1",
															"nodeType": "YulAssignment",
															"src": "2562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:1"
																},
																"nativeSrc": "2570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nativeSrc": "2605:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:1"
																		},
																		"nativeSrc": "2624:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:1"
																},
																"nativeSrc": "2598:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:1"
															},
															"nativeSrc": "2598:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:1"
														},
														{
															"nativeSrc": "2654:86:1",
															"nodeType": "YulAssignment",
															"src": "2654:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:1"
																},
																"nativeSrc": "2662:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:1",
														"nodeType": "YulTypedName",
														"src": "2524:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:1",
														"nodeType": "YulTypedName",
														"src": "2536:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:1",
														"nodeType": "YulTypedName",
														"src": "2547:4:1",
														"type": ""
													}
												],
												"src": "2434:313:1"
											},
											{
												"body": {
													"nativeSrc": "2798:32:1",
													"nodeType": "YulBlock",
													"src": "2798:32:1",
													"statements": [
														{
															"nativeSrc": "2808:16:1",
															"nodeType": "YulAssignment",
															"src": "2808:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:1",
																"nodeType": "YulIdentifier",
																"src": "2819:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:1",
														"nodeType": "YulTypedName",
														"src": "2780:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:1",
														"nodeType": "YulTypedName",
														"src": "2790:7:1",
														"type": ""
													}
												],
												"src": "2753:77:1"
											},
											{
												"body": {
													"nativeSrc": "2879:79:1",
													"nodeType": "YulBlock",
													"src": "2879:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:1",
																"nodeType": "YulBlock",
																"src": "2936:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:1"
																			},
																			"nativeSrc": "2938:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:1"
																		},
																		"nativeSrc": "2938:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:1"
																				},
																				"nativeSrc": "2909:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:1"
																		},
																		"nativeSrc": "2899:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:1"
																},
																"nativeSrc": "2892:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:1"
															},
															"nativeSrc": "2889:63:1",
															"nodeType": "YulIf",
															"src": "2889:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:1",
														"nodeType": "YulTypedName",
														"src": "2872:5:1",
														"type": ""
													}
												],
												"src": "2836:122:1"
											},
											{
												"body": {
													"nativeSrc": "3016:87:1",
													"nodeType": "YulBlock",
													"src": "3016:87:1",
													"statements": [
														{
															"nativeSrc": "3026:29:1",
															"nodeType": "YulAssignment",
															"src": "3026:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:1"
																},
																"nativeSrc": "3035:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:1"
																},
																"nativeSrc": "3064:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:1"
															},
															"nativeSrc": "3064:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:1",
														"nodeType": "YulTypedName",
														"src": "2994:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:1",
														"nodeType": "YulTypedName",
														"src": "3002:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:1",
														"nodeType": "YulTypedName",
														"src": "3010:5:1",
														"type": ""
													}
												],
												"src": "2964:139:1"
											},
											{
												"body": {
													"nativeSrc": "3175:263:1",
													"nodeType": "YulBlock",
													"src": "3175:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:1",
																"nodeType": "YulBlock",
																"src": "3221:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:1"
																			},
																			"nativeSrc": "3223:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:1"
																		},
																		"nativeSrc": "3223:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:1"
																		},
																		"nativeSrc": "3192:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:1"
																},
																"nativeSrc": "3188:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:1"
															},
															"nativeSrc": "3185:119:1",
															"nodeType": "YulIf",
															"src": "3185:119:1"
														},
														{
															"nativeSrc": "3314:117:1",
															"nodeType": "YulBlock",
															"src": "3314:117:1",
															"statements": [
																{
																	"nativeSrc": "3329:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:1"
																				},
																				"nativeSrc": "3389:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:1"
																		},
																		"nativeSrc": "3368:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:1",
														"nodeType": "YulTypedName",
														"src": "3145:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:1",
														"nodeType": "YulTypedName",
														"src": "3156:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:1",
														"nodeType": "YulTypedName",
														"src": "3168:6:1",
														"type": ""
													}
												],
												"src": "3109:329:1"
											},
											{
												"body": {
													"nativeSrc": "3489:81:1",
													"nodeType": "YulBlock",
													"src": "3489:81:1",
													"statements": [
														{
															"nativeSrc": "3499:65:1",
															"nodeType": "YulAssignment",
															"src": "3499:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																},
																"nativeSrc": "3510:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:1",
														"nodeType": "YulTypedName",
														"src": "3471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:1",
														"nodeType": "YulTypedName",
														"src": "3481:7:1",
														"type": ""
													}
												],
												"src": "3444:126:1"
											},
											{
												"body": {
													"nativeSrc": "3621:51:1",
													"nodeType": "YulBlock",
													"src": "3621:51:1",
													"statements": [
														{
															"nativeSrc": "3631:35:1",
															"nodeType": "YulAssignment",
															"src": "3631:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:1"
																},
																"nativeSrc": "3642:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:1",
														"nodeType": "YulTypedName",
														"src": "3603:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:1",
														"nodeType": "YulTypedName",
														"src": "3613:7:1",
														"type": ""
													}
												],
												"src": "3576:96:1"
											},
											{
												"body": {
													"nativeSrc": "3743:53:1",
													"nodeType": "YulBlock",
													"src": "3743:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:1"
																		},
																		"nativeSrc": "3765:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nativeSrc": "3753:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:1"
															},
															"nativeSrc": "3753:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:1",
														"nodeType": "YulTypedName",
														"src": "3731:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:1",
														"nodeType": "YulTypedName",
														"src": "3738:3:1",
														"type": ""
													}
												],
												"src": "3678:118:1"
											},
											{
												"body": {
													"nativeSrc": "3900:124:1",
													"nodeType": "YulBlock",
													"src": "3900:124:1",
													"statements": [
														{
															"nativeSrc": "3910:26:1",
															"nodeType": "YulAssignment",
															"src": "3910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:1"
																},
																"nativeSrc": "3918:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:1"
																		},
																		"nativeSrc": "3999:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:1"
																},
																"nativeSrc": "3946:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:1"
															},
															"nativeSrc": "3946:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:1",
														"nodeType": "YulTypedName",
														"src": "3872:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:1",
														"nodeType": "YulTypedName",
														"src": "3884:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:1",
														"nodeType": "YulTypedName",
														"src": "3895:4:1",
														"type": ""
													}
												],
												"src": "3802:222:1"
											},
											{
												"body": {
													"nativeSrc": "4073:79:1",
													"nodeType": "YulBlock",
													"src": "4073:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:1",
																"nodeType": "YulBlock",
																"src": "4130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:1"
																			},
																			"nativeSrc": "4132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:1"
																		},
																		"nativeSrc": "4132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:1"
																				},
																				"nativeSrc": "4103:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:1"
																		},
																		"nativeSrc": "4093:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:1"
																},
																"nativeSrc": "4086:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:1"
															},
															"nativeSrc": "4083:63:1",
															"nodeType": "YulIf",
															"src": "4083:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:1",
														"nodeType": "YulTypedName",
														"src": "4066:5:1",
														"type": ""
													}
												],
												"src": "4030:122:1"
											},
											{
												"body": {
													"nativeSrc": "4210:87:1",
													"nodeType": "YulBlock",
													"src": "4210:87:1",
													"statements": [
														{
															"nativeSrc": "4220:29:1",
															"nodeType": "YulAssignment",
															"src": "4220:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:1"
																},
																"nativeSrc": "4229:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:1"
																},
																"nativeSrc": "4258:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:1"
															},
															"nativeSrc": "4258:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:1",
														"nodeType": "YulTypedName",
														"src": "4188:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:1",
														"nodeType": "YulTypedName",
														"src": "4196:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:1",
														"nodeType": "YulTypedName",
														"src": "4204:5:1",
														"type": ""
													}
												],
												"src": "4158:139:1"
											},
											{
												"body": {
													"nativeSrc": "4386:391:1",
													"nodeType": "YulBlock",
													"src": "4386:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:1",
																"nodeType": "YulBlock",
																"src": "4432:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:1"
																			},
																			"nativeSrc": "4434:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:1"
																		},
																		"nativeSrc": "4434:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nativeSrc": "4403:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:1"
																},
																"nativeSrc": "4399:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:1"
															},
															"nativeSrc": "4396:119:1",
															"nodeType": "YulIf",
															"src": "4396:119:1"
														},
														{
															"nativeSrc": "4525:117:1",
															"nodeType": "YulBlock",
															"src": "4525:117:1",
															"statements": [
																{
																	"nativeSrc": "4540:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:1"
																				},
																				"nativeSrc": "4600:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:1"
																		},
																		"nativeSrc": "4579:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:1",
															"nodeType": "YulBlock",
															"src": "4652:118:1",
															"statements": [
																{
																	"nativeSrc": "4667:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:1"
																				},
																				"nativeSrc": "4728:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:1"
																		},
																		"nativeSrc": "4707:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:1",
														"nodeType": "YulTypedName",
														"src": "4348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:1",
														"nodeType": "YulTypedName",
														"src": "4359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:1",
														"nodeType": "YulTypedName",
														"src": "4371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:1",
														"nodeType": "YulTypedName",
														"src": "4379:6:1",
														"type": ""
													}
												],
												"src": "4303:474:1"
											},
											{
												"body": {
													"nativeSrc": "4883:519:1",
													"nodeType": "YulBlock",
													"src": "4883:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:1",
																"nodeType": "YulBlock",
																"src": "4929:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:1"
																			},
																			"nativeSrc": "4931:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:1"
																		},
																		"nativeSrc": "4931:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:1"
																		},
																		"nativeSrc": "4900:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:1"
																},
																"nativeSrc": "4896:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:1"
															},
															"nativeSrc": "4893:119:1",
															"nodeType": "YulIf",
															"src": "4893:119:1"
														},
														{
															"nativeSrc": "5022:117:1",
															"nodeType": "YulBlock",
															"src": "5022:117:1",
															"statements": [
																{
																	"nativeSrc": "5037:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:1"
																				},
																				"nativeSrc": "5097:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:1"
																		},
																		"nativeSrc": "5076:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:1",
															"nodeType": "YulBlock",
															"src": "5149:118:1",
															"statements": [
																{
																	"nativeSrc": "5164:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:1"
																				},
																				"nativeSrc": "5225:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:1"
																		},
																		"nativeSrc": "5204:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:1",
															"nodeType": "YulBlock",
															"src": "5277:118:1",
															"statements": [
																{
																	"nativeSrc": "5292:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:1"
																				},
																				"nativeSrc": "5353:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:1"
																		},
																		"nativeSrc": "5332:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:1",
														"nodeType": "YulTypedName",
														"src": "4837:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:1",
														"nodeType": "YulTypedName",
														"src": "4848:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:1",
														"nodeType": "YulTypedName",
														"src": "4860:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:1",
														"nodeType": "YulTypedName",
														"src": "4868:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:1",
														"nodeType": "YulTypedName",
														"src": "4876:6:1",
														"type": ""
													}
												],
												"src": "4783:619:1"
											},
											{
												"body": {
													"nativeSrc": "5474:263:1",
													"nodeType": "YulBlock",
													"src": "5474:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:1",
																"nodeType": "YulBlock",
																"src": "5520:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:1"
																			},
																			"nativeSrc": "5522:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:1"
																		},
																		"nativeSrc": "5522:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:1"
																		},
																		"nativeSrc": "5491:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:1"
																},
																"nativeSrc": "5487:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:1"
															},
															"nativeSrc": "5484:119:1",
															"nodeType": "YulIf",
															"src": "5484:119:1"
														},
														{
															"nativeSrc": "5613:117:1",
															"nodeType": "YulBlock",
															"src": "5613:117:1",
															"statements": [
																{
																	"nativeSrc": "5628:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:1"
																				},
																				"nativeSrc": "5688:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:1"
																		},
																		"nativeSrc": "5667:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:1",
														"nodeType": "YulTypedName",
														"src": "5444:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:1",
														"nodeType": "YulTypedName",
														"src": "5455:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:1",
														"nodeType": "YulTypedName",
														"src": "5467:6:1",
														"type": ""
													}
												],
												"src": "5408:329:1"
											},
											{
												"body": {
													"nativeSrc": "5808:53:1",
													"nodeType": "YulBlock",
													"src": "5808:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:1"
																		},
																		"nativeSrc": "5830:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:1"
																},
																"nativeSrc": "5818:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:1"
															},
															"nativeSrc": "5818:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:1",
														"nodeType": "YulTypedName",
														"src": "5796:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:1",
														"nodeType": "YulTypedName",
														"src": "5803:3:1",
														"type": ""
													}
												],
												"src": "5743:118:1"
											},
											{
												"body": {
													"nativeSrc": "5965:124:1",
													"nodeType": "YulBlock",
													"src": "5965:124:1",
													"statements": [
														{
															"nativeSrc": "5975:26:1",
															"nodeType": "YulAssignment",
															"src": "5975:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:1"
																},
																"nativeSrc": "5983:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:1"
																		},
																		"nativeSrc": "6064:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:1"
																},
																"nativeSrc": "6011:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:1"
															},
															"nativeSrc": "6011:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:1",
														"nodeType": "YulTypedName",
														"src": "5937:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:1",
														"nodeType": "YulTypedName",
														"src": "5949:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:1",
														"nodeType": "YulTypedName",
														"src": "5960:4:1",
														"type": ""
													}
												],
												"src": "5867:222:1"
											},
											{
												"body": {
													"nativeSrc": "6135:76:1",
													"nodeType": "YulBlock",
													"src": "6135:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:1",
																"nodeType": "YulBlock",
																"src": "6189:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:1"
																			},
																			"nativeSrc": "6191:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:1"
																		},
																		"nativeSrc": "6191:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:1"
																				},
																				"nativeSrc": "6165:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:1"
																		},
																		"nativeSrc": "6155:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:1"
																},
																"nativeSrc": "6148:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:1"
															},
															"nativeSrc": "6145:60:1",
															"nodeType": "YulIf",
															"src": "6145:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:1",
														"nodeType": "YulTypedName",
														"src": "6128:5:1",
														"type": ""
													}
												],
												"src": "6095:116:1"
											},
											{
												"body": {
													"nativeSrc": "6266:84:1",
													"nodeType": "YulBlock",
													"src": "6266:84:1",
													"statements": [
														{
															"nativeSrc": "6276:29:1",
															"nodeType": "YulAssignment",
															"src": "6276:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:1"
																},
																"nativeSrc": "6285:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:1"
																},
																"nativeSrc": "6314:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:1"
															},
															"nativeSrc": "6314:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:1",
														"nodeType": "YulTypedName",
														"src": "6244:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:1",
														"nodeType": "YulTypedName",
														"src": "6252:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:1",
														"nodeType": "YulTypedName",
														"src": "6260:5:1",
														"type": ""
													}
												],
												"src": "6217:133:1"
											},
											{
												"body": {
													"nativeSrc": "6436:388:1",
													"nodeType": "YulBlock",
													"src": "6436:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:1",
																"nodeType": "YulBlock",
																"src": "6482:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:1"
																			},
																			"nativeSrc": "6484:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:1"
																		},
																		"nativeSrc": "6484:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:1"
																		},
																		"nativeSrc": "6453:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:1"
																},
																"nativeSrc": "6449:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:1"
															},
															"nativeSrc": "6446:119:1",
															"nodeType": "YulIf",
															"src": "6446:119:1"
														},
														{
															"nativeSrc": "6575:117:1",
															"nodeType": "YulBlock",
															"src": "6575:117:1",
															"statements": [
																{
																	"nativeSrc": "6590:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:1"
																				},
																				"nativeSrc": "6650:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:1"
																		},
																		"nativeSrc": "6629:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:1",
															"nodeType": "YulBlock",
															"src": "6702:115:1",
															"statements": [
																{
																	"nativeSrc": "6717:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:1"
																				},
																				"nativeSrc": "6775:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:1"
																		},
																		"nativeSrc": "6757:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:1",
														"nodeType": "YulTypedName",
														"src": "6398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:1",
														"nodeType": "YulTypedName",
														"src": "6409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:1",
														"nodeType": "YulTypedName",
														"src": "6421:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:1",
														"nodeType": "YulTypedName",
														"src": "6429:6:1",
														"type": ""
													}
												],
												"src": "6356:468:1"
											},
											{
												"body": {
													"nativeSrc": "6919:28:1",
													"nodeType": "YulBlock",
													"src": "6919:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nativeSrc": "6929:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:1"
															},
															"nativeSrc": "6929:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:1"
											},
											{
												"body": {
													"nativeSrc": "7042:28:1",
													"nodeType": "YulBlock",
													"src": "7042:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:1"
																},
																"nativeSrc": "7052:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:1"
															},
															"nativeSrc": "7052:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:1"
											},
											{
												"body": {
													"nativeSrc": "7104:152:1",
													"nodeType": "YulBlock",
													"src": "7104:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:1"
																},
																"nativeSrc": "7114:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:1"
															},
															"nativeSrc": "7114:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:1"
																},
																"nativeSrc": "7211:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:1"
															},
															"nativeSrc": "7211:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:1"
																},
																"nativeSrc": "7235:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:1"
															},
															"nativeSrc": "7235:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:1"
											},
											{
												"body": {
													"nativeSrc": "7305:238:1",
													"nodeType": "YulBlock",
													"src": "7305:238:1",
													"statements": [
														{
															"nativeSrc": "7315:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:1"
																		},
																		"nativeSrc": "7345:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:1"
																},
																"nativeSrc": "7333:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:1",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:1",
																"nodeType": "YulBlock",
																"src": "7484:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:1"
																			},
																			"nativeSrc": "7486:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:1"
																		},
																		"nativeSrc": "7486:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:1",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:1"
																		},
																		"nativeSrc": "7424:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:1"
																		},
																		"nativeSrc": "7460:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:1"
																},
																"nativeSrc": "7421:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:1"
															},
															"nativeSrc": "7418:88:1",
															"nodeType": "YulIf",
															"src": "7418:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:1"
																},
																"nativeSrc": "7515:22:1",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:1"
															},
															"nativeSrc": "7515:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:1",
														"nodeType": "YulTypedName",
														"src": "7291:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:1",
														"nodeType": "YulTypedName",
														"src": "7299:4:1",
														"type": ""
													}
												],
												"src": "7262:281:1"
											},
											{
												"body": {
													"nativeSrc": "7590:88:1",
													"nodeType": "YulBlock",
													"src": "7590:88:1",
													"statements": [
														{
															"nativeSrc": "7600:30:1",
															"nodeType": "YulAssignment",
															"src": "7600:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:1"
																},
																"nativeSrc": "7610:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:1"
																},
																"nativeSrc": "7639:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:1"
															},
															"nativeSrc": "7639:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:1",
														"nodeType": "YulTypedName",
														"src": "7574:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:1",
														"nodeType": "YulTypedName",
														"src": "7583:6:1",
														"type": ""
													}
												],
												"src": "7549:129:1"
											},
											{
												"body": {
													"nativeSrc": "7750:241:1",
													"nodeType": "YulBlock",
													"src": "7750:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:1",
																"nodeType": "YulBlock",
																"src": "7855:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:1"
																			},
																			"nativeSrc": "7857:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:1"
																		},
																		"nativeSrc": "7857:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:1"
																},
																"nativeSrc": "7824:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:1"
															},
															"nativeSrc": "7821:56:1",
															"nodeType": "YulIf",
															"src": "7821:56:1"
														},
														{
															"nativeSrc": "7887:37:1",
															"nodeType": "YulAssignment",
															"src": "7887:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:1"
																},
																"nativeSrc": "7895:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:1"
																}
															]
														},
														{
															"nativeSrc": "7961:23:1",
															"nodeType": "YulAssignment",
															"src": "7961:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:1"
																},
																"nativeSrc": "7969:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:1",
														"nodeType": "YulTypedName",
														"src": "7734:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:1",
														"nodeType": "YulTypedName",
														"src": "7745:4:1",
														"type": ""
													}
												],
												"src": "7684:307:1"
											},
											{
												"body": {
													"nativeSrc": "8061:84:1",
													"nodeType": "YulBlock",
													"src": "8061:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:1"
																},
																"nativeSrc": "8072:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:1"
															},
															"nativeSrc": "8072:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:1"
																		},
																		"nativeSrc": "8118:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:1"
																},
																"nativeSrc": "8111:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:1"
															},
															"nativeSrc": "8111:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:1",
														"nodeType": "YulTypedName",
														"src": "8043:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:1",
														"nodeType": "YulTypedName",
														"src": "8048:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:1",
														"nodeType": "YulTypedName",
														"src": "8053:6:1",
														"type": ""
													}
												],
												"src": "7997:148:1"
											},
											{
												"body": {
													"nativeSrc": "8234:340:1",
													"nodeType": "YulBlock",
													"src": "8234:340:1",
													"statements": [
														{
															"nativeSrc": "8244:74:1",
															"nodeType": "YulAssignment",
															"src": "8244:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:1"
																		},
																		"nativeSrc": "8269:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:1"
																},
																"nativeSrc": "8253:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:1"
																},
																"nativeSrc": "8327:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:1"
															},
															"nativeSrc": "8327:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:1"
														},
														{
															"nativeSrc": "8357:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:1"
																},
																"nativeSrc": "8368:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:1",
																"nodeType": "YulBlock",
																"src": "8422:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:1"
																			},
																			"nativeSrc": "8424:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:1"
																		},
																		"nativeSrc": "8424:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:1"
																		},
																		"nativeSrc": "8399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:1"
																},
																"nativeSrc": "8396:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:1"
															},
															"nativeSrc": "8393:112:1",
															"nodeType": "YulIf",
															"src": "8393:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:1"
																},
																"nativeSrc": "8514:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:1"
															},
															"nativeSrc": "8514:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:1",
														"nodeType": "YulTypedName",
														"src": "8207:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:1",
														"nodeType": "YulTypedName",
														"src": "8212:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:1",
														"nodeType": "YulTypedName",
														"src": "8220:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:1",
														"nodeType": "YulTypedName",
														"src": "8228:5:1",
														"type": ""
													}
												],
												"src": "8151:423:1"
											},
											{
												"body": {
													"nativeSrc": "8654:277:1",
													"nodeType": "YulBlock",
													"src": "8654:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:1",
																"nodeType": "YulBlock",
																"src": "8703:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:1"
																			},
																			"nativeSrc": "8705:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:1"
																		},
																		"nativeSrc": "8705:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:1"
																				},
																				"nativeSrc": "8678:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:1"
																		},
																		"nativeSrc": "8674:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:1"
																},
																"nativeSrc": "8667:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:1"
															},
															"nativeSrc": "8664:122:1",
															"nodeType": "YulIf",
															"src": "8664:122:1"
														},
														{
															"nativeSrc": "8795:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:1"
																},
																"nativeSrc": "8809:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:1",
															"nodeType": "YulAssignment",
															"src": "8838:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:1"
																		},
																		"nativeSrc": "8894:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:1"
																},
																"nativeSrc": "8847:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:1",
														"nodeType": "YulTypedName",
														"src": "8632:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:1",
														"nodeType": "YulTypedName",
														"src": "8640:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:1",
														"nodeType": "YulTypedName",
														"src": "8648:5:1",
														"type": ""
													}
												],
												"src": "8593:338:1"
											},
											{
												"body": {
													"nativeSrc": "9063:817:1",
													"nodeType": "YulBlock",
													"src": "9063:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:1",
																"nodeType": "YulBlock",
																"src": "9110:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:1"
																			},
																			"nativeSrc": "9112:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:1"
																		},
																		"nativeSrc": "9112:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:1"
																		},
																		"nativeSrc": "9080:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:1"
																},
																"nativeSrc": "9076:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:1"
															},
															"nativeSrc": "9073:120:1",
															"nodeType": "YulIf",
															"src": "9073:120:1"
														},
														{
															"nativeSrc": "9203:117:1",
															"nodeType": "YulBlock",
															"src": "9203:117:1",
															"statements": [
																{
																	"nativeSrc": "9218:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:1"
																				},
																				"nativeSrc": "9278:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:1"
																		},
																		"nativeSrc": "9257:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:1",
															"nodeType": "YulBlock",
															"src": "9330:118:1",
															"statements": [
																{
																	"nativeSrc": "9345:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:1"
																				},
																				"nativeSrc": "9406:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:1"
																		},
																		"nativeSrc": "9385:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:1",
															"nodeType": "YulBlock",
															"src": "9458:118:1",
															"statements": [
																{
																	"nativeSrc": "9473:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:1"
																				},
																				"nativeSrc": "9534:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:1"
																		},
																		"nativeSrc": "9513:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:1",
															"nodeType": "YulBlock",
															"src": "9586:287:1",
															"statements": [
																{
																	"nativeSrc": "9601:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:1"
																				},
																				"nativeSrc": "9628:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:1"
																		},
																		"nativeSrc": "9615:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:1",
																		"nodeType": "YulBlock",
																		"src": "9694:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:1"
																					},
																					"nativeSrc": "9696:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:1"
																				},
																				"nativeSrc": "9696:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:1"
																		},
																		"nativeSrc": "9663:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:1"
																	},
																	"nativeSrc": "9660:117:1",
																	"nodeType": "YulIf",
																	"src": "9660:117:1"
																},
																{
																	"nativeSrc": "9791:72:1",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:1"
																				},
																				"nativeSrc": "9831:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:1"
																		},
																		"nativeSrc": "9801:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:1",
														"nodeType": "YulTypedName",
														"src": "9009:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:1",
														"nodeType": "YulTypedName",
														"src": "9020:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:1",
														"nodeType": "YulTypedName",
														"src": "9032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:1",
														"nodeType": "YulTypedName",
														"src": "9040:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:1",
														"nodeType": "YulTypedName",
														"src": "9048:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:1",
														"nodeType": "YulTypedName",
														"src": "9056:6:1",
														"type": ""
													}
												],
												"src": "8937:943:1"
											},
											{
												"body": {
													"nativeSrc": "9969:391:1",
													"nodeType": "YulBlock",
													"src": "9969:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:1",
																"nodeType": "YulBlock",
																"src": "10015:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:1"
																			},
																			"nativeSrc": "10017:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:1"
																		},
																		"nativeSrc": "10017:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:1"
																		},
																		"nativeSrc": "9986:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:1"
																},
																"nativeSrc": "9982:32:1",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:1"
															},
															"nativeSrc": "9979:119:1",
															"nodeType": "YulIf",
															"src": "9979:119:1"
														},
														{
															"nativeSrc": "10108:117:1",
															"nodeType": "YulBlock",
															"src": "10108:117:1",
															"statements": [
																{
																	"nativeSrc": "10123:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:1"
																				},
																				"nativeSrc": "10183:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:1"
																		},
																		"nativeSrc": "10162:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:1",
															"nodeType": "YulBlock",
															"src": "10235:118:1",
															"statements": [
																{
																	"nativeSrc": "10250:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:1"
																				},
																				"nativeSrc": "10311:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:1"
																		},
																		"nativeSrc": "10290:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:1",
														"nodeType": "YulTypedName",
														"src": "9931:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:1",
														"nodeType": "YulTypedName",
														"src": "9942:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:1",
														"nodeType": "YulTypedName",
														"src": "9954:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:1",
														"nodeType": "YulTypedName",
														"src": "9962:6:1",
														"type": ""
													}
												],
												"src": "9886:474:1"
											},
											{
												"body": {
													"nativeSrc": "10394:152:1",
													"nodeType": "YulBlock",
													"src": "10394:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:1"
																},
																"nativeSrc": "10404:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:1"
															},
															"nativeSrc": "10404:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:1"
																},
																"nativeSrc": "10501:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:1"
															},
															"nativeSrc": "10501:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:1"
																},
																"nativeSrc": "10525:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:1"
															},
															"nativeSrc": "10525:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:1"
											},
											{
												"body": {
													"nativeSrc": "10603:269:1",
													"nodeType": "YulBlock",
													"src": "10603:269:1",
													"statements": [
														{
															"nativeSrc": "10613:22:1",
															"nodeType": "YulAssignment",
															"src": "10613:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:1"
																},
																"nativeSrc": "10623:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:1"
																}
															]
														},
														{
															"nativeSrc": "10644:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:1"
																},
																"nativeSrc": "10670:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:1",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:1",
																"nodeType": "YulBlock",
																"src": "10721:51:1",
																"statements": [
																	{
																		"nativeSrc": "10735:27:1",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:1"
																			},
																			"nativeSrc": "10745:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:1"
																},
																"nativeSrc": "10694:26:1",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:1"
															},
															"nativeSrc": "10691:81:1",
															"nodeType": "YulIf",
															"src": "10691:81:1"
														},
														{
															"body": {
																"nativeSrc": "10824:42:1",
																"nodeType": "YulBlock",
																"src": "10824:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:1"
																			},
																			"nativeSrc": "10838:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:1"
																		},
																		"nativeSrc": "10838:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:1"
																		},
																		"nativeSrc": "10808:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:1"
																},
																"nativeSrc": "10785:38:1",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:1"
															},
															"nativeSrc": "10782:84:1",
															"nodeType": "YulIf",
															"src": "10782:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:1",
														"nodeType": "YulTypedName",
														"src": "10587:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:1",
														"nodeType": "YulTypedName",
														"src": "10596:6:1",
														"type": ""
													}
												],
												"src": "10552:320:1"
											},
											{
												"body": {
													"nativeSrc": "11032:288:1",
													"nodeType": "YulBlock",
													"src": "11032:288:1",
													"statements": [
														{
															"nativeSrc": "11042:26:1",
															"nodeType": "YulAssignment",
															"src": "11042:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:1"
																},
																"nativeSrc": "11050:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:1"
																		},
																		"nativeSrc": "11131:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11078:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:1"
																},
																"nativeSrc": "11078:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:1"
															},
															"nativeSrc": "11078:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11203:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11203:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11227:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:1"
																		},
																		"nativeSrc": "11212:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11159:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11159:43:1"
																},
																"nativeSrc": "11159:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11159:72:1"
															},
															"nativeSrc": "11159:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11159:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11285:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11309:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11294:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:1"
																		},
																		"nativeSrc": "11294:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11294:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11241:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11241:43:1"
																},
																"nativeSrc": "11241:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11241:72:1"
															},
															"nativeSrc": "11241:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11241:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10878:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10988:9:1",
														"nodeType": "YulTypedName",
														"src": "10988:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11000:6:1",
														"nodeType": "YulTypedName",
														"src": "11000:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11008:6:1",
														"nodeType": "YulTypedName",
														"src": "11008:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:1",
														"nodeType": "YulTypedName",
														"src": "11016:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:1",
														"nodeType": "YulTypedName",
														"src": "11027:4:1",
														"type": ""
													}
												],
												"src": "10878:442:1"
											},
											{
												"body": {
													"nativeSrc": "11440:34:1",
													"nodeType": "YulBlock",
													"src": "11440:34:1",
													"statements": [
														{
															"nativeSrc": "11450:18:1",
															"nodeType": "YulAssignment",
															"src": "11450:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "11465:3:1",
																"nodeType": "YulIdentifier",
																"src": "11465:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11450:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "11450:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11326:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11412:3:1",
														"nodeType": "YulTypedName",
														"src": "11412:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11417:6:1",
														"nodeType": "YulTypedName",
														"src": "11417:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11428:11:1",
														"nodeType": "YulTypedName",
														"src": "11428:11:1",
														"type": ""
													}
												],
												"src": "11326:148:1"
											},
											{
												"body": {
													"nativeSrc": "11590:280:1",
													"nodeType": "YulBlock",
													"src": "11590:280:1",
													"statements": [
														{
															"nativeSrc": "11600:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11600:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11647:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11647:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11614:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "11614:32:1"
																},
																"nativeSrc": "11614:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11614:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11604:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11604:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11662:96:1",
															"nodeType": "YulAssignment",
															"src": "11662:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11746:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11746:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11751:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11669:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "11669:76:1"
																},
																"nativeSrc": "11669:89:1",
																"nodeType": "YulFunctionCall",
																"src": "11669:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11662:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11662:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11806:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11806:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11813:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11813:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:1"
																		},
																		"nativeSrc": "11802:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11802:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11820:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11820:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11825:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11825:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11767:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "11767:34:1"
																},
																"nativeSrc": "11767:65:1",
																"nodeType": "YulFunctionCall",
																"src": "11767:65:1"
															},
															"nativeSrc": "11767:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "11767:65:1"
														},
														{
															"nativeSrc": "11841:23:1",
															"nodeType": "YulAssignment",
															"src": "11841:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11852:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11852:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11857:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11857:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11848:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:1"
																},
																"nativeSrc": "11848:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11848:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11841:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11480:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11571:5:1",
														"nodeType": "YulTypedName",
														"src": "11571:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11578:3:1",
														"nodeType": "YulTypedName",
														"src": "11578:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11586:3:1",
														"nodeType": "YulTypedName",
														"src": "11586:3:1",
														"type": ""
													}
												],
												"src": "11480:390:1"
											},
											{
												"body": {
													"nativeSrc": "12060:251:1",
													"nodeType": "YulBlock",
													"src": "12060:251:1",
													"statements": [
														{
															"nativeSrc": "12071:102:1",
															"nodeType": "YulAssignment",
															"src": "12071:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12160:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12160:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12169:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12169:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12078:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "12078:81:1"
																},
																"nativeSrc": "12078:95:1",
																"nodeType": "YulFunctionCall",
																"src": "12078:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12071:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12071:3:1"
																}
															]
														},
														{
															"nativeSrc": "12183:102:1",
															"nodeType": "YulAssignment",
															"src": "12183:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12272:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12272:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12281:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12281:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12190:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "12190:81:1"
																},
																"nativeSrc": "12190:95:1",
																"nodeType": "YulFunctionCall",
																"src": "12190:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12183:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12183:3:1"
																}
															]
														},
														{
															"nativeSrc": "12295:10:1",
															"nodeType": "YulAssignment",
															"src": "12295:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "12302:3:1",
																"nodeType": "YulIdentifier",
																"src": "12302:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12295:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11876:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12031:3:1",
														"nodeType": "YulTypedName",
														"src": "12031:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12037:6:1",
														"nodeType": "YulTypedName",
														"src": "12037:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12045:6:1",
														"nodeType": "YulTypedName",
														"src": "12045:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12056:3:1",
														"nodeType": "YulTypedName",
														"src": "12056:3:1",
														"type": ""
													}
												],
												"src": "11876:435:1"
											},
											{
												"body": {
													"nativeSrc": "12375:40:1",
													"nodeType": "YulBlock",
													"src": "12375:40:1",
													"statements": [
														{
															"nativeSrc": "12386:22:1",
															"nodeType": "YulAssignment",
															"src": "12386:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12402:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12402:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12396:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12396:5:1"
																},
																"nativeSrc": "12396:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12396:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12386:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12386:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12317:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12358:5:1",
														"nodeType": "YulTypedName",
														"src": "12358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12368:6:1",
														"nodeType": "YulTypedName",
														"src": "12368:6:1",
														"type": ""
													}
												],
												"src": "12317:98:1"
											},
											{
												"body": {
													"nativeSrc": "12516:73:1",
													"nodeType": "YulBlock",
													"src": "12516:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12533:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12538:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:1"
																},
																"nativeSrc": "12526:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12526:19:1"
															},
															"nativeSrc": "12526:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "12526:19:1"
														},
														{
															"nativeSrc": "12554:29:1",
															"nodeType": "YulAssignment",
															"src": "12554:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12573:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12578:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12578:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12569:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12569:3:1"
																},
																"nativeSrc": "12569:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12569:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12554:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12554:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12421:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12488:3:1",
														"nodeType": "YulTypedName",
														"src": "12488:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12493:6:1",
														"nodeType": "YulTypedName",
														"src": "12493:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12504:11:1",
														"nodeType": "YulTypedName",
														"src": "12504:11:1",
														"type": ""
													}
												],
												"src": "12421:168:1"
											},
											{
												"body": {
													"nativeSrc": "12685:283:1",
													"nodeType": "YulBlock",
													"src": "12685:283:1",
													"statements": [
														{
															"nativeSrc": "12695:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12695:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12741:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12741:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12709:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "12709:31:1"
																},
																"nativeSrc": "12709:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12709:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12699:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12699:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12756:77:1",
															"nodeType": "YulAssignment",
															"src": "12756:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12821:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12821:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12826:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12826:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12763:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "12763:57:1"
																},
																"nativeSrc": "12763:70:1",
																"nodeType": "YulFunctionCall",
																"src": "12763:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12756:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12881:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12881:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12888:4:1",
																				"nodeType": "YulLiteral",
																				"src": "12888:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12877:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12877:3:1"
																		},
																		"nativeSrc": "12877:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12877:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12895:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12895:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12900:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12900:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12842:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "12842:34:1"
																},
																"nativeSrc": "12842:65:1",
																"nodeType": "YulFunctionCall",
																"src": "12842:65:1"
															},
															"nativeSrc": "12842:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "12842:65:1"
														},
														{
															"nativeSrc": "12916:46:1",
															"nodeType": "YulAssignment",
															"src": "12916:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12927:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12927:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12954:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12954:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12932:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "12932:21:1"
																		},
																		"nativeSrc": "12932:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12932:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12923:3:1"
																},
																"nativeSrc": "12923:39:1",
																"nodeType": "YulFunctionCall",
																"src": "12923:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12916:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12595:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12666:5:1",
														"nodeType": "YulTypedName",
														"src": "12666:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12673:3:1",
														"nodeType": "YulTypedName",
														"src": "12673:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12681:3:1",
														"nodeType": "YulTypedName",
														"src": "12681:3:1",
														"type": ""
													}
												],
												"src": "12595:373:1"
											},
											{
												"body": {
													"nativeSrc": "13174:440:1",
													"nodeType": "YulBlock",
													"src": "13174:440:1",
													"statements": [
														{
															"nativeSrc": "13184:27:1",
															"nodeType": "YulAssignment",
															"src": "13184:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13196:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13196:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13207:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13207:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13192:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13192:3:1"
																},
																"nativeSrc": "13192:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13192:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13184:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13184:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13265:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13265:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13278:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13278:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13289:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13289:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13274:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13274:3:1"
																		},
																		"nativeSrc": "13274:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13274:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13221:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13221:43:1"
																},
																"nativeSrc": "13221:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13221:71:1"
															},
															"nativeSrc": "13221:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13221:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13346:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13359:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13359:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13370:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13370:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13355:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13355:3:1"
																		},
																		"nativeSrc": "13355:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13355:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13302:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13302:43:1"
																},
																"nativeSrc": "13302:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13302:72:1"
															},
															"nativeSrc": "13302:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13302:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13428:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13428:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13441:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13452:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13452:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13437:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:1"
																		},
																		"nativeSrc": "13437:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13437:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13384:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13384:43:1"
																},
																"nativeSrc": "13384:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13384:72:1"
															},
															"nativeSrc": "13384:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13384:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13488:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13473:3:1"
																		},
																		"nativeSrc": "13473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13473:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13497:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "13497:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13503:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13503:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:1"
																		},
																		"nativeSrc": "13493:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13466:6:1"
																},
																"nativeSrc": "13466:48:1",
																"nodeType": "YulFunctionCall",
																"src": "13466:48:1"
															},
															"nativeSrc": "13466:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "13466:48:1"
														},
														{
															"nativeSrc": "13523:84:1",
															"nodeType": "YulAssignment",
															"src": "13523:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13593:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13593:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13602:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13602:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13531:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "13531:61:1"
																},
																"nativeSrc": "13531:76:1",
																"nodeType": "YulFunctionCall",
																"src": "13531:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13523:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13523:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12974:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13122:9:1",
														"nodeType": "YulTypedName",
														"src": "13122:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13134:6:1",
														"nodeType": "YulTypedName",
														"src": "13134:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13142:6:1",
														"nodeType": "YulTypedName",
														"src": "13142:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13150:6:1",
														"nodeType": "YulTypedName",
														"src": "13150:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13158:6:1",
														"nodeType": "YulTypedName",
														"src": "13158:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13169:4:1",
														"nodeType": "YulTypedName",
														"src": "13169:4:1",
														"type": ""
													}
												],
												"src": "12974:640:1"
											},
											{
												"body": {
													"nativeSrc": "13682:79:1",
													"nodeType": "YulBlock",
													"src": "13682:79:1",
													"statements": [
														{
															"nativeSrc": "13692:22:1",
															"nodeType": "YulAssignment",
															"src": "13692:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13707:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13707:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13701:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13701:5:1"
																},
																"nativeSrc": "13701:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13701:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13692:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13692:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13749:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13749:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "13723:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "13723:25:1"
																},
																"nativeSrc": "13723:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13723:32:1"
															},
															"nativeSrc": "13723:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "13723:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "13620:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13660:6:1",
														"nodeType": "YulTypedName",
														"src": "13660:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13668:3:1",
														"nodeType": "YulTypedName",
														"src": "13668:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13676:5:1",
														"nodeType": "YulTypedName",
														"src": "13676:5:1",
														"type": ""
													}
												],
												"src": "13620:141:1"
											},
											{
												"body": {
													"nativeSrc": "13843:273:1",
													"nodeType": "YulBlock",
													"src": "13843:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13889:83:1",
																"nodeType": "YulBlock",
																"src": "13889:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13891:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "13891:77:1"
																			},
																			"nativeSrc": "13891:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13891:79:1"
																		},
																		"nativeSrc": "13891:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13891:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13864:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13864:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13860:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:1"
																		},
																		"nativeSrc": "13860:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13885:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13885:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13856:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:1"
																},
																"nativeSrc": "13856:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13856:32:1"
															},
															"nativeSrc": "13853:119:1",
															"nodeType": "YulIf",
															"src": "13853:119:1"
														},
														{
															"nativeSrc": "13982:127:1",
															"nodeType": "YulBlock",
															"src": "13982:127:1",
															"statements": [
																{
																	"nativeSrc": "13997:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13997:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14011:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14011:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14001:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14001:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14026:73:1",
																	"nodeType": "YulAssignment",
																	"src": "14026:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14071:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "14071:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14082:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "14082:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14067:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14067:3:1"
																				},
																				"nativeSrc": "14067:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14067:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14091:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14091:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "14036:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "14036:30:1"
																		},
																		"nativeSrc": "14036:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14026:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "14026:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "13767:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13813:9:1",
														"nodeType": "YulTypedName",
														"src": "13813:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13824:7:1",
														"nodeType": "YulTypedName",
														"src": "13824:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13836:6:1",
														"nodeType": "YulTypedName",
														"src": "13836:6:1",
														"type": ""
													}
												],
												"src": "13767:349:1"
											},
											{
												"body": {
													"nativeSrc": "14150:152:1",
													"nodeType": "YulBlock",
													"src": "14150:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14167:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14167:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14170:77:1",
																		"nodeType": "YulLiteral",
																		"src": "14170:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14160:6:1"
																},
																"nativeSrc": "14160:88:1",
																"nodeType": "YulFunctionCall",
																"src": "14160:88:1"
															},
															"nativeSrc": "14160:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "14160:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14264:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14264:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14267:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14267:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14257:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14257:6:1"
																},
																"nativeSrc": "14257:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14257:15:1"
															},
															"nativeSrc": "14257:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14257:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14288:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14291:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14291:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14281:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14281:6:1"
																},
																"nativeSrc": "14281:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14281:15:1"
															},
															"nativeSrc": "14281:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14281:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14122:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14122:180:1"
											},
											{
												"body": {
													"nativeSrc": "14434:206:1",
													"nodeType": "YulBlock",
													"src": "14434:206:1",
													"statements": [
														{
															"nativeSrc": "14444:26:1",
															"nodeType": "YulAssignment",
															"src": "14444:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14456:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14456:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14467:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14452:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14452:3:1"
																},
																"nativeSrc": "14452:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14452:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14444:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14444:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14524:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14524:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14548:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14548:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:1"
																		},
																		"nativeSrc": "14533:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14533:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14480:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14480:43:1"
																},
																"nativeSrc": "14480:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14480:71:1"
															},
															"nativeSrc": "14480:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14480:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14605:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14629:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:1"
																		},
																		"nativeSrc": "14614:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14561:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:1"
																},
																"nativeSrc": "14561:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14561:72:1"
															},
															"nativeSrc": "14561:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14561:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14308:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14398:9:1",
														"nodeType": "YulTypedName",
														"src": "14398:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14410:6:1",
														"nodeType": "YulTypedName",
														"src": "14410:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14418:6:1",
														"nodeType": "YulTypedName",
														"src": "14418:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14429:4:1",
														"nodeType": "YulTypedName",
														"src": "14429:4:1",
														"type": ""
													}
												],
												"src": "14308:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AA JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x222 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x72C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x446 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x456 JUMPI POP PUSH2 0x455 DUP3 PUSH2 0x9A2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x46B SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x497 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4F6 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP PUSH2 0x500 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x514 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0x59B PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x616 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xD75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x662 DUP2 PUSH2 0xE68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x66F DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x73D PUSH0 PUSH2 0xEEA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x809 PUSH2 0x802 PUSH2 0xACA JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x818 DUP5 DUP5 DUP5 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1116 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP PUSH0 PUSH2 0x83F PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x888 JUMP JUMPDEST DUP1 PUSH2 0x867 DUP5 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x878 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x926 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x996 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99F DUP2 PUSH2 0xEEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA16 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA88 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xADE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAEE DUP5 PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2F JUMPI PUSH2 0xB2E DUP2 DUP5 DUP7 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBA JUMPI PUSH2 0xB6E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC39 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0xACA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD14 PUSH2 0x73F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD73 JUMPI PUSH2 0xD37 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDF1 DUP4 DUP4 PUSH0 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE74 PUSH0 DUP4 PUSH0 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12C2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1159 PUSH2 0xACA JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1237 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x122F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12C0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x12EC DUP5 PUSH2 0x1663 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x133C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x139D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1349 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1419 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x154B JUMPI PUSH0 PUSH2 0x1428 DUP5 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14A5 JUMPI POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x890 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14E7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1549 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15AB DUP4 DUP4 DUP4 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x165E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1655 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16BF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16FC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x172B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1754 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1779 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x176F JUMPI PUSH2 0x176E PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x179C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1FA5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17AB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x182C JUMPI POP PUSH2 0x182B DUP5 DUP5 PUSH2 0x890 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x186A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1852 DUP4 PUSH2 0xA91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B9 DUP2 PUSH2 0x1885 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D4 DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18FC DUP5 DUP3 DUP6 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 DUP2 PUSH2 0x1905 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1932 PUSH0 DUP4 ADD DUP5 PUSH2 0x1910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x197A DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1984 DUP2 DUP6 PUSH2 0x1942 JUMP JUMPDEST SWAP4 POP PUSH2 0x1994 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C0 DUP2 DUP5 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F5 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1D DUP5 DUP3 DUP6 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4F DUP3 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA2 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACB DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ADC DUP6 DUP3 DUP7 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AFC PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0A DUP7 DUP3 DUP8 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B1B DUP7 DUP3 DUP8 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B2C DUP7 DUP3 DUP8 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B58 DUP5 DUP3 DUP6 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1905 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C2F DUP3 PUSH2 0x1960 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C60 PUSH2 0x1874 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6C DUP3 DUP3 PUSH2 0x1C26 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1C94 DUP3 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC1 PUSH2 0x1CBC DUP5 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE8 DUP5 DUP3 DUP6 PUSH2 0x1CA1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D42 DUP8 DUP3 DUP9 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D53 DUP8 DUP3 DUP9 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D64 DUP8 DUP3 DUP9 ADD PUSH2 0x19E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH2 0x1D91 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1DB2 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B61 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E81 DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1E8B DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1E9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB2 DUP3 DUP6 PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBE DUP3 DUP5 PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEE DUP3 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1EF8 DUP2 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1F11 DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F2F PUSH0 DUP4 ADD DUP8 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1F3C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1F49 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B61 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 DUP5 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F74 DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8F JUMPI PUSH2 0x1F8E PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9C DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1FF2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD LOG1 0xC5 COINBASE PUSH4 0xB3DB15C0 0x4C PUSH9 0xFB4E13918E5AACF7DF 0x24 0xEC SWAP4 CALLCODE GAS SWAP7 0x21 0xE3 0xAF SLT 0xD2 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "56111:451:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39836:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40640:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41772:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41598:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;42418:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;56305:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43062:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;56480:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40460:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40195:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29291:101;;;:::i;:::-;;28636:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40793:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41993:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43260:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40952:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42203:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29541:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39836:300;39938:4;39988:25;39973:40;;;:11;:40;;;;:104;;;;40044:33;40029:48;;;:11;:48;;;;39973:104;:156;;;;40093:36;40117:11;40093:23;:36::i;:::-;39973:156;39954:175;;39836:300;;;:::o;40640:89::-;40685:13;40717:5;40710:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40640:89;:::o;41772:154::-;41839:7;41858:22;41872:7;41858:13;:22::i;:::-;;41898:21;41911:7;41898:12;:21::i;:::-;41891:28;;41772:154;;;:::o;41598:113::-;41669:35;41678:2;41682:7;41691:12;:10;:12::i;:::-;41669:8;:35::i;:::-;41598:113;;:::o;42418:578::-;42526:1;42512:16;;:2;:16;;;42508:87;;42581:1;42551:33;;;;;;;;;;;:::i;:::-;;;;;;;;42508:87;42813:21;42837:34;42845:2;42849:7;42858:12;:10;:12::i;:::-;42837:7;:34::i;:::-;42813:58;;42902:4;42885:21;;:13;:21;;;42881:109;;42950:4;42956:7;42965:13;42929:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;42881:109;42498:498;42418:578;;;:::o;56305:95::-;28529:13;:11;:13::i;:::-;56375:18:::1;56381:2;56385:7;56375:5;:18::i;:::-;56305:95:::0;;:::o;43062:132::-;43148:39;43165:4;43171:2;43175:7;43148:39;;;;;;;;;;;;:16;:39::i;:::-;43062:132;;;:::o;56480:80::-;28529:13;:11;:13::i;:::-;56539:14:::1;56545:7;56539:5;:14::i;:::-;56480:80:::0;:::o;40460:118::-;40523:7;40549:22;40563:7;40549:13;:22::i;:::-;40542:29;;40460:118;;;:::o;40195:208::-;40258:7;40298:1;40281:19;;:5;:19;;;40277:87;;40350:1;40323:30;;;;;;;;;;;:::i;:::-;;;;;;;;40277:87;40380:9;:16;40390:5;40380:16;;;;;;;;;;;;;;;;40373:23;;40195:208;;;:::o;29291:101::-;28529:13;:11;:13::i;:::-;29355:30:::1;29382:1;29355:18;:30::i;:::-;29291:101::o:0;28636:85::-;28682:7;28708:6;;;;;;;;;;;28701:13;;28636:85;:::o;40793:93::-;40840:13;40872:7;40865:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40793:93;:::o;41993:144::-;42078:52;42097:12;:10;:12::i;:::-;42111:8;42121;42078:18;:52::i;:::-;41993:144;;:::o;43260:208::-;43373:31;43386:4;43392:2;43396:7;43373:12;:31::i;:::-;43414:47;43437:4;43443:2;43447:7;43456:4;43414:22;:47::i;:::-;43260:208;;;;:::o;40952:255::-;41016:13;41041:22;41055:7;41041:13;:22::i;:::-;;41074:21;41098:10;:8;:10::i;:::-;41074:34;;41149:1;41131:7;41125:21;:25;:75;;;;;;;;;;;;;;;;;41167:7;41176:18;:7;:16;:18::i;:::-;41153:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41125:75;41118:82;;;40952:255;;;:::o;42203:153::-;42291:4;42314:18;:25;42333:5;42314:25;;;;;;;;;;;;;;;:35;42340:8;42314:35;;;;;;;;;;;;;;;;;;;;;;;;;42307:42;;42203:153;;;;:::o;29541:215::-;28529:13;:11;:13::i;:::-;29645:1:::1;29625:22;;:8;:22;;::::0;29621:91:::1;;29698:1;29670:31;;;;;;;;;;;:::i;:::-;;;;;;;;29621:91;29721:28;29740:8;29721:18;:28::i;:::-;29541:215:::0;:::o;32795:146::-;32871:4;32909:25;32894:40;;;:11;:40;;;;32887:47;;32795:146;;;:::o;54413:241::-;54476:7;54495:13;54511:17;54520:7;54511:8;:17::i;:::-;54495:33;;54559:1;54542:19;;:5;:19;;;54538:88;;54607:7;54584:31;;;;;;;;;;;:::i;:::-;;;;;;;;54538:88;54642:5;54635:12;;;54413:241;;;:::o;44213:127::-;44283:7;44309:15;:24;44325:7;44309:24;;;;;;;;;;;;;;;;;;;;;44302:31;;44213:127;;;:::o;26714:96::-;26767:7;26793:10;26786:17;;26714:96;:::o;52693:120::-;52773:33;52782:2;52786:7;52795:4;52801;52773:8;:33::i;:::-;52693:120;;;:::o;47113:795::-;47199:7;47218:12;47233:17;47242:7;47233:8;:17::i;:::-;47218:32;;47326:1;47310:18;;:4;:18;;;47306:86;;47344:37;47361:4;47367;47373:7;47344:16;:37::i;:::-;47306:86;47452:1;47436:18;;:4;:18;;;47432:256;;47552:48;47569:1;47573:7;47590:1;47594:5;47552:8;:48::i;:::-;47662:1;47643:9;:15;47653:4;47643:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;47432:256;47716:1;47702:16;;:2;:16;;;47698:107;;47779:1;47762:9;:13;47772:2;47762:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;47698:107;47834:2;47815:7;:16;47823:7;47815:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;47871:7;47867:2;47852:27;;47861:4;47852:27;;;;;;;;;;;;47897:4;47890:11;;;47113:795;;;;;:::o;28794:162::-;28864:12;:10;:12::i;:::-;28853:23;;:7;:5;:7::i;:::-;:23;;;28849:101;;28926:12;:10;:12::i;:::-;28899:40;;;;;;;;;;;:::i;:::-;;;;;;;;28849:101;28794:162::o;48230:327::-;48311:1;48297:16;;:2;:16;;;48293:87;;48366:1;48336:33;;;;;;;;;;;:::i;:::-;;;;;;;;48293:87;48389:21;48413:32;48421:2;48425:7;48442:1;48413:7;:32::i;:::-;48389:56;;48484:1;48459:27;;:13;:27;;;48455:96;;48537:1;48509:31;;;;;;;;;;;:::i;:::-;;;;;;;;48455:96;48283:274;48230:327;;:::o;49737:227::-;49788:21;49812:40;49828:1;49832:7;49849:1;49812:7;:40::i;:::-;49788:64;;49891:1;49866:27;;:13;:27;;;49862:96;;49939:7;49916:31;;;;;;;;;;;:::i;:::-;;;;;;;;49862:96;49778:186;49737:227;:::o;29910:187::-;29983:16;30002:6;;;;;;;;;;;29983:25;;30027:8;30018:6;;:17;;;;;;;;;;;;;;;;;;30081:8;30050:40;;30071:8;30050:40;;;;;;;;;;;;29973:124;29910:187;:::o;53866:312::-;53993:1;53973:22;;:8;:22;;;53969:91;;54040:8;54018:31;;;;;;;;;;;:::i;:::-;;;;;;;;53969:91;54107:8;54069:18;:25;54088:5;54069:25;;;;;;;;;;;;;;;:35;54095:8;54069:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;54152:8;54130:41;;54145:5;54130:41;;;54162:8;54130:41;;;;;;:::i;:::-;;;;;;;;53866:312;;;:::o;55193:782::-;55326:1;55309:2;:14;;;:18;55305:664;;;55363:2;55347:36;;;55384:12;:10;:12::i;:::-;55398:4;55404:7;55413:4;55347:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;55343:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55673:1;55656:6;:13;:18;55652:293;;55727:2;55705:25;;;;;;;;;;;:::i;:::-;;;;;;;;55652:293;55897:6;55891:13;55882:6;55878:2;55874:15;55867:38;55343:616;55475:41;;;55465:51;;;:6;:51;;;;55461:130;;55569:2;55547:25;;;;;;;;;;;:::i;:::-;;;;;;;;55461:130;55419:186;55305:664;55193:782;;;;:::o;41449:92::-;41500:13;41525:9;;;;;;;;;;;;;;41449:92;:::o;23574:698::-;23630:13;23679:14;23716:1;23696:17;23707:5;23696:10;:17::i;:::-;:21;23679:38;;23731:20;23765:6;23754:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23731:41;;23786:11;23912:6;23908:2;23904:15;23896:6;23892:28;23885:35;;23947:282;23954:4;23947:282;;;23978:5;;;;;;;;24117:10;24112:2;24105:5;24101:14;24096:32;24091:3;24083:46;24173:2;24164:11;;;;;;:::i;:::-;;;;;24206:1;24197:5;:10;23947:282;24193:21;23947:282;24249:6;24242:13;;;;;23574:698;;;:::o;43982:115::-;44048:7;44074;:16;44082:7;44074:16;;;;;;;;;;;;;;;;;;;;;44067:23;;43982:115;;;:::o;52995:662::-;53155:9;:31;;;;53184:1;53168:18;;:4;:18;;;;53155:31;53151:460;;;53202:13;53218:22;53232:7;53218:13;:22::i;:::-;53202:38;;53384:1;53368:18;;:4;:18;;;;:35;;;;;53399:4;53390:13;;:5;:13;;;;53368:35;:69;;;;;53408:29;53425:5;53432:4;53408:16;:29::i;:::-;53407:30;53368:69;53364:142;;;53486:4;53464:27;;;;;;;;;;;:::i;:::-;;;;;;;;53364:142;53524:9;53520:81;;;53578:7;53574:2;53558:28;;53567:5;53558:28;;;;;;;;;;;;53520:81;53188:423;53151:460;53648:2;53621:15;:24;53637:7;53621:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;52995:662;;;;:::o;45357:368::-;45469:38;45483:5;45490:7;45499;45469:13;:38::i;:::-;45464:255;;45544:1;45527:19;;:5;:19;;;45523:186;;45596:7;45573:31;;;;;;;;;;;:::i;:::-;;;;;;;;45523:186;45677:7;45686;45650:44;;;;;;;;;;;;:::i;:::-;;;;;;;;45464:255;45357:368;;;:::o;20098:916::-;20151:7;20170:14;20187:1;20170:18;;20235:8;20226:5;:17;20222:103;;20272:8;20263:17;;;;;;:::i;:::-;;;;;20308:2;20298:12;;;;20222:103;20351:8;20342:5;:17;20338:103;;20388:8;20379:17;;;;;;:::i;:::-;;;;;20424:2;20414:12;;;;20338:103;20467:8;20458:5;:17;20454:103;;20504:8;20495:17;;;;;;:::i;:::-;;;;;20540:2;20530:12;;;;20454:103;20583:7;20574:5;:16;20570:100;;20619:7;20610:16;;;;;;:::i;:::-;;;;;20654:1;20644:11;;;;20570:100;20696:7;20687:5;:16;20683:100;;20732:7;20723:16;;;;;;:::i;:::-;;;;;20767:1;20757:11;;;;20683:100;20809:7;20800:5;:16;20796:100;;20845:7;20836:16;;;;;;:::i;:::-;;;;;20880:1;20870:11;;;;20796:100;20922:7;20913:5;:16;20909:66;;20959:1;20949:11;;;;20909:66;21001:6;20994:13;;;20098:916;;;:::o;44651:272::-;44754:4;44808:1;44789:21;;:7;:21;;;;:127;;;;;44836:7;44827:16;;:5;:16;;;:52;;;;44847:32;44864:5;44871:7;44847:16;:32::i;:::-;44827:52;:88;;;;44908:7;44883:32;;:21;44896:7;44883:12;:21::i;:::-;:32;;;44827:88;44789:127;44770:146;;44651:272;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:442::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;11159:72;11227:2;11216:9;11212:18;11203:6;11159:72;:::i;:::-;11241;11309:2;11298:9;11294:18;11285:6;11241:72;:::i;:::-;10878:442;;;;;;:::o;11326:148::-;11428:11;11465:3;11450:18;;11326:148;;;;:::o;11480:390::-;11586:3;11614:39;11647:5;11614:39;:::i;:::-;11669:89;11751:6;11746:3;11669:89;:::i;:::-;11662:96;;11767:65;11825:6;11820:3;11813:4;11806:5;11802:16;11767:65;:::i;:::-;11857:6;11852:3;11848:16;11841:23;;11590:280;11480:390;;;;:::o;11876:435::-;12056:3;12078:95;12169:3;12160:6;12078:95;:::i;:::-;12071:102;;12190:95;12281:3;12272:6;12190:95;:::i;:::-;12183:102;;12302:3;12295:10;;11876:435;;;;;:::o;12317:98::-;12368:6;12402:5;12396:12;12386:22;;12317:98;;;:::o;12421:168::-;12504:11;12538:6;12533:3;12526:19;12578:4;12573:3;12569:14;12554:29;;12421:168;;;;:::o;12595:373::-;12681:3;12709:38;12741:5;12709:38;:::i;:::-;12763:70;12826:6;12821:3;12763:70;:::i;:::-;12756:77;;12842:65;12900:6;12895:3;12888:4;12881:5;12877:16;12842:65;:::i;:::-;12932:29;12954:6;12932:29;:::i;:::-;12927:3;12923:39;12916:46;;12685:283;12595:373;;;;:::o;12974:640::-;13169:4;13207:3;13196:9;13192:19;13184:27;;13221:71;13289:1;13278:9;13274:17;13265:6;13221:71;:::i;:::-;13302:72;13370:2;13359:9;13355:18;13346:6;13302:72;:::i;:::-;13384;13452:2;13441:9;13437:18;13428:6;13384:72;:::i;:::-;13503:9;13497:4;13493:20;13488:2;13477:9;13473:18;13466:48;13531:76;13602:4;13593:6;13531:76;:::i;:::-;13523:84;;12974:640;;;;;;;:::o;13620:141::-;13676:5;13707:6;13701:13;13692:22;;13723:32;13749:5;13723:32;:::i;:::-;13620:141;;;;:::o;13767:349::-;13836:6;13885:2;13873:9;13864:7;13860:23;13856:32;13853:119;;;13891:79;;:::i;:::-;13853:119;14011:1;14036:63;14091:7;14082:6;14071:9;14067:22;14036:63;:::i;:::-;14026:73;;13982:127;13767:349;;;;:::o;14122:180::-;14170:77;14167:1;14160:88;14267:4;14264:1;14257:15;14291:4;14288:1;14281:15;14308:332;14429:4;14467:2;14456:9;14452:18;14444:26;;14480:71;14548:1;14537:9;14533:17;14524:6;14480:71;:::i;:::-;14561:72;14629:2;14618:9;14614:18;14605:6;14561:72;:::i;:::-;14308:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1647800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56163,
									"end": 56220,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56206,
									"end": 56216,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "50726F7000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "PUSH",
									"source": 0,
									"value": "5050000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39730,
									"end": 39735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39722,
									"end": 39735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39722,
									"end": 39735,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39755,
									"end": 39762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39752,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39745,
									"end": 39762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39745,
									"end": 39762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39656,
									"end": 39769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28295,
									"end": 28296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28271,
									"end": 28297,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28271,
									"end": 28297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28271,
									"end": 28283,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28271,
									"end": 28297,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28271,
									"end": 28297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28271,
									"end": 28297,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28267,
									"end": 28362,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28267,
									"end": 28362,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28348,
									"end": 28349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28320,
									"end": 28351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28351,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28267,
									"end": 28362,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28267,
									"end": 28362,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28371,
									"end": 28403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28390,
									"end": 28402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28371,
									"end": 28389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28371,
									"end": 28389,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28371,
									"end": 28389,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28371,
									"end": 28403,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28371,
									"end": 28403,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28371,
									"end": 28403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28371,
									"end": 28403,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28371,
									"end": 28403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28223,
									"end": 28410,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29910,
									"end": 30097,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 29910,
									"end": 30097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 29999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30002,
									"end": 30008,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30008,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30027,
									"end": 30035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 30018,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30018,
									"end": 30035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30081,
									"end": 30089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30071,
									"end": 30079,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30090,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29973,
									"end": 30097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29910,
									"end": 30097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29910,
									"end": 30097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56111,
									"end": 56562,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bda1c54163b3db15c04c68fb4e13918e5aacf7df24ec93f25a9621e3af12d2a364736f6c63430008190033",
									".code": [
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56111,
											"end": 56562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 39836,
											"end": 40136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 39836,
											"end": 40136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39836,
											"end": 40136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40640,
											"end": 40729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40640,
											"end": 40729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41772,
											"end": 41926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41772,
											"end": 41926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41772,
											"end": 41926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41598,
											"end": 41711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41598,
											"end": 41711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 42418,
											"end": 42996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 42418,
											"end": 42996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56305,
											"end": 56400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56305,
											"end": 56400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43062,
											"end": 43194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 43062,
											"end": 43194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 56480,
											"end": 56560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56480,
											"end": 56560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 40460,
											"end": 40578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 40460,
											"end": 40578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40460,
											"end": 40578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 40195,
											"end": 40403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 40195,
											"end": 40403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40195,
											"end": 40403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29291,
											"end": 29392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28636,
											"end": 28721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28636,
											"end": 28721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 40793,
											"end": 40886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40793,
											"end": 40886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 41993,
											"end": 42137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41993,
											"end": 42137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43260,
											"end": 43468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43260,
											"end": 43468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 40952,
											"end": 41207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 40952,
											"end": 41207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40952,
											"end": 41207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 42203,
											"end": 42356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42203,
											"end": 42356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42203,
											"end": 42356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29541,
											"end": 29756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29541,
											"end": 29756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39988,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 39984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40044,
											"end": 40077,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40029,
											"end": 40040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40029,
											"end": 40077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39973,
											"end": 40077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40093,
											"end": 40129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40117,
											"end": 40128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40093,
											"end": 40116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 40093,
											"end": 40129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40093,
											"end": 40129,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40093,
											"end": 40129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 39973,
											"end": 40129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39954,
											"end": 40129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39954,
											"end": 40129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39836,
											"end": 40136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40685,
											"end": 40698,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40717,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40710,
											"end": 40722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40710,
											"end": 40722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40640,
											"end": 40729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41839,
											"end": 41846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41858,
											"end": 41880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41872,
											"end": 41879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41858,
											"end": 41871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41858,
											"end": 41880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41858,
											"end": 41880,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41858,
											"end": 41880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41858,
											"end": 41880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41898,
											"end": 41919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 41911,
											"end": 41918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41898,
											"end": 41910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 41898,
											"end": 41919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41898,
											"end": 41919,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 41898,
											"end": 41919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41891,
											"end": 41919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41891,
											"end": 41919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41772,
											"end": 41926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41669,
											"end": 41704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41678,
											"end": 41680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41682,
											"end": 41689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41691,
											"end": 41703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 41691,
											"end": 41701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 41691,
											"end": 41703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41691,
											"end": 41703,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 41691,
											"end": 41703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41669,
											"end": 41677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 41669,
											"end": 41704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41669,
											"end": 41704,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41669,
											"end": 41704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41598,
											"end": 41711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42526,
											"end": 42527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42512,
											"end": 42528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42512,
											"end": 42528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42512,
											"end": 42528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42508,
											"end": 42595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 42508,
											"end": 42595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42551,
											"end": 42584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42551,
											"end": 42584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42508,
											"end": 42595,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 42508,
											"end": 42595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42813,
											"end": 42834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42837,
											"end": 42871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 42845,
											"end": 42847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42858,
											"end": 42870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42858,
											"end": 42868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 42858,
											"end": 42870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42858,
											"end": 42870,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42858,
											"end": 42870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42837,
											"end": 42844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42837,
											"end": 42871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42837,
											"end": 42871,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 42837,
											"end": 42871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42813,
											"end": 42871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42813,
											"end": 42871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42902,
											"end": 42906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42885,
											"end": 42906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42885,
											"end": 42906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42881,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42881,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42950,
											"end": 42954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42956,
											"end": 42963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42965,
											"end": 42978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 42929,
											"end": 42979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42929,
											"end": 42979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42881,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42881,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42498,
											"end": 42996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28529,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28529,
											"end": 28542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56375,
											"end": 56393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 56381,
											"end": 56383,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56385,
											"end": 56392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56375,
											"end": 56380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 56375,
											"end": 56393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56375,
											"end": 56393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 56375,
											"end": 56393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56305,
											"end": 56400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 43165,
											"end": 43169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43175,
											"end": 43182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43148,
											"end": 43187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 43148,
											"end": 43187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43062,
											"end": 43194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28529,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28529,
											"end": 28542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56539,
											"end": 56553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 56545,
											"end": 56552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56539,
											"end": 56544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 56539,
											"end": 56553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56539,
											"end": 56553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 56539,
											"end": 56553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56480,
											"end": 56560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40523,
											"end": 40530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40549,
											"end": 40571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40563,
											"end": 40570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40549,
											"end": 40562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40549,
											"end": 40571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40549,
											"end": 40571,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40549,
											"end": 40571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40258,
											"end": 40265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40298,
											"end": 40299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40281,
											"end": 40300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40281,
											"end": 40300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40277,
											"end": 40364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 40277,
											"end": 40364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40350,
											"end": 40351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40323,
											"end": 40353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40277,
											"end": 40364,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 40277,
											"end": 40364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40389,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40390,
											"end": 40395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40195,
											"end": 40403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29291,
											"end": 29392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28529,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28529,
											"end": 28542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29382,
											"end": 29383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29355,
											"end": 29373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29355,
											"end": 29385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29355,
											"end": 29385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28682,
											"end": 28689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40840,
											"end": 40853,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40872,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40865,
											"end": 40879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40865,
											"end": 40879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40865,
											"end": 40879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40793,
											"end": 40886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 42097,
											"end": 42109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 42097,
											"end": 42107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 42097,
											"end": 42109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42097,
											"end": 42109,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 42097,
											"end": 42109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42111,
											"end": 42119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42121,
											"end": 42129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42078,
											"end": 42130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42130,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 42078,
											"end": 42130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41993,
											"end": 42137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43373,
											"end": 43404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43386,
											"end": 43390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43392,
											"end": 43394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43396,
											"end": 43403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43373,
											"end": 43385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43373,
											"end": 43404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43373,
											"end": 43404,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43373,
											"end": 43404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43414,
											"end": 43461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 43437,
											"end": 43441,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43443,
											"end": 43445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43447,
											"end": 43454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43414,
											"end": 43436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 43414,
											"end": 43461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43414,
											"end": 43461,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 43414,
											"end": 43461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43260,
											"end": 43468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41016,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41041,
											"end": 41063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 41055,
											"end": 41062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41041,
											"end": 41054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41041,
											"end": 41063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41041,
											"end": 41063,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 41041,
											"end": 41063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41041,
											"end": 41063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41074,
											"end": 41095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41098,
											"end": 41108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 41098,
											"end": 41106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 41098,
											"end": 41108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41098,
											"end": 41108,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 41098,
											"end": 41108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41074,
											"end": 41108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41074,
											"end": 41108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41149,
											"end": 41150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41131,
											"end": 41138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41150,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41167,
											"end": 41174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41176,
											"end": 41194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41176,
											"end": 41183,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41176,
											"end": 41192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 41176,
											"end": 41194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41176,
											"end": 41194,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41176,
											"end": 41194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 41153,
											"end": 41195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41153,
											"end": 41195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 41125,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41118,
											"end": 41200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41118,
											"end": 41200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41118,
											"end": 41200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40952,
											"end": 41207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42291,
											"end": 42295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42314,
											"end": 42332,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42333,
											"end": 42338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42314,
											"end": 42339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42340,
											"end": 42348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42314,
											"end": 42349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42307,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42307,
											"end": 42349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42203,
											"end": 42356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 28529,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28529,
											"end": 28542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 28529,
											"end": 28542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29625,
											"end": 29647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29625,
											"end": 29647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29625,
											"end": 29633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29625,
											"end": 29647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29625,
											"end": 29647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29625,
											"end": 29647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29621,
											"end": 29712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29621,
											"end": 29712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29670,
											"end": 29701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29701,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29621,
											"end": 29712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29621,
											"end": 29712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29721,
											"end": 29749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29740,
											"end": 29748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29721,
											"end": 29739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29721,
											"end": 29749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29721,
											"end": 29749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29721,
											"end": 29749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29541,
											"end": 29756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32941,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 32795,
											"end": 32941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32871,
											"end": 32875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32909,
											"end": 32934,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32894,
											"end": 32905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32894,
											"end": 32934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54413,
											"end": 54654,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 54413,
											"end": 54654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54495,
											"end": 54508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54511,
											"end": 54528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54520,
											"end": 54527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54511,
											"end": 54519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 54511,
											"end": 54528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54511,
											"end": 54528,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54511,
											"end": 54528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54495,
											"end": 54528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54495,
											"end": 54528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54559,
											"end": 54560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54542,
											"end": 54561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54542,
											"end": 54561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54542,
											"end": 54547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54542,
											"end": 54561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54542,
											"end": 54561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54542,
											"end": 54561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54538,
											"end": 54626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 54538,
											"end": 54626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54607,
											"end": 54614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54584,
											"end": 54615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54584,
											"end": 54615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54538,
											"end": 54626,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 54538,
											"end": 54626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54642,
											"end": 54647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54413,
											"end": 54654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54413,
											"end": 54654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54413,
											"end": 54654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54413,
											"end": 54654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44213,
											"end": 44340,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 44213,
											"end": 44340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44283,
											"end": 44290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44309,
											"end": 44324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44325,
											"end": 44332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44309,
											"end": 44333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44302,
											"end": 44333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44302,
											"end": 44333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44213,
											"end": 44340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44213,
											"end": 44340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44213,
											"end": 44340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44213,
											"end": 44340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26714,
											"end": 26810,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26714,
											"end": 26810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26793,
											"end": 26803,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26786,
											"end": 26803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26786,
											"end": 26803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26714,
											"end": 26810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26714,
											"end": 26810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52693,
											"end": 52813,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 52693,
											"end": 52813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 52782,
											"end": 52784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52786,
											"end": 52793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52801,
											"end": 52805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52773,
											"end": 52781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 52773,
											"end": 52806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52806,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 52773,
											"end": 52806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52693,
											"end": 52813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52693,
											"end": 52813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52693,
											"end": 52813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52693,
											"end": 52813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47199,
											"end": 47206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47218,
											"end": 47230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47233,
											"end": 47250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 47242,
											"end": 47249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47233,
											"end": 47241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 47233,
											"end": 47250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47233,
											"end": 47250,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 47233,
											"end": 47250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47218,
											"end": 47250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47218,
											"end": 47250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47326,
											"end": 47327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47310,
											"end": 47328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47310,
											"end": 47328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47310,
											"end": 47314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47310,
											"end": 47328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47310,
											"end": 47328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47310,
											"end": 47328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47306,
											"end": 47392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 47306,
											"end": 47392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47344,
											"end": 47381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 47361,
											"end": 47365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47367,
											"end": 47371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47380,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47344,
											"end": 47360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 47344,
											"end": 47381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47344,
											"end": 47381,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 47344,
											"end": 47381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47306,
											"end": 47392,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 47306,
											"end": 47392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47452,
											"end": 47453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47436,
											"end": 47454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47436,
											"end": 47454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47436,
											"end": 47440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47436,
											"end": 47454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47436,
											"end": 47454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47436,
											"end": 47454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47432,
											"end": 47688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 47432,
											"end": 47688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47552,
											"end": 47600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47569,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47573,
											"end": 47580,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47590,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47594,
											"end": 47599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47552,
											"end": 47560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 47552,
											"end": 47600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47552,
											"end": 47600,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47552,
											"end": 47600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47662,
											"end": 47663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47643,
											"end": 47652,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47653,
											"end": 47657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47643,
											"end": 47663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47432,
											"end": 47688,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 47432,
											"end": 47688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47702,
											"end": 47718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47702,
											"end": 47718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47702,
											"end": 47704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47702,
											"end": 47718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47702,
											"end": 47718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47702,
											"end": 47718,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47698,
											"end": 47805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47779,
											"end": 47780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47762,
											"end": 47771,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47772,
											"end": 47774,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47762,
											"end": 47780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47805,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47698,
											"end": 47805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47834,
											"end": 47836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47822,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47823,
											"end": 47830,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47871,
											"end": 47878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47867,
											"end": 47869,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47861,
											"end": 47865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47879,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47897,
											"end": 47901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47890,
											"end": 47901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47890,
											"end": 47901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47890,
											"end": 47901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47113,
											"end": 47908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28794,
											"end": 28956,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28794,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28864,
											"end": 28876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28864,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28864,
											"end": 28876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28864,
											"end": 28876,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28864,
											"end": 28876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28853,
											"end": 28876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28853,
											"end": 28858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28853,
											"end": 28860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28860,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28853,
											"end": 28860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28853,
											"end": 28876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28849,
											"end": 28950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28849,
											"end": 28950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28926,
											"end": 28938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 28926,
											"end": 28936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28926,
											"end": 28938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28926,
											"end": 28938,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 28926,
											"end": 28938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28899,
											"end": 28939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28849,
											"end": 28950,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28849,
											"end": 28950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28794,
											"end": 28956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48557,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 48230,
											"end": 48557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48311,
											"end": 48312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48297,
											"end": 48313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48297,
											"end": 48313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48297,
											"end": 48299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48297,
											"end": 48313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48297,
											"end": 48313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48297,
											"end": 48313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48293,
											"end": 48380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 48293,
											"end": 48380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48366,
											"end": 48367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48336,
											"end": 48369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48336,
											"end": 48369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48293,
											"end": 48380,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 48293,
											"end": 48380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48389,
											"end": 48410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48413,
											"end": 48445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 48421,
											"end": 48423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48425,
											"end": 48432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48442,
											"end": 48443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48413,
											"end": 48420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 48413,
											"end": 48445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48413,
											"end": 48445,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 48413,
											"end": 48445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48389,
											"end": 48445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48389,
											"end": 48445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48484,
											"end": 48485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48459,
											"end": 48486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48459,
											"end": 48486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48459,
											"end": 48472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48459,
											"end": 48486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48459,
											"end": 48486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48459,
											"end": 48486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48455,
											"end": 48551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 48455,
											"end": 48551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48537,
											"end": 48538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48509,
											"end": 48540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48455,
											"end": 48551,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 48455,
											"end": 48551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48283,
											"end": 48557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49737,
											"end": 49964,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49737,
											"end": 49964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49788,
											"end": 49809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49812,
											"end": 49852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 49828,
											"end": 49829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49832,
											"end": 49839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49849,
											"end": 49850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49812,
											"end": 49819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 49812,
											"end": 49852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49812,
											"end": 49852,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 49812,
											"end": 49852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49788,
											"end": 49852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49788,
											"end": 49852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49891,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49866,
											"end": 49893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49866,
											"end": 49893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49866,
											"end": 49879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49866,
											"end": 49893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49866,
											"end": 49893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49866,
											"end": 49893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 49862,
											"end": 49958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49939,
											"end": 49946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 49916,
											"end": 49947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49958,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 49862,
											"end": 49958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49737,
											"end": 49964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49737,
											"end": 49964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 30097,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29910,
											"end": 30097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 29999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30024,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30018,
											"end": 30024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30081,
											"end": 30089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30090,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 30097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 30097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53866,
											"end": 54178,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 53866,
											"end": 54178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53993,
											"end": 53994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53973,
											"end": 53995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53973,
											"end": 53995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53973,
											"end": 53981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53973,
											"end": 53995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53973,
											"end": 53995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53973,
											"end": 53995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53969,
											"end": 54060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 53969,
											"end": 54060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54040,
											"end": 54048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54018,
											"end": 54049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53969,
											"end": 54060,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 53969,
											"end": 54060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54107,
											"end": 54115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54087,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54088,
											"end": 54093,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54069,
											"end": 54094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54095,
											"end": 54103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54152,
											"end": 54160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54145,
											"end": 54150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 54162,
											"end": 54170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 54130,
											"end": 54171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54130,
											"end": 54171,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 53866,
											"end": 54178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53866,
											"end": 54178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53866,
											"end": 54178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53866,
											"end": 54178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55326,
											"end": 55327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55309,
											"end": 55311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55309,
											"end": 55323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55309,
											"end": 55323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55309,
											"end": 55323,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 55309,
											"end": 55327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 55305,
											"end": 55969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55363,
											"end": 55365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55347,
											"end": 55383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55383,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55384,
											"end": 55396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 55384,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 55384,
											"end": 55396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55384,
											"end": 55396,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 55384,
											"end": 55396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55398,
											"end": 55402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55404,
											"end": 55411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55413,
											"end": 55417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 55347,
											"end": 55418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 55347,
											"end": 55418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55347,
											"end": 55418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55673,
											"end": 55674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55656,
											"end": 55662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55656,
											"end": 55669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55656,
											"end": 55674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 55945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 55652,
											"end": 55945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55727,
											"end": 55729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 55705,
											"end": 55730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55705,
											"end": 55730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 55945,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 55652,
											"end": 55945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55897,
											"end": 55903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55891,
											"end": 55904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55882,
											"end": 55888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55878,
											"end": 55880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55874,
											"end": 55889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55867,
											"end": 55905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 55343,
											"end": 55959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55516,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55475,
											"end": 55516,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55475,
											"end": 55516,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55465,
											"end": 55516,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55461,
											"end": 55591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 55461,
											"end": 55591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55569,
											"end": 55571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 55547,
											"end": 55572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55461,
											"end": 55591,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 55461,
											"end": 55591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55419,
											"end": 55605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55969,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 55305,
											"end": 55969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55193,
											"end": 55975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41449,
											"end": 41541,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 41449,
											"end": 41541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41500,
											"end": 41513,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41449,
											"end": 41541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41449,
											"end": 41541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23574,
											"end": 24272,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23574,
											"end": 24272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23679,
											"end": 23693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23716,
											"end": 23717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23696,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 23707,
											"end": 23712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23696,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 23696,
											"end": 23713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23696,
											"end": 23713,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 23696,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23696,
											"end": 23717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23731,
											"end": 23751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23765,
											"end": 23771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 23754,
											"end": 23772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23754,
											"end": 23772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23731,
											"end": 23772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23731,
											"end": 23772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23912,
											"end": 23918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23908,
											"end": 23910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23904,
											"end": 23919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23896,
											"end": 23902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23885,
											"end": 23920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23885,
											"end": 23920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23954,
											"end": 23958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24117,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 24112,
											"end": 24114,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24105,
											"end": 24110,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24115,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 24096,
											"end": 24128,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24083,
											"end": 24129,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 24173,
											"end": 24175,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 24164,
											"end": 24175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24206,
											"end": 24207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24197,
											"end": 24202,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24197,
											"end": 24207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 24193,
											"end": 24214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 23947,
											"end": 24229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24249,
											"end": 24255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24242,
											"end": 24255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24242,
											"end": 24255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24242,
											"end": 24255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24242,
											"end": 24255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24242,
											"end": 24255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23574,
											"end": 24272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23574,
											"end": 24272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23574,
											"end": 24272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23574,
											"end": 24272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44097,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 43982,
											"end": 44097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44048,
											"end": 44055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44074,
											"end": 44081,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44082,
											"end": 44089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44074,
											"end": 44090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44067,
											"end": 44090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44067,
											"end": 44090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53155,
											"end": 53164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53184,
											"end": 53185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53168,
											"end": 53172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53168,
											"end": 53186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 53155,
											"end": 53186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53151,
											"end": 53611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53151,
											"end": 53611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 53151,
											"end": 53611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53202,
											"end": 53215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53218,
											"end": 53240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 53232,
											"end": 53239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53218,
											"end": 53231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 53218,
											"end": 53240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53218,
											"end": 53240,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 53218,
											"end": 53240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53202,
											"end": 53240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53202,
											"end": 53240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53384,
											"end": 53385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53399,
											"end": 53403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53390,
											"end": 53395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53390,
											"end": 53403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53408,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 53425,
											"end": 53430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53432,
											"end": 53436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53408,
											"end": 53424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53408,
											"end": 53437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53408,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 53408,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53407,
											"end": 53437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 53368,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53364,
											"end": 53506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53364,
											"end": 53506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 53364,
											"end": 53506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53486,
											"end": 53490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 53464,
											"end": 53491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53464,
											"end": 53491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53364,
											"end": 53506,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 53364,
											"end": 53506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53524,
											"end": 53533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53520,
											"end": 53601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53520,
											"end": 53601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 53520,
											"end": 53601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53578,
											"end": 53585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53574,
											"end": 53576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53567,
											"end": 53572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53586,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 53520,
											"end": 53601,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 53520,
											"end": 53601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53188,
											"end": 53611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53151,
											"end": 53611,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 53151,
											"end": 53611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53648,
											"end": 53650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53637,
											"end": 53644,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53621,
											"end": 53650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52995,
											"end": 53657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45357,
											"end": 45725,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 45357,
											"end": 45725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45469,
											"end": 45507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 45483,
											"end": 45488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45490,
											"end": 45497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45499,
											"end": 45506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45469,
											"end": 45482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 45469,
											"end": 45507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45469,
											"end": 45507,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 45469,
											"end": 45507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45464,
											"end": 45719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 45464,
											"end": 45719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45544,
											"end": 45545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45527,
											"end": 45546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45527,
											"end": 45546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45527,
											"end": 45532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45527,
											"end": 45546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45527,
											"end": 45546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45527,
											"end": 45546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45523,
											"end": 45709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 45523,
											"end": 45709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45596,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 45573,
											"end": 45604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45523,
											"end": 45709,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 45523,
											"end": 45709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45677,
											"end": 45684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45686,
											"end": 45693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 45650,
											"end": 45694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45650,
											"end": 45694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45464,
											"end": 45719,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 45464,
											"end": 45719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45357,
											"end": 45725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45357,
											"end": 45725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45357,
											"end": 45725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45357,
											"end": 45725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 21014,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 20098,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20187,
											"end": 20188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20170,
											"end": 20188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20235,
											"end": 20243,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20226,
											"end": 20231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20226,
											"end": 20243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20222,
											"end": 20325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20222,
											"end": 20325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20280,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20263,
											"end": 20280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20298,
											"end": 20310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20298,
											"end": 20310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20298,
											"end": 20310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20298,
											"end": 20310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20222,
											"end": 20325,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20222,
											"end": 20325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20351,
											"end": 20359,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20342,
											"end": 20347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20342,
											"end": 20359,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20338,
											"end": 20441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20338,
											"end": 20441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20388,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20379,
											"end": 20396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20379,
											"end": 20396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20424,
											"end": 20426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20414,
											"end": 20426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20414,
											"end": 20426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20414,
											"end": 20426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20414,
											"end": 20426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20338,
											"end": 20441,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20338,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20467,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20454,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20454,
											"end": 20557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20512,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20495,
											"end": 20512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20540,
											"end": 20542,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20530,
											"end": 20542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20530,
											"end": 20542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20530,
											"end": 20542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20530,
											"end": 20542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20454,
											"end": 20557,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20454,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20590,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20574,
											"end": 20590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 20670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 20570,
											"end": 20670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20619,
											"end": 20626,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20610,
											"end": 20626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20654,
											"end": 20655,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20644,
											"end": 20655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20644,
											"end": 20655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20644,
											"end": 20655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20644,
											"end": 20655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 20670,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 20570,
											"end": 20670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20696,
											"end": 20703,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20687,
											"end": 20692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20687,
											"end": 20703,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20683,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 20683,
											"end": 20783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20732,
											"end": 20739,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20723,
											"end": 20739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20723,
											"end": 20739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20767,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20757,
											"end": 20768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20683,
											"end": 20783,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 20683,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20809,
											"end": 20816,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20800,
											"end": 20805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20800,
											"end": 20816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20796,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 20796,
											"end": 20896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20845,
											"end": 20852,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20836,
											"end": 20852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20880,
											"end": 20881,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20870,
											"end": 20881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20796,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 20796,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20929,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 20913,
											"end": 20918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 20929,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20909,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 20909,
											"end": 20975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20959,
											"end": 20960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20949,
											"end": 20960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20909,
											"end": 20975,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 20909,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 21014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 21014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 21014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 21014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44754,
											"end": 44758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44808,
											"end": 44809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44836,
											"end": 44843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44827,
											"end": 44843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44827,
											"end": 44843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44847,
											"end": 44879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 44864,
											"end": 44869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44871,
											"end": 44878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44847,
											"end": 44863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 44847,
											"end": 44879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44847,
											"end": 44879,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 44847,
											"end": 44879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 44827,
											"end": 44879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44908,
											"end": 44915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44883,
											"end": 44915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 44896,
											"end": 44903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 44883,
											"end": 44904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44904,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 44883,
											"end": 44904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44883,
											"end": 44915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44883,
											"end": 44915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 44827,
											"end": 44915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 44789,
											"end": 44916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44770,
											"end": 44916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44770,
											"end": 44916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11054,
											"end": 11063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 11078,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11159,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 11241,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 11647,
											"end": 11652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 11614,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11669,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11758,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 11825,
											"end": 11831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11806,
											"end": 11811,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11802,
											"end": 11818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 11767,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11848,
											"end": 11864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12169,
											"end": 12172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12078,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12071,
											"end": 12173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12071,
											"end": 12173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12190,
											"end": 12285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12302,
											"end": 12305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12295,
											"end": 12305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12295,
											"end": 12305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 12311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12396,
											"end": 12408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12386,
											"end": 12408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12386,
											"end": 12408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12554,
											"end": 12583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12554,
											"end": 12583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12741,
											"end": 12746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12709,
											"end": 12747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 12826,
											"end": 12832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12824,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12763,
											"end": 12833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12756,
											"end": 12833,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12756,
											"end": 12833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 12900,
											"end": 12906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12881,
											"end": 12886,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12842,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 12954,
											"end": 12960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12932,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12930,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12685,
											"end": 12968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12595,
											"end": 12968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13169,
											"end": 13173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13210,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13196,
											"end": 13205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13289,
											"end": 13290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 13221,
											"end": 13292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13359,
											"end": 13368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13352,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 13302,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13452,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13441,
											"end": 13450,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13437,
											"end": 13455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 13384,
											"end": 13456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13503,
											"end": 13512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13490,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13477,
											"end": 13486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13473,
											"end": 13491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13531,
											"end": 13607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13714,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13749,
											"end": 13754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 13723,
											"end": 13755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13856,
											"end": 13888,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 13891,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14091,
											"end": 14098,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14080,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 14036,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 14116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14302,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 14122,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14170,
											"end": 14247,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14264,
											"end": 14265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14257,
											"end": 14272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14291,
											"end": 14295,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14288,
											"end": 14289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14467,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14456,
											"end": 14465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14452,
											"end": 14470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14548,
											"end": 14549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14533,
											"end": 14550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14524,
											"end": 14530,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14480,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 14561,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC721_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"PropiedadesERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1578,
								"contract": "contracts/PropiedadesERC721_flattened.sol:PropiedadesERC721",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC721_flattened.sol\":6812:7859  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC721_flattened.sol\":6812:7859  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026c8a7b61840fefde99097a746f0c8ac80752c450bf07394ae629a72b983095364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026c8a7b61840fefde99097a746f0c8ac80752c450bf07394ae629a72b983095364736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC8 0xA7 0xB6 XOR BLOCKHASH INVALID REVERT 0xE9 SWAP1 SWAP8 0xA7 CHAINID CREATE 0xC8 0xAC DUP1 PUSH22 0x2C450BF07394AE629A72B983095364736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "6812:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026c8a7b61840fefde99097a746f0c8ac80752c450bf07394ae629a72b983095364736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC8 0xA7 0xB6 XOR BLOCKHASH INVALID REVERT 0xE9 SWAP1 SWAP8 0xA7 CHAINID CREATE 0xC8 0xAC DUP1 PUSH22 0x2C450BF07394AE629A72B983095364736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "6812:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 7859,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026c8a7b61840fefde99097a746f0c8ac80752c450bf07394ae629a72b983095364736f6c63430008190033",
									".code": [
										{
											"begin": 6812,
											"end": 7859,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7859,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC721_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC721_flattened.sol\":23188:26035  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC721_flattened.sol\":23188:26035  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e265b69e0d23a9486baf285a226fc7caf647ac292d3991bb02ae51e3133949dd64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e265b69e0d23a9486baf285a226fc7caf647ac292d3991bb02ae51e3133949dd64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH6 0xB69E0D23A948 PUSH12 0xAF285A226FC7CAF647AC292D CODECOPY SWAP2 0xBB MUL 0xAE MLOAD 0xE3 SGT CODECOPY BLOBHASH 0xDD PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "23188:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e265b69e0d23a9486baf285a226fc7caf647ac292d3991bb02ae51e3133949dd64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH6 0xB69E0D23A948 PUSH12 0xAF285A226FC7CAF647AC292D CODECOPY SWAP2 0xBB MUL 0xAE MLOAD 0xE3 SGT CODECOPY BLOBHASH 0xDD PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "23188:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23188,
									"end": 26035,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e265b69e0d23a9486baf285a226fc7caf647ac292d3991bb02ae51e3133949dd64736f6c63430008190033",
									".code": [
										{
											"begin": 23188,
											"end": 26035,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23188,
											"end": 26035,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC721_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC721_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC721_flattened.sol\":{\"keccak256\":\"0xd6bec3c160f9202c571ac0b1ec35b02829a2428535bbaee41c7337da1e892023\",\"urls\":[\"bzz-raw://2d00bda4b6a6a61dae1fb0fc26d498586395a78d7d4990eff229d3db5c272270\",\"dweb:/ipfs/QmVxHEaC2un73m3ZnWBB2fkbfqq1ghY7juXkfDh52ToY3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/PropiedadesERC721_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/PropiedadesERC721_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/PropiedadesERC721_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/PropiedadesERC721_flattened.sol",
					"exportedSymbols": {
						"Context": [
							1572
						],
						"ERC165": [
							1766
						],
						"ERC721": [
							2898
						],
						"IERC1155Errors": [
							136
						],
						"IERC165": [
							1745
						],
						"IERC20Errors": [
							41
						],
						"IERC721": [
							1880
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1905
						],
						"IERC721Receiver": [
							1734
						],
						"Math": [
							1293
						],
						"Ownable": [
							1717
						],
						"PropiedadesERC721": [
							2943
						],
						"SignedMath": [
							240
						],
						"Strings": [
							1543
						]
					},
					"id": 2944,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "322:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "341:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "661:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:49:0"
									},
									"src": "655:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "741:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "904:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:0"
									},
									"src": "898:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "945:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1115:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:18:0"
									},
									"src": "1109:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1160:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1516:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:52:0"
									},
									"src": "1510:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1601:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1786:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:18:0"
									},
									"src": "1780:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1831:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2037:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"src": "2031:43:0"
								}
							],
							"scope": 2944,
							"src": "312:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2078:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2230:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2250:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2480:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:0"
									},
									"src": "2474:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2520:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2663:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2686:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:17:0"
									},
									"src": "2657:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2709:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3009:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:48:0"
									},
									"src": "3003:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3084:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3247:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:16:0"
									},
									"src": "3241:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3289:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3459:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:18:0"
									},
									"src": "3453:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3505:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3763:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:35:0"
									},
									"src": "3757:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3831:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4016:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4046:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:18:0"
									},
									"src": "4010:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4062:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4270:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:18:0"
									},
									"src": "4264:46:0"
								}
							],
							"scope": 2944,
							"src": "2220:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4314:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4468:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4489:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:66:0"
									},
									"src": "4855:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4960:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5123:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:16:0"
									},
									"src": "5117:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5166:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:18:0"
									},
									"src": "5330:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5383:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5650:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:33:0"
									},
									"src": "5644:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5718:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5903:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:18:0"
									},
									"src": "5897:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5950:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6158:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6180:18:0"
									},
									"src": "6152:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6205:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6496:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:41:0"
									},
									"src": "6490:73:0"
								}
							],
							"scope": 2944,
							"src": "4458:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6705:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6731:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "SignedMath",
							"nameLocation": "6820:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "6972:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "6989:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "6993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "6989:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "7001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6989:13:0",
													"trueExpression": {
														"id": 151,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 147,
												"id": 154,
												"nodeType": "Return",
												"src": "6982:20:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6837:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "6917:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6921:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6921:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6938:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6931:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6931:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6920:20:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6964:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6963:8:0"
									},
									"scope": 240,
									"src": "6908:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "7151:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "7172:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7168:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "7180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7168:13:0",
													"trueExpression": {
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 165,
												"id": 172,
												"nodeType": "Return",
												"src": "7161:20:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "7015:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "7096:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7107:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7100:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 158,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7100:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7110:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 160,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:20:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7143:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 163,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7142:8:0"
									},
									"scope": 240,
									"src": "7087:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "7393:162:0",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7462:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "7455:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 184,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7455:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "7467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 187,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "7471:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7467:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 190,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7478:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7482:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7478:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7477:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7488:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7477:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7476:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7466:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7455:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "7507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 204,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 185,
																						"src": "7527:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7519:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 202,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7519:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7519:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7533:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "7519:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7512:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 200,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7512:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7512:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 209,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7541:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 210,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7545:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7541:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7540:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7512:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 214,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7511:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7507:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 183,
												"id": 216,
												"nodeType": "Return",
												"src": "7500:48:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "7194:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "7334:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7342:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7342:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7359:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7352:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7341:20:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7385:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7384:8:0"
									},
									"scope": 240,
									"src": "7325:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7699:158:0",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "7709:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 228,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7824:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7829:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7824:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "7837:2:0",
																		"subExpression": {
																			"id": 232,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7838:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7824:15:0",
																	"trueExpression": {
																		"id": 231,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "7833:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7816:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7816:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7816:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 225,
														"id": 236,
														"nodeType": "Return",
														"src": "7809:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "7561:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "7653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "7664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7657:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 220,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7656:10:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:9:0"
									},
									"scope": 240,
									"src": "7644:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2944,
							"src": "6812:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7987:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "8013:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "Math",
							"nameLocation": "8095:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "8106:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 245,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8167:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:2:0"
									},
									"src": "8161:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 250,
									"members": [
										{
											"id": 246,
											"name": "Floor",
											"nameLocation": "8220:5:0",
											"nodeType": "EnumValue",
											"src": "8220:5:0"
										},
										{
											"id": 247,
											"name": "Ceil",
											"nameLocation": "8263:4:0",
											"nodeType": "EnumValue",
											"src": "8263:4:0"
										},
										{
											"id": 248,
											"name": "Trunc",
											"nameLocation": "8305:5:0",
											"nodeType": "EnumValue",
											"src": "8305:5:0"
										},
										{
											"id": 249,
											"name": "Expand",
											"nameLocation": "8335:6:0",
											"nodeType": "EnumValue",
											"src": "8335:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8201:8:0",
									"nodeType": "EnumDefinition",
									"src": "8196:169:0"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "8545:140:0",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "8555:124:0",
												"statements": [
													{
														"assignments": [
															263
														],
														"declarations": [
															{
																"constant": false,
																"id": 263,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8587:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 280,
																"src": "8579:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 262,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8579:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 267,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8591:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "8595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8579:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "8614:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8618:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 275,
														"nodeType": "IfStatement",
														"src": "8610:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8629:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8636:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 261,
															"id": 274,
															"nodeType": "Return",
															"src": "8621:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8660:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 277,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "8666:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8659:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 261,
														"id": 279,
														"nodeType": "Return",
														"src": "8652:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "8371:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "8478:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8493:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8504:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8496:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8484:22:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8530:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8530:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8529:15:0"
									},
									"scope": 1293,
									"src": "8469:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8868:113:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "8878:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "8906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "8910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8906:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "8902:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8921:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8928:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8920:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 300,
															"nodeType": "Return",
															"src": "8913:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8952:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 303,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "8958:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 304,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8958:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 306,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8951:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 293,
														"id": 307,
														"nodeType": "Return",
														"src": "8944:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "8691:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "8801:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8816:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8808:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8827:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8819:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8807:22:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8853:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8853:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8852:15:0"
									},
									"scope": 1293,
									"src": "8792:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9167:417:0",
										"statements": [
											{
												"id": 350,
												"nodeType": "UncheckedBlock",
												"src": "9177:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9440:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 329,
														"nodeType": "IfStatement",
														"src": "9431:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9451:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9457:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9450:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 328,
															"nodeType": "Return",
															"src": "9443:16:0"
														}
													},
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "9481:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 350,
																"src": "9473:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 335,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9473:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9508:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "9512:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9508:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 345,
														"nodeType": "IfStatement",
														"src": "9504:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9528:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9527:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 344,
															"nodeType": "Return",
															"src": "9520:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9559:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 347,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9565:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9558:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 321,
														"id": 349,
														"nodeType": "Return",
														"src": "9551:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "8987:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "9100:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9115:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9107:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9126:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9118:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:22:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9152:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9152:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9151:15:0"
									},
									"scope": 1293,
									"src": "9091:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "9771:114:0",
										"statements": [
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "9781:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "9809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9814:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9809:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 371,
														"nodeType": "IfStatement",
														"src": "9805:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9825:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9832:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9824:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 363,
															"id": 370,
															"nodeType": "Return",
															"src": "9817:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9856:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "9862:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 374,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "9866:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9862:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9855:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 363,
														"id": 377,
														"nodeType": "Return",
														"src": "9848:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9590:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "9704:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9710:22:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9755:15:0"
									},
									"scope": 1293,
									"src": "9695:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "10082:114:0",
										"statements": [
											{
												"id": 406,
												"nodeType": "UncheckedBlock",
												"src": "10092:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 392,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "10116:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10136:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10143:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10135:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 391,
															"id": 398,
															"nodeType": "Return",
															"src": "10128:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "10173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 402,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "10177:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10173:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 404,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10166:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 391,
														"id": 405,
														"nodeType": "Return",
														"src": "10159:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "9891:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "10015:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10030:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10041:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10033:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10021:22:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10073:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10066:15:0"
									},
									"scope": 1293,
									"src": "10006:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "10333:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10350:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "10354:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10350:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "10362:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10350:13:0",
													"trueExpression": {
														"id": 421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "10358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 424,
												"nodeType": "Return",
												"src": "10343:20:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "10202:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10275:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10287:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10279:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10298:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10324:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10323:9:0"
									},
									"scope": 1293,
									"src": "10266:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10508:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 436,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10525:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 437,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10529:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "10537:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10525:13:0",
													"trueExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10533:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 442,
												"nodeType": "Return",
												"src": "10518:20:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "10376:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "10450:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10462:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10454:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10473:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10453:22:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10498:9:0"
									},
									"scope": 1293,
									"src": "10441:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "10729:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "10784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 455,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "10788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "10794:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 459,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "10798:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10794:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "10793:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10783:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 465,
												"nodeType": "Return",
												"src": "10776:28:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10551:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "10667:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10683:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10694:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10686:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10719:9:0"
									},
									"scope": 1293,
									"src": "10658:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "11103:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "11117:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "11113:127:0",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "11125:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 480,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "11224:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 481,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "11228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11224:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 476,
															"id": 483,
															"nodeType": "Return",
															"src": "11217:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "11328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11333:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11328:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "11342:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11346:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11342:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "11351:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11341:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11355:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11341:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11328:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 499,
												"nodeType": "Return",
												"src": "11321:35:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "10817:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "11041:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11057:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11049:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11068:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11060:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11048:22:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11093:9:0"
									},
									"scope": 1293,
									"src": "11032:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "11785:4018:0",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "11795:4002:0",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "12124:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12116:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12116:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "12132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 516,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "12136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12116:21:0"
													},
													{
														"assignments": [
															520
														],
														"declarations": [
															{
																"constant": false,
																"id": 520,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "12204:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12196:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12196:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 521,
														"nodeType": "VariableDeclarationStatement",
														"src": "12196:13:0"
													},
													{
														"AST": {
															"nativeSrc": "12276:122:0",
															"nodeType": "YulBlock",
															"src": "12276:122:0",
															"statements": [
																{
																	"nativeSrc": "12294:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12294:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "12311:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12311:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "12314:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12314:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12321:1:0",
																						"nodeType": "YulLiteral",
																						"src": "12321:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12317:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "12317:3:0"
																				},
																				"nativeSrc": "12317:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12317:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "12304:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "12304:6:0"
																		},
																		"nativeSrc": "12304:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12304:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "12298:2:0",
																			"nodeType": "YulTypedName",
																			"src": "12298:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12341:43:0",
																	"nodeType": "YulAssignment",
																	"src": "12341:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "12358:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "12358:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "12362:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "12362:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12354:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "12354:3:0"
																				},
																				"nativeSrc": "12354:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12354:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "12373:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "12373:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "12377:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "12377:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12370:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "12370:2:0"
																				},
																				"nativeSrc": "12370:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12370:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12350:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12350:3:0"
																		},
																		"nativeSrc": "12350:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12350:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "12341:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "12341:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12362:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12377:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "12341:5:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "12311:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "12314:1:0",
																"valueSize": 1
															}
														],
														"id": 522,
														"nodeType": "InlineAssembly",
														"src": "12267:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12479:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12479:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "12475:368:0",
														"trueBody": {
															"id": 530,
															"nodeType": "Block",
															"src": "12491:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 526,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "12809:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 527,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "12817:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12809:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 512,
																	"id": 529,
																	"nodeType": "Return",
																	"src": "12802:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "12949:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 533,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12964:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12949:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 539,
														"nodeType": "IfStatement",
														"src": "12945:88:0",
														"trueBody": {
															"id": 538,
															"nodeType": "Block",
															"src": "12971:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 535,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "12996:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12996:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 537,
																	"nodeType": "RevertStatement",
																	"src": "12989:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13296:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13288:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13288:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 542,
														"nodeType": "VariableDeclarationStatement",
														"src": "13288:17:0"
													},
													{
														"AST": {
															"nativeSrc": "13328:291:0",
															"nodeType": "YulBlock",
															"src": "13328:291:0",
															"statements": [
																{
																	"nativeSrc": "13397:38:0",
																	"nodeType": "YulAssignment",
																	"src": "13397:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13417:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13417:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "13420:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13420:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "13423:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "13423:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "13410:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "13410:6:0"
																		},
																		"nativeSrc": "13410:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13410:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "13397:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "13397:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "13517:41:0",
																	"nodeType": "YulAssignment",
																	"src": "13517:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "13530:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "13530:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "13540:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "13540:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13551:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13551:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "13537:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "13537:2:0"
																				},
																				"nativeSrc": "13537:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13537:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13526:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13526:3:0"
																		},
																		"nativeSrc": "13526:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13526:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "13517:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13517:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "13575:30:0",
																	"nodeType": "YulAssignment",
																	"src": "13575:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "13588:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "13588:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "13595:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "13595:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13584:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13584:3:0"
																		},
																		"nativeSrc": "13584:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13584:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "13575:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13575:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13423:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13551:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13575:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13588:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13517:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13530:5:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13397:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13540:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13595:9:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "13417:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "13420:1:0",
																"valueSize": 1
															}
														],
														"id": 543,
														"nodeType": "InlineAssembly",
														"src": "13319:300:0"
													},
													{
														"assignments": [
															545
														],
														"declarations": [
															{
																"constant": false,
																"id": 545,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "13831:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13823:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 552,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "13838:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 548,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "13857:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13853:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13852:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13838:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13823:46:0"
													},
													{
														"AST": {
															"nativeSrc": "13892:362:0",
															"nodeType": "YulBlock",
															"src": "13892:362:0",
															"statements": [
																{
																	"nativeSrc": "13957:37:0",
																	"nodeType": "YulAssignment",
																	"src": "13957:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "13976:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "13976:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "13989:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "13989:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "13972:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13972:3:0"
																		},
																		"nativeSrc": "13972:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13972:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "13957:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "13957:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14061:25:0",
																	"nodeType": "YulAssignment",
																	"src": "14061:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14074:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14074:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14081:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14081:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14070:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14070:3:0"
																		},
																		"nativeSrc": "14070:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14070:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14061:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14061:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14201:39:0",
																	"nodeType": "YulAssignment",
																	"src": "14201:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14221:1:0",
																								"nodeType": "YulLiteral",
																								"src": "14221:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "14224:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "14224:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "14217:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "14217:3:0"
																						},
																						"nativeSrc": "14217:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "14217:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "14231:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "14231:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "14213:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14213:3:0"
																				},
																				"nativeSrc": "14213:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14213:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14238:1:0",
																				"nodeType": "YulLiteral",
																				"src": "14238:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14209:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14209:3:0"
																		},
																		"nativeSrc": "14209:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14209:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "14201:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "14201:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13957:11:0",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13976:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14061:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14074:5:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "13989:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14081:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14201:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14224:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14231:4:0",
																"valueSize": 1
															}
														],
														"id": 553,
														"nodeType": "InlineAssembly",
														"src": "13883:371:0"
													},
													{
														"expression": {
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 554,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "14320:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 555,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "14329:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 556,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "14337:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14329:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14320:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "14320:21:0"
													},
													{
														"assignments": [
															561
														],
														"declarations": [
															{
																"constant": false,
																"id": 561,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "14667:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "14659:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 560,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14659:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 568,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14678:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "14682:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14678:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14677:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "14677:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14659:39:0"
													},
													{
														"expression": {
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "14915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 571,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "14930:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 572,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "14944:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14930:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14926:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14915:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 576,
														"nodeType": "ExpressionStatement",
														"src": "14915:36:0"
													},
													{
														"expression": {
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 577,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "14984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 579,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "14999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 580,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 584,
														"nodeType": "ExpressionStatement",
														"src": "14984:36:0"
													},
													{
														"expression": {
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 585,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15054:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15065:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 587,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15069:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 588,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15083:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15069:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15065:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15054:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "15054:36:0"
													},
													{
														"expression": {
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 593,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15124:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15135:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 595,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15139:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 596,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15153:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15139:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15135:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15124:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 600,
														"nodeType": "ExpressionStatement",
														"src": "15124:36:0"
													},
													{
														"expression": {
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 601,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 603,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 604,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15223:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15209:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15205:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15194:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"nodeType": "ExpressionStatement",
														"src": "15194:36:0"
													},
													{
														"expression": {
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 609,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15265:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15276:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15280:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 612,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15280:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15276:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15265:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 616,
														"nodeType": "ExpressionStatement",
														"src": "15265:36:0"
													},
													{
														"expression": {
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 617,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "15735:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 618,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15744:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 619,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "15752:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15744:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15735:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 622,
														"nodeType": "ExpressionStatement",
														"src": "15735:24:0"
													},
													{
														"expression": {
															"id": 623,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15780:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 512,
														"id": 624,
														"nodeType": "Return",
														"src": "15773:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "11369:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11696:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11711:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11722:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11733:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11725:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:43:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11777:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11769:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11768:16:0"
									},
									"scope": 1293,
									"src": "11687:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "16045:192:0",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16063:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "16055:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16079:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 646,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "16082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 647,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "16085:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															670
														],
														"referencedDeclaration": 627,
														"src": "16072:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16072:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16055:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 651,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "16128:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 650,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "16111:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16111:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 654,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 655,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "16151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 656,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "16154:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 653,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "16141:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16141:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16169:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16141:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16111:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "16107:101:0",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "16172:36:0",
													"statements": [
														{
															"expression": {
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 661,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "16186:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16196:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16186:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 664,
															"nodeType": "ExpressionStatement",
															"src": "16186:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "16224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 641,
												"id": 668,
												"nodeType": "Return",
												"src": "16217:13:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "15809:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15944:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15959:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15951:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "15970:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15962:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "15981:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15973:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16003:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15994:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "Rounding",
														"nameLocations": [
															"15994:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "15994:8:0"
													},
													"referencedDeclaration": 250,
													"src": "15994:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15950:62:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16036:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16035:9:0"
									},
									"scope": 1293,
									"src": "15935:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "16528:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "16542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16542:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "16538:45:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "16550:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "16564:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17270:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "17262:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 689,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "17290:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 688,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			949,
																			984
																		],
																		"referencedDeclaration": 949,
																		"src": "17285:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17285:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17296:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17285:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17284:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17279:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17262:36:0"
											},
											{
												"id": 780,
												"nodeType": "UncheckedBlock",
												"src": "17699:408:0",
												"statements": [
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17723:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17733:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17742:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17746:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17742:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17733:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17732:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17757:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17732:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17723:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "17723:35:0"
													},
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17772:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17782:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17791:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17795:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17791:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17782:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17781:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17806:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17781:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17772:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "17772:35:0"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17821:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17831:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17840:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17844:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17840:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17831:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17830:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17830:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17821:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "17821:35:0"
													},
													{
														"expression": {
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 729,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17870:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 730,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17880:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 731,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17889:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 732,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17893:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17889:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17880:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17879:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17904:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17879:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17870:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "17870:35:0"
													},
													{
														"expression": {
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17919:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 741,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17929:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 742,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17938:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 743,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17942:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17938:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17929:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17928:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17928:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17919:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "17919:35:0"
													},
													{
														"expression": {
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 752,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17978:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 753,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17987:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 754,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17991:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17987:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17978:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17977:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18002:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17977:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17968:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "17968:35:0"
													},
													{
														"expression": {
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "18017:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 763,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "18027:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 764,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "18036:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 765,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "18040:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18036:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18027:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 768,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18026:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18051:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18026:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18017:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "18017:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "18077:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 775,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "18085:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 776,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "18089:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18085:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 773,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "18073:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18073:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 677,
														"id": 779,
														"nodeType": "Return",
														"src": "18066:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "16243:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "16480:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16493:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16484:11:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16519:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16518:9:0"
									},
									"scope": 1293,
									"src": "16471:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "18289:164:0",
										"statements": [
											{
												"id": 815,
												"nodeType": "UncheckedBlock",
												"src": "18299:148:0",
												"statements": [
													{
														"assignments": [
															794
														],
														"declarations": [
															{
																"constant": false,
																"id": 794,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "18331:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 815,
																"src": "18323:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18323:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 798,
														"initialValue": {
															"arguments": [
																{
																	"id": 796,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "18345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 795,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	782,
																	817
																],
																"referencedDeclaration": 782,
																"src": "18340:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18340:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18323:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "18368:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 801,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 788,
																						"src": "18395:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 800,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "18378:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18378:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 803,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18408:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 804,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18417:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18408:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 806,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "18426:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18408:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18378:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18434:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "18378:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18430:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18377:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "18368:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 792,
														"id": 814,
														"nodeType": "Return",
														"src": "18361:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "18119:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18222:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18235:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18227:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18247:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18238:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "Rounding",
														"nameLocations": [
															"18238:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "18238:8:0"
													},
													"referencedDeclaration": 250,
													"src": "18238:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18226:30:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18280:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18279:9:0"
									},
									"scope": 1293,
									"src": "18213:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "18644:922:0",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18662:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "18654:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18671:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18654:18:0"
											},
											{
												"id": 945,
												"nodeType": "UncheckedBlock",
												"src": "18682:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18710:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18719:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "18710:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18710:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "18706:99:0",
														"trueBody": {
															"id": 842,
															"nodeType": "Block",
															"src": "18728:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 834,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18746:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18756:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18746:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "18746:13:0"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18777:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18787:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18777:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "18777:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18822:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18831:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "18822:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18836:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18822:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "18818:96:0",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "18839:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18857:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18867:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18857:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "18857:12:0"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18887:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18897:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18887:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "18887:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18940:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "18931:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18945:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18931:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "18927:96:0",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "18948:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18966:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18976:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18966:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "18966:12:0"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18996:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19006:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18996:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "18996:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19049:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19040:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19054:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19040:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "19036:96:0",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "19057:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19075:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19085:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19075:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "19075:12:0"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19105:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19115:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19105:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "19105:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19149:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19158:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19149:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19162:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19149:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "19145:93:0",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "19165:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19183:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19193:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19183:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "19183:11:0"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19212:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19222:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19212:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "19212:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19255:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "19255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19255:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "19251:93:0",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "19271:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19289:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19289:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "19289:11:0"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19318:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19328:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19318:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "19318:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19361:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "19361:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19361:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "19357:93:0",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "19377:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19395:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19405:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19395:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "19395:11:0"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19424:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19434:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19424:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "19424:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19467:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19476:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19467:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19480:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19467:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 944,
														"nodeType": "IfStatement",
														"src": "19463:64:0",
														"trueBody": {
															"id": 943,
															"nodeType": "Block",
															"src": "19483:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19501:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19511:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19501:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "19501:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 946,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 826,
													"src": "19553:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 947,
												"nodeType": "Return",
												"src": "19546:13:0"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "18459:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "18592:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:15:0"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18634:9:0"
									},
									"scope": 1293,
									"src": "18583:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "19799:168:0",
										"statements": [
											{
												"id": 982,
												"nodeType": "UncheckedBlock",
												"src": "19809:152:0",
												"statements": [
													{
														"assignments": [
															961
														],
														"declarations": [
															{
																"constant": false,
																"id": 961,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19841:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 982,
																"src": "19833:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 960,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19833:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 965,
														"initialValue": {
															"arguments": [
																{
																	"id": 963,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "19855:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 962,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	949,
																	984
																],
																"referencedDeclaration": 949,
																"src": "19850:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19850:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "19882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 968,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 955,
																						"src": "19909:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 967,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "19892:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19892:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19922:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 971,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 961,
																						"src": "19927:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19922:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 973,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "19936:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19922:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19892:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19948:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19892:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19944:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19891:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19882:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 959,
														"id": 981,
														"nodeType": "Return",
														"src": "19875:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "19572:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "19728:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19757:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19748:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "Rounding",
														"nameLocations": [
															"19748:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "19748:8:0"
													},
													"referencedDeclaration": 250,
													"src": "19748:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19732:34:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19789:9:0"
									},
									"scope": 1293,
									"src": "19719:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "20160:854:0",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20178:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "20170:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20187:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20170:18:0"
											},
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "20198:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20226:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20235:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20241:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20235:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "20226:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1012,
														"nodeType": "IfStatement",
														"src": "20222:103:0",
														"trueBody": {
															"id": 1011,
															"nodeType": "Block",
															"src": "20245:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20263:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20272:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20278:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "20272:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "20263:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "20263:17:0"
																},
																{
																	"expression": {
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1007,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20298:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20308:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20298:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1010,
																	"nodeType": "ExpressionStatement",
																	"src": "20298:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1013,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20342:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20351:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20357:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20351:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "20342:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1029,
														"nodeType": "IfStatement",
														"src": "20338:103:0",
														"trueBody": {
															"id": 1028,
															"nodeType": "Block",
															"src": "20361:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20379:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20388:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20394:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "20388:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "20379:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "20379:17:0"
																},
																{
																	"expression": {
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1024,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20414:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20424:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20414:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1027,
																	"nodeType": "ExpressionStatement",
																	"src": "20414:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20458:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20467:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "20458:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1046,
														"nodeType": "IfStatement",
														"src": "20454:103:0",
														"trueBody": {
															"id": 1045,
															"nodeType": "Block",
															"src": "20477:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20495:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20504:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20510:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "20504:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "20495:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1040,
																	"nodeType": "ExpressionStatement",
																	"src": "20495:17:0"
																},
																{
																	"expression": {
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20530:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20540:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20530:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1044,
																	"nodeType": "ExpressionStatement",
																	"src": "20530:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20574:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20583:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20589:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "20574:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1063,
														"nodeType": "IfStatement",
														"src": "20570:100:0",
														"trueBody": {
															"id": 1062,
															"nodeType": "Block",
															"src": "20592:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20610:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20619:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20625:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "20619:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "20610:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"nodeType": "ExpressionStatement",
																	"src": "20610:16:0"
																},
																{
																	"expression": {
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20644:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20654:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20644:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "20644:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20687:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20696:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20696:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "20687:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "20683:100:0",
														"trueBody": {
															"id": 1079,
															"nodeType": "Block",
															"src": "20705:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20723:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20732:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20738:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "20732:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "20723:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1074,
																	"nodeType": "ExpressionStatement",
																	"src": "20723:16:0"
																},
																{
																	"expression": {
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1075,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20757:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20767:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20757:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1078,
																	"nodeType": "ExpressionStatement",
																	"src": "20757:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20800:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20809:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20815:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20809:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "20800:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "20796:100:0",
														"trueBody": {
															"id": 1096,
															"nodeType": "Block",
															"src": "20818:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1086,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20836:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20845:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20851:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "20845:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "20836:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "20836:16:0"
																},
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20870:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20880:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20870:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "20870:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20913:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20922:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20928:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "20913:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1108,
														"nodeType": "IfStatement",
														"src": "20909:66:0",
														"trueBody": {
															"id": 1107,
															"nodeType": "Block",
															"src": "20931:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20949:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20959:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20949:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "20949:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1110,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 993,
													"src": "21001:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 1111,
												"nodeType": "Return",
												"src": "20994:13:0"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "19973:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "20107:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20112:15:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 1293,
									"src": "20098:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "21249:170:0",
										"statements": [
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "21259:154:0",
												"statements": [
													{
														"assignments": [
															1125
														],
														"declarations": [
															{
																"constant": false,
																"id": 1125,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21291:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "21283:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1129,
														"initialValue": {
															"arguments": [
																{
																	"id": 1127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "21306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1113,
																	1148
																],
																"referencedDeclaration": 1113,
																"src": "21300:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21300:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21283:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "21333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1132,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1119,
																						"src": "21360:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1131,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "21343:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21343:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21373:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1135,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "21379:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21373:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1137,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "21388:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21373:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21343:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21400:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21343:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21396:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21342:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21333:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1123,
														"id": 1145,
														"nodeType": "Return",
														"src": "21326:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "21020:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21177:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21191:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21183:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21207:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21198:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1117,
														"name": "Rounding",
														"nameLocations": [
															"21198:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "21198:8:0"
													},
													"referencedDeclaration": 250,
													"src": "21198:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21182:34:0"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21240:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21239:9:0"
									},
									"scope": 1293,
									"src": "21168:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "21739:600:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21757:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "21749:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"hexValue": "30",
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21766:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21749:18:0"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "21777:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21805:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "21805:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21820:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21805:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1174,
														"nodeType": "IfStatement",
														"src": "21801:98:0",
														"trueBody": {
															"id": 1173,
															"nodeType": "Block",
															"src": "21823:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21841:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21851:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21841:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "21841:13:0"
																},
																{
																	"expression": {
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "21872:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21872:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "21872:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21916:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21925:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21916:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21930:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21916:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "21912:95:0",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "21933:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21951:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21961:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21951:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "21951:12:0"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "21981:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21991:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21981:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "21981:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22024:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22033:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22024:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22038:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22024:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "22020:95:0",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "22041:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22059:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22069:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22059:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "22059:12:0"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22089:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22099:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22089:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "22089:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22132:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22141:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22132:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22132:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "22128:95:0",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "22149:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22167:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22177:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22167:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "22167:12:0"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22197:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22207:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22197:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "22197:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22240:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22249:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22240:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22253:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22240:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1230,
														"nodeType": "IfStatement",
														"src": "22236:64:0",
														"trueBody": {
															"id": 1229,
															"nodeType": "Block",
															"src": "22256:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22274:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22284:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22274:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "22274:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1232,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "22326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1233,
												"nodeType": "Return",
												"src": "22319:13:0"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "21425:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "21685:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21691:15:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21729:9:0"
									},
									"scope": 1293,
									"src": "21676:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "22576:177:0",
										"statements": [
											{
												"id": 1271,
												"nodeType": "UncheckedBlock",
												"src": "22586:161:0",
												"statements": [
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22618:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1271,
																"src": "22610:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "22634:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1248,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1235,
																	1273
																],
																"referencedDeclaration": 1235,
																"src": "22627:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22627:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22610:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "22661:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1254,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1241,
																						"src": "22688:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1253,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "22671:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22671:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22701:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1257,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1247,
																									"src": "22707:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "22717:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "22707:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1260,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "22706:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22701:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1262,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "22722:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22701:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22671:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22734:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22671:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22730:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22670:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22661:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1270,
														"nodeType": "Return",
														"src": "22654:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "22345:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "22503:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22518:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22525:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Rounding",
														"nameLocations": [
															"22525:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22525:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22525:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22509:34:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22566:9:0"
									},
									"scope": 1293,
									"src": "22494:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "22951:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1284,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "22974:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "22968:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22968:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22986:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "22968:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "22968:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1290,
												"nodeType": "Return",
												"src": "22961:31:0"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "22759:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "22886:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22903:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "Rounding",
														"nameLocations": [
															"22903:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22903:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22903:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22902:19:0"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22944:6:0"
									},
									"scope": 1293,
									"src": "22877:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2944,
							"src": "8087:14914:0",
							"usedErrors": [
								245
							],
							"usedEvents": []
						},
						{
							"id": 1294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23125:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "23153:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543
							],
							"name": "Strings",
							"nameLocation": "23196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1298,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "23235:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23210:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1296,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "23210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23248:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1301,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "23295:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23272:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1299,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "23272:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1300,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23312:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "23321:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1308,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "23413:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "23465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23441:31:0"
									},
									"src": "23407:66:0"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "23645:627:0",
										"statements": [
											{
												"id": 1354,
												"nodeType": "UncheckedBlock",
												"src": "23655:611:0",
												"statements": [
													{
														"assignments": [
															1317
														],
														"declarations": [
															{
																"constant": false,
																"id": 1317,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "23687:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23679:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1316,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23679:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1324,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "23707:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1318,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "23696:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23701:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "23696:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23696:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "23696:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23679:38:0"
													},
													{
														"assignments": [
															1326
														],
														"declarations": [
															{
																"constant": false,
																"id": 1326,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "23745:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23731:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23731:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1331,
														"initialValue": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "23765:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "23754:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23758:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23754:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23731:41:0"
													},
													{
														"assignments": [
															1333
														],
														"declarations": [
															{
																"constant": false,
																"id": 1333,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "23794:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23786:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1334,
														"nodeType": "VariableDeclarationStatement",
														"src": "23786:11:0"
													},
													{
														"AST": {
															"nativeSrc": "23867:67:0",
															"nodeType": "YulBlock",
															"src": "23867:67:0",
															"statements": [
																{
																	"nativeSrc": "23885:35:0",
																	"nodeType": "YulAssignment",
																	"src": "23885:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "23896:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "23896:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23908:2:0",
																						"nodeType": "YulLiteral",
																						"src": "23908:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "23912:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "23912:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23904:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "23904:3:0"
																				},
																				"nativeSrc": "23904:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "23904:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23892:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "23892:3:0"
																		},
																		"nativeSrc": "23892:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "23892:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "23885:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "23885:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1326,
																"isOffset": false,
																"isSlot": false,
																"src": "23896:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1317,
																"isOffset": false,
																"isSlot": false,
																"src": "23912:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1333,
																"isOffset": false,
																"isSlot": false,
																"src": "23885:3:0",
																"valueSize": 1
															}
														],
														"id": 1335,
														"nodeType": "InlineAssembly",
														"src": "23858:76:0"
													},
													{
														"body": {
															"id": 1350,
															"nodeType": "Block",
															"src": "23960:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "23978:5:0",
																		"subExpression": {
																			"id": 1337,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "23978:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "23978:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "24061:86:0",
																		"nodeType": "YulBlock",
																		"src": "24061:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "24091:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "24091:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "24105:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "24105:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24112:2:0",
																											"nodeType": "YulLiteral",
																											"src": "24112:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "24101:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "24101:3:0"
																									},
																									"nativeSrc": "24101:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "24101:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "24117:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "24117:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "24096:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "24096:4:0"
																							},
																							"nativeSrc": "24096:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "24096:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "24083:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "24083:7:0"
																					},
																					"nativeSrc": "24083:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "24083:46:0"
																				},
																				"nativeSrc": "24083:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "24083:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1298,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24117:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1333,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24091:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1311,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24105:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1340,
																	"nodeType": "InlineAssembly",
																	"src": "24052:95:0"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24164:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24173:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "24164:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "24164:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1345,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24197:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24206:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24197:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1349,
																	"nodeType": "IfStatement",
																	"src": "24193:21:0",
																	"trueBody": {
																		"id": 1348,
																		"nodeType": "Break",
																		"src": "24209:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1351,
														"nodeType": "WhileStatement",
														"src": "23947:282:0"
													},
													{
														"expression": {
															"id": 1352,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "24249:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1315,
														"id": 1353,
														"nodeType": "Return",
														"src": "24242:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "23479:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "23583:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23600:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23591:15:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23630:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23629:15:0"
									},
									"scope": 1543,
									"src": "23574:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "24448:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "24479:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24487:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24479:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24497:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "24479:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24491:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "24525:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1374,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "24510:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$240_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24521:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 239,
																		"src": "24510:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24510:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1373,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "24501:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24501:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1364,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "24465:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24472:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "24465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24465:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1380,
												"nodeType": "Return",
												"src": "24458:75:0"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "24278:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "24381:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24403:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24396:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24395:14:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24433:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24432:15:0"
									},
									"scope": 1543,
									"src": "24372:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "24719:100:0",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "24729:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "24772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "24791:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1392,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "24779:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "24784:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1235,
																			"src": "24779:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24779:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24800:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "24779:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1402,
																	1485,
																	1505
																],
																"referencedDeclaration": 1485,
																"src": "24760:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24760:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1399,
														"nodeType": "Return",
														"src": "24753:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "24546:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24654:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24665:15:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24704:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24704:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24703:15:0"
									},
									"scope": 1543,
									"src": "24645:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "25032:435:0",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "25050:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25042:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"id": 1414,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "25063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25042:26:0"
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "25091:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25078:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25110:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1421,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "25114:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "25110:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25100:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25104:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25100:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25078:47:0"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25135:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1429,
														"indexExpression": {
															"hexValue": "30",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25142:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25135:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25147:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "25135:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "25135:15:0"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1433,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1435,
														"indexExpression": {
															"hexValue": "31",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25160:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25172:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "25160:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "25160:15:0"
											},
											{
												"body": {
													"id": 1467,
													"nodeType": "Block",
													"src": "25230:95:0",
													"statements": [
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1453,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "25244:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1455,
																	"indexExpression": {
																		"id": 1454,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "25251:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25244:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1456,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "25256:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1460,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1457,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "25267:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25280:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "25267:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25256:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "25244:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "25244:40:0"
														},
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1463,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "25298:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25298:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "25298:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "25218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"initializationExpression": {
													"assignments": [
														1440
													],
													"declarations": [
														{
															"constant": false,
															"id": 1440,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "25198:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1468,
															"src": "25190:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1439,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1446,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25202:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1442,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "25206:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25202:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "25202:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "25190:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "25225:3:0",
														"subExpression": {
															"id": 1450,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "25227:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ExpressionStatement",
													"src": "25225:3:0"
												},
												"nodeType": "ForStatement",
												"src": "25185:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "25338:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25338:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "25334:96:0",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "25355:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "25405:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "25412:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1472,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "25376:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25376:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "RevertStatement",
															"src": "25369:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1481,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25446:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1479,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "25446:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25446:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1483,
												"nodeType": "Return",
												"src": "25439:21:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "24825:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24951:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24971:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "24963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "24986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "24978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24962:31:0"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "25017:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25016:15:0"
									},
									"scope": 1543,
									"src": "24942:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "25699:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "25744:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25736:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "25736:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25736:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25728:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25728:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25728:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1501,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "25752:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1493,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1402,
															1485,
															1505
														],
														"referencedDeclaration": 1485,
														"src": "25716:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25716:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1503,
												"nodeType": "Return",
												"src": "25709:58:0"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "25473:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "25635:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "25655:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25647:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25646:14:0"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25684:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25684:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25683:15:0"
									},
									"scope": 1543,
									"src": "25626:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "25929:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1517,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "25952:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25946:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25946:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25955:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25946:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "25971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25965:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25965:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25965:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25974:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25965:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25946:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1529,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "26000:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25994:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1527,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "25994:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25994:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1526,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "25984:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25984:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1535,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "26023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26017:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1533,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "26017:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26017:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1532,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26007:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26007:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "25984:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25946:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1540,
												"nodeType": "Return",
												"src": "25939:87:0"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "25780:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "25860:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25880:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25866:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25866:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25897:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25883:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25865:34:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25923:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25923:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25922:6:0"
									},
									"scope": 1543,
									"src": "25851:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2944,
							"src": "23188:2847:0",
							"usedErrors": [
								1308
							],
							"usedEvents": []
						},
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26159:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "26185:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1572,
							"linearizedBaseContracts": [
								1572
							],
							"name": "Context",
							"nameLocation": "26700:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "26776:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1550,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26797:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "26793:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1552,
												"nodeType": "Return",
												"src": "26786:17:0"
											}
										]
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "26723:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26733:2:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "26767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26766:9:0"
									},
									"scope": 1572,
									"src": "26714:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "26883:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26900:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26904:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "26900:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "26893:15:0"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "26825:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26833:2:0"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "26867:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26867:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26866:16:0"
									},
									"scope": 1572,
									"src": "26816:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "26993:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27010:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1567,
												"id": 1569,
												"nodeType": "Return",
												"src": "27003:8:0"
											}
										]
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "26930:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26950:2:0"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "26984:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26983:9:0"
									},
									"scope": 1572,
									"src": "26921:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2944,
							"src": "26682:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27146:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "Context",
										"nameLocations": [
											"27690:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1572,
										"src": "27690:7:0"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "27690:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "27173:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717,
								1572
							],
							"name": "Ownable",
							"nameLocation": "27679:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1578,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27720:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "27704:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1577,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27704:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "27733:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1583,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "27829:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "27856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27855:17:0"
									},
									"src": "27823:50:0"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "27879:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1588,
									"name": "OwnableInvalidOwner",
									"nameLocation": "27972:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "27992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27991:15:0"
									},
									"src": "27966:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1594,
									"name": "OwnershipTransferred",
									"nameLocation": "28019:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "28056:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "28040:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28087:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "28071:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28039:57:0"
									},
									"src": "28013:84:0"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "28257:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1600,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "28271:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28287:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28287:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28271:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "28267:95:0",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "28299:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28348:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28340:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28340:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28340:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1606,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "28320:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28320:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1612,
															"nodeType": "RevertStatement",
															"src": "28313:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "28390:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1615,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "28371:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28371:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "28371:32:0"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "28103:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1620,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "28243:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "28235:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28234:22:0"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28257:0:0"
									},
									"scope": 1717,
									"src": "28223:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "28519:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1623,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "28529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28529:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "28529:13:0"
											},
											{
												"id": 1626,
												"nodeType": "PlaceholderStatement",
												"src": "28552:1:0"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "28416:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1628,
									"name": "onlyOwner",
									"nameLocation": "28507:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28516:2:0"
									},
									"src": "28498:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "28691:30:0",
										"statements": [
											{
												"expression": {
													"id": 1634,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "28708:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1635,
												"nodeType": "Return",
												"src": "28701:13:0"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "28566:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "28645:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28650:2:0"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "28682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28681:9:0"
									},
									"scope": 1717,
									"src": "28636:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "28839:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1641,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "28853:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28853:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1643,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "28864:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28864:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28853:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "28849:101:0",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "28878:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1647,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "28926:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28926:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1646,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "28899:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28899:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "28892:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "28727:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28803:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28814:2:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28839:0:0"
									},
									"scope": 1717,
									"src": "28794:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "29345:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29382:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29374:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29374:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1660,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "29355:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29355:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "29355:30:0"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "28962:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1657,
												"name": "onlyOwner",
												"nameLocations": [
													"29335:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "29335:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29335:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "29300:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29317:2:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29345:0:0"
									},
									"scope": 1717,
									"src": "29291:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "29611:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1676,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "29625:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29637:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29637:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29625:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "29621:91:0",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "29649:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29698:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29690:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29690:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1682,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "29670:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29670:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "29663:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "29740:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1691,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "29721:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29721:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "29721:28:0"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "29398:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1673,
												"name": "onlyOwner",
												"nameLocations": [
													"29601:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "29601:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29601:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29550:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29576:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "29568:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29567:18:0"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29611:0:0"
									},
									"scope": 1717,
									"src": "29541:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "29973:124:0",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "29991:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "29983:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1702,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29983:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"id": 1704,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "30002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29983:25:0"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "30018:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1707,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "30027:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30018:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "30018:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1711,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "30071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "30081:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1710,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "30050:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30050:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "EmitStatement",
												"src": "30045:45:0"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "29762:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "29919:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29946:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "29938:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29937:18:0"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29973:0:0"
									},
									"scope": 1717,
									"src": "29910:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2944,
							"src": "27661:2438:0",
							"usedErrors": [
								1583,
								1588
							],
							"usedEvents": [
								1594
							]
						},
						{
							"id": 1718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30253:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1719,
								"nodeType": "StructuredDocumentation",
								"src": "30279:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1734,
							"linearizedBaseContracts": [
								1734
							],
							"name": "IERC721Receiver",
							"nameLocation": "30442:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "30464:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30978:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "31012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31092:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31077:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30994:108:0"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31121:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31120:8:0"
									},
									"scope": 1734,
									"src": "30969:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2944,
							"src": "30432:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31283:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1736,
								"nodeType": "StructuredDocumentation",
								"src": "31309:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "IERC165",
							"nameLocation": "31599:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "31613:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "31967:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "31992:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "31985:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1738,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31984:20:0"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "32028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32027:6:0"
									},
									"scope": 1745,
									"src": "31958:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2944,
							"src": "31589:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32186:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1748,
										"name": "IERC165",
										"nameLocations": [
											"32720:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "32720:7:0"
									},
									"id": 1749,
									"nodeType": "InheritanceSpecifier",
									"src": "32720:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1747,
								"nodeType": "StructuredDocumentation",
								"src": "32213:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1766,
							"linearizedBaseContracts": [
								1766,
								1745
							],
							"name": "ERC165",
							"nameLocation": "32710:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1744
									],
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "32877:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1757,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "32894:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1759,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "32914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1745_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1745_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1758,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "32909:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32909:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1745",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "32923:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "32909:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "32894:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1756,
												"id": 1763,
												"nodeType": "Return",
												"src": "32887:47:0"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "32734:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "32804:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "32829:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "32822:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1751,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32821:20:0"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "32871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32870:6:0"
									},
									"scope": 1766,
									"src": "32795:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2944,
							"src": "32692:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33081:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1769,
										"name": "IERC165",
										"nameLocations": [
											"33197:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "33197:7:0"
									},
									"id": 1770,
									"nodeType": "InheritanceSpecifier",
									"src": "33197:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "33108:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1880,
							"linearizedBaseContracts": [
								1880,
								1745
							],
							"name": "IERC721",
							"nameLocation": "33186:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "33211:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1779,
									"name": "Transfer",
									"nameLocation": "33310:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "33319:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33357:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "33341:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "33361:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33318:67:0"
									},
									"src": "33304:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "33392:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1788,
									"name": "Approval",
									"nameLocation": "33497:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "33506:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "33529:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33571:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "33555:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33505:74:0"
									},
									"src": "33491:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "33586:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1797,
									"name": "ApprovalForAll",
									"nameLocation": "33714:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "33729:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "33752:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "33778:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33728:64:0"
									},
									"src": "33708:85:0"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "33799:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "33889:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "33899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33898:15:0"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "33945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "33937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33936:17:0"
									},
									"scope": 1880,
									"src": "33880:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "33960:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "34105:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34121:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "34113:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34112:17:0"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34161:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "34153:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34152:15:0"
									},
									"scope": 1880,
									"src": "34096:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "34174:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34753:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "34770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "34784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "34796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "34813:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34769:64:0"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34842:0:0"
									},
									"scope": 1880,
									"src": "34744:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "34849:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "35568:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35593:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "35585:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35607:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "35599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "35611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35584:43:0"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35636:0:0"
									},
									"scope": 1880,
									"src": "35559:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "35643:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "36389:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36410:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36402:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36424:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36416:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36436:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36401:43:0"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36453:0:0"
									},
									"scope": 1880,
									"src": "36380:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "36460:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "36926:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36942:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "36934:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "36946:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36933:29:0"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36971:0:0"
									},
									"scope": 1880,
									"src": "36917:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "36978:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37307:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "37325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37348:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "37343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37324:33:0"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37366:0:0"
									},
									"scope": 1880,
									"src": "37298:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "37373:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37526:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37546:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "37538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37537:17:0"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37586:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "37578:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37577:18:0"
									},
									"scope": 1880,
									"src": "37517:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "37602:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37754:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "37771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37794:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "37786:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37770:33:0"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "37827:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37826:6:0"
									},
									"scope": 1880,
									"src": "37745:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2944,
							"src": "33176:4659:0",
							"usedErrors": [],
							"usedEvents": [
								1779,
								1788,
								1797
							]
						},
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38011:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1883,
										"name": "IERC721",
										"nameLocations": [
											"38201:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1880,
										"src": "38201:7:0"
									},
									"id": 1884,
									"nodeType": "InheritanceSpecifier",
									"src": "38201:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1882,
								"nodeType": "StructuredDocumentation",
								"src": "38038:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1905,
							"linearizedBaseContracts": [
								1905,
								1880,
								1745
							],
							"name": "IERC721Metadata",
							"nameLocation": "38182:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "38215:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "38287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38291:2:0"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38317:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38316:15:0"
									},
									"scope": 1905,
									"src": "38278:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "38338:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "38412:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38418:2:0"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "38444:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38444:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38443:15:0"
									},
									"scope": 1905,
									"src": "38403:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "38465:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "38569:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "38578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38577:17:0"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "38618:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1901,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38617:15:0"
									},
									"scope": 1905,
									"src": "38560:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2944,
							"src": "38172:463:0",
							"usedErrors": [],
							"usedEvents": [
								1779,
								1788,
								1797
							]
						},
						{
							"id": 1906,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38771:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1908,
										"name": "Context",
										"nameLocations": [
											"39079:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1572,
										"src": "39079:7:0"
									},
									"id": 1909,
									"nodeType": "InheritanceSpecifier",
									"src": "39079:7:0"
								},
								{
									"baseName": {
										"id": 1910,
										"name": "ERC165",
										"nameLocations": [
											"39088:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1766,
										"src": "39088:6:0"
									},
									"id": 1911,
									"nodeType": "InheritanceSpecifier",
									"src": "39088:6:0"
								},
								{
									"baseName": {
										"id": 1912,
										"name": "IERC721",
										"nameLocations": [
											"39096:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1880,
										"src": "39096:7:0"
									},
									"id": 1913,
									"nodeType": "InheritanceSpecifier",
									"src": "39096:7:0"
								},
								{
									"baseName": {
										"id": 1914,
										"name": "IERC721Metadata",
										"nameLocations": [
											"39105:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "39105:15:0"
									},
									"id": 1915,
									"nodeType": "InheritanceSpecifier",
									"src": "39105:15:0"
								},
								{
									"baseName": {
										"id": 1916,
										"name": "IERC721Errors",
										"nameLocations": [
											"39122:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "39122:13:0"
									},
									"id": 1917,
									"nodeType": "InheritanceSpecifier",
									"src": "39122:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1907,
								"nodeType": "StructuredDocumentation",
								"src": "38804:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2898,
							"linearizedBaseContracts": [
								2898,
								89,
								1905,
								1880,
								1766,
								1745,
								1572
							],
							"name": "ERC721",
							"nameLocation": "39069:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1920,
									"libraryName": {
										"id": 1918,
										"name": "Strings",
										"nameLocations": [
											"39148:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "39148:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39142:26:0",
									"typeName": {
										"id": 1919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39160:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1922,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "39207:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39192:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1921,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39192:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1924,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "39254:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39239:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1923,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39239:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1928,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "39312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39268:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1927,
										"keyName": "tokenId",
										"keyNameLocation": "39284:7:0",
										"keyType": {
											"id": 1925,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39276:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39268:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1926,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39295:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "39368:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39326:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1931,
										"keyName": "owner",
										"keyNameLocation": "39342:5:0",
										"keyType": {
											"id": 1929,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39334:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39326:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1930,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39351:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1936,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "39428:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39384:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1935,
										"keyName": "tokenId",
										"keyNameLocation": "39400:7:0",
										"keyType": {
											"id": 1933,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39392:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39384:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39411:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1942,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "39518:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39450:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1941,
										"keyName": "owner",
										"keyNameLocation": "39466:5:0",
										"keyType": {
											"id": 1937,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39458:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39450:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1940,
											"keyName": "operator",
											"keyNameLocation": "39491:8:0",
											"keyType": {
												"id": 1938,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "39483:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "39475:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1939,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "39503:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "39712:57:0",
										"statements": [
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "39722:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1951,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "39730:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39722:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "39722:13:0"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "39745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1955,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "39755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39745:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "39745:17:0"
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "39543:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1959,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "39682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "39668:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "39703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "39689:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39667:44:0"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39712:0:0"
									},
									"scope": 2898,
									"src": "39656:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1744,
										1765
									],
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "39944:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1970,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "39973:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1972,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1880,
																			"src": "39993:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1880_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1880_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1971,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "39988:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39988:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1880",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40002:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "39988:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "39973:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "40029:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1978,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "40049:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1905_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1905_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1977,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40044:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40044:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1905",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40066:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40044:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40029:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "39973:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1985,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "40117:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1983,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "40093:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2898_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40099:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1765,
															"src": "40093:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40093:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39973:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1988,
												"nodeType": "Return",
												"src": "39954:175:0"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "39775:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "39845:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1966,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1964,
												"name": "ERC165",
												"nameLocations": [
													"39912:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "39912:6:0"
											},
											{
												"id": 1965,
												"name": "IERC165",
												"nameLocations": [
													"39920:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1745,
												"src": "39920:7:0"
											}
										],
										"src": "39903:25:0"
									},
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "39870:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "39863:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1961,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "39863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39862:20:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "39938:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39937:6:0"
									},
									"scope": 2898,
									"src": "39836:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1805
									],
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "40267:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "40281:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40290:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40290:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40281:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2012,
												"nodeType": "IfStatement",
												"src": "40277:87:0",
												"trueBody": {
													"id": 2011,
													"nodeType": "Block",
													"src": "40302:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2004,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "40323:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40323:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2010,
															"nodeType": "RevertStatement",
															"src": "40316:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2013,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "40380:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2015,
													"indexExpression": {
														"id": 2014,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "40390:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40380:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1997,
												"id": 2016,
												"nodeType": "Return",
												"src": "40373:23:0"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "40142:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "40204:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "40214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40213:15:0"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "40258:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40257:9:0"
									},
									"scope": 2898,
									"src": "40195:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1813
									],
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "40532:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "40563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "40549:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40549:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2029,
												"nodeType": "Return",
												"src": "40542:29:0"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "40409:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "40469:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40485:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "40477:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40476:17:0"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "40523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40522:9:0"
									},
									"scope": 2898,
									"src": "40460:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1890
									],
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "40700:29:0",
										"statements": [
											{
												"expression": {
													"id": 2037,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1922,
													"src": "40717:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2038,
												"nodeType": "Return",
												"src": "40710:12:0"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "40584:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "40649:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40653:2:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "40685:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40685:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40684:15:0"
									},
									"scope": 2898,
									"src": "40640:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1896
									],
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "40855:31:0",
										"statements": [
											{
												"expression": {
													"id": 2046,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1924,
													"src": "40872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2047,
												"nodeType": "Return",
												"src": "40865:14:0"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "40735:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "40802:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40808:2:0"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "40840:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40840:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40839:15:0"
									},
									"scope": 2898,
									"src": "40793:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1904
									],
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "41031:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2058,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "41055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2057,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "41041:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41041:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "41041:22:0"
											},
											{
												"assignments": [
													2062
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "41088:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "41074:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2061,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2065,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2063,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "41098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41098:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41074:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "41131:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41125:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2066,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "41125:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41125:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41140:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "41125:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41149:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41125:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41198:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41125:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2076,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "41167:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2077,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "41176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "41184:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1356,
																	"src": "41176:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41176:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41153:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2073,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "41153:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41160:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "41153:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41153:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2056,
												"id": 2083,
												"nodeType": "Return",
												"src": "41118:82:0"
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "40892:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "40961:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40978:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "40970:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40969:17:0"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "41016:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41015:15:0"
									},
									"scope": 2898,
									"src": "40952:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "41515:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41532:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2090,
												"id": 2092,
												"nodeType": "Return",
												"src": "41525:9:0"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "41213:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "41458:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41466:2:0"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "41500:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2088,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41499:15:0"
									},
									"scope": 2898,
									"src": "41449:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "41659:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2103,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "41678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "41682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2105,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "41691:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41691:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2102,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2701,
															2767
														],
														"referencedDeclaration": 2701,
														"src": "41669:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41669:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "41669:35:0"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "41547:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "41607:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41623:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "41615:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "41627:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41614:29:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41659:0:0"
									},
									"scope": 2898,
									"src": "41598:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1869
									],
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "41848:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2119,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "41872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2118,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "41858:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41858:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "41858:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "41911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2122,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "41898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41898:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2125,
												"nodeType": "Return",
												"src": "41891:28:0"
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "41717:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "41781:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41801:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "41793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41792:17:0"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "41839:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41838:9:0"
									},
									"scope": 2898,
									"src": "41772:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "42068:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2136,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "42097:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42097:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "42111:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2139,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "42121:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2135,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "42078:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42078:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "42078:52:0"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "41932:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "42002:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42028:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "42020:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "42043:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "42038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42038:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42019:33:0"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42068:0:0"
									},
									"scope": 2898,
									"src": "41993:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1879
									],
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "42297:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2153,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "42314:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2155,
														"indexExpression": {
															"id": 2154,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "42333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "42314:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2157,
													"indexExpression": {
														"id": 2156,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "42340:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "42314:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2158,
												"nodeType": "Return",
												"src": "42307:42:0"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "42143:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "42212:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42237:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42229:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42252:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42244:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42228:33:0"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42291:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42290:6:0"
									},
									"scope": 2898,
									"src": "42203:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1845
									],
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "42498:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2170,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "42512:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42518:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42518:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42512:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2184,
												"nodeType": "IfStatement",
												"src": "42508:87:0",
												"trueBody": {
													"id": 2183,
													"nodeType": "Block",
													"src": "42530:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42581:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42573:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2177,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42573:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42573:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2176,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "42551:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42551:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2182,
															"nodeType": "RevertStatement",
															"src": "42544:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2186
												],
												"declarations": [
													{
														"constant": false,
														"id": 2186,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "42821:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "42813:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42813:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2193,
												"initialValue": {
													"arguments": [
														{
															"id": 2188,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "42845:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2189,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "42849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "42858:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42858:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2187,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "42837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42837:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42813:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2194,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "42885:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2195,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "42902:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42885:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "42881:109:0",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "42908:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2198,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "42950:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2199,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "42956:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2200,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "42965:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2197,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "42929:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42929:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2202,
															"nodeType": "RevertStatement",
															"src": "42922:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "42362:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "42427:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42462:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42454:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42439:43:0"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42498:0:0"
									},
									"scope": 2898,
									"src": "42418:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1835
									],
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "43138:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2217,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "43165:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "43171:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2219,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "43175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43184:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2216,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2224,
															2250
														],
														"referencedDeclaration": 2250,
														"src": "43148:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43148:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "43148:39:0"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "43002:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43071:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43096:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43088:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43110:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43102:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43087:43:0"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43138:0:0"
									},
									"scope": 2898,
									"src": "43062:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "43363:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "43386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "43392:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2239,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "43396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "43373:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43373:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "43373:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2243,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "43437:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2244,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "43443:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "43447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "43456:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2242,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "43414:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43414:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "43414:47:0"
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "43200:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43269:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43294:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43286:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43308:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43300:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43342:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43329:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43285:62:0"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43363:0:0"
									},
									"scope": 2898,
									"src": "43260:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "44057:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2258,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "44074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2260,
													"indexExpression": {
														"id": 2259,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "44082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44074:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2261,
												"nodeType": "Return",
												"src": "44067:23:0"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "43474:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "43991:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44008:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44000:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43999:17:0"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44047:9:0"
									},
									"scope": 2898,
									"src": "43982:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "44292:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2271,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "44309:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2273,
													"indexExpression": {
														"id": 2272,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "44325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44309:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2274,
												"nodeType": "Return",
												"src": "44302:31:0"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "44103:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "44222:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "44235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44234:17:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "44283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44282:9:0"
									},
									"scope": 2898,
									"src": "44213:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "44760:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2288,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "44789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44808:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44800:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44800:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44800:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "44789:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2294,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2279,
																			"src": "44827:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2295,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2281,
																			"src": "44836:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "44827:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2298,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2279,
																				"src": "44864:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2299,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2281,
																				"src": "44871:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2297,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "44847:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44847:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "44827:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2303,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "44896:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2302,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "44883:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44883:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2305,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "44908:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "44883:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "44827:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2308,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "44826:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44789:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2287,
												"id": 2310,
												"nodeType": "Return",
												"src": "44770:146:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "44346:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "44660:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44697:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44689:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44714:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44673:49:0"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44754:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44754:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44753:6:0"
									},
									"scope": 2898,
									"src": "44651:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "45454:271:0",
										"statements": [
											{
												"condition": {
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "45468:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2323,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "45483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2324,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "45490:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2325,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "45499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2322,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "45469:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45469:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2347,
												"nodeType": "IfStatement",
												"src": "45464:255:0",
												"trueBody": {
													"id": 2346,
													"nodeType": "Block",
													"src": "45509:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "45527:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45544:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "45536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2329,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "45536:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45536:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "45527:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2344,
																"nodeType": "Block",
																"src": "45625:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2340,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2317,
																					"src": "45677:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2341,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "45686:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2339,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "45650:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45650:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2343,
																		"nodeType": "RevertStatement",
																		"src": "45643:51:0"
																	}
																]
															},
															"id": 2345,
															"nodeType": "IfStatement",
															"src": "45523:186:0",
															"trueBody": {
																"id": 2338,
																"nodeType": "Block",
																"src": "45548:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2335,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "45596:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2334,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "45573:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45573:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2337,
																		"nodeType": "RevertStatement",
																		"src": "45566:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "44929:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "45366:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45391:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45383:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45406:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45398:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45382:49:0"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45454:0:0"
									},
									"scope": 2898,
									"src": "45357:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "46442:78:0",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "46452:62:0",
												"statements": [
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2357,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "46476:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2359,
																"indexExpression": {
																	"id": 2358,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "46486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "46476:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2360,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "46498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "46476:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "46476:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "45731:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "46376:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "46401:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "46393:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46418:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "46410:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2353,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "46410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46392:32:0"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46442:0:0"
									},
									"scope": 2898,
									"src": "46367:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "47208:700:0",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "47226:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2454,
														"src": "47218:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47218:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"arguments": [
														{
															"id": 2380,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "47242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2379,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "47233:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47233:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47218:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2383,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "47310:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47326:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47318:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47318:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47310:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2396,
												"nodeType": "IfStatement",
												"src": "47306:86:0",
												"trueBody": {
													"id": 2395,
													"nodeType": "Block",
													"src": "47330:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2390,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2378,
																		"src": "47361:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2391,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "47367:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2392,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "47373:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2389,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "47344:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47344:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2394,
															"nodeType": "ExpressionStatement",
															"src": "47344:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2397,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "47436:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2398,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47444:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47444:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47436:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2424,
												"nodeType": "IfStatement",
												"src": "47432:256:0",
												"trueBody": {
													"id": 2423,
													"nodeType": "Block",
													"src": "47456:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47569:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47561:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2404,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47561:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47561:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2408,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "47573:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47590:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47582:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47582:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47582:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47594:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2403,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2701,
																		2767
																	],
																	"referencedDeclaration": 2767,
																	"src": "47552:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47552:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2415,
															"nodeType": "ExpressionStatement",
															"src": "47552:48:0"
														},
														{
															"id": 2422,
															"nodeType": "UncheckedBlock",
															"src": "47615:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2416,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "47643:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2418,
																			"indexExpression": {
																				"id": 2417,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2378,
																				"src": "47653:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47643:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47662:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47643:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2421,
																	"nodeType": "ExpressionStatement",
																	"src": "47643:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2425,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "47702:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47708:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47708:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47702:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2439,
												"nodeType": "IfStatement",
												"src": "47698:107:0",
												"trueBody": {
													"id": 2438,
													"nodeType": "Block",
													"src": "47720:85:0",
													"statements": [
														{
															"id": 2437,
															"nodeType": "UncheckedBlock",
															"src": "47734:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2431,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "47762:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2433,
																			"indexExpression": {
																				"id": 2432,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "47772:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47762:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47779:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47762:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2436,
																	"nodeType": "ExpressionStatement",
																	"src": "47762:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2440,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "47815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2442,
														"indexExpression": {
															"id": 2441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "47823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "47815:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2443,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "47834:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47815:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "47815:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "47861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "47867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2449,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "47871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "47852:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47852:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2451,
												"nodeType": "EmitStatement",
												"src": "47847:32:0"
											},
											{
												"expression": {
													"id": 2452,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2378,
													"src": "47897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2453,
												"nodeType": "Return",
												"src": "47890:11:0"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "46526:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "47122:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47138:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47130:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47150:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47142:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "47167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47129:43:0"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47198:9:0"
									},
									"scope": 2898,
									"src": "47113:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "48283:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2463,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "48297:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2464,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48303:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48303:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48297:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2477,
												"nodeType": "IfStatement",
												"src": "48293:87:0",
												"trueBody": {
													"id": 2476,
													"nodeType": "Block",
													"src": "48315:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48366:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48358:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2470,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48358:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48358:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2469,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "48336:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48336:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2475,
															"nodeType": "RevertStatement",
															"src": "48329:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2479
												],
												"declarations": [
													{
														"constant": false,
														"id": 2479,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "48397:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2504,
														"src": "48389:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2478,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48389:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2488,
												"initialValue": {
													"arguments": [
														{
															"id": 2481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "48421:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "48425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48442:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48434:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48434:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48434:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2480,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "48413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48413:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48389:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2489,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2479,
														"src": "48459:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2490,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48476:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48476:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48459:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2503,
												"nodeType": "IfStatement",
												"src": "48455:96:0",
												"trueBody": {
													"id": 2502,
													"nodeType": "Block",
													"src": "48488:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48537:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48529:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2496,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48529:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48529:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2495,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "48509:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48509:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2501,
															"nodeType": "RevertStatement",
															"src": "48502:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "47914:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "48239:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "48245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48265:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "48257:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48244:29:0"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48283:0:0"
									},
									"scope": 2898,
									"src": "48230:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "48965:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2514,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2508,
															"src": "48985:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2510,
															"src": "48989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48998:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2513,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2520,
															2546
														],
														"referencedDeclaration": 2546,
														"src": "48975:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48975:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2518,
												"nodeType": "ExpressionStatement",
												"src": "48975:26:0"
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "48563:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "48917:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48935:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "48927:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48947:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "48939:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48926:29:0"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48965:0:0"
									},
									"scope": 2898,
									"src": "48908:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "49313:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "49329:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "49333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2530,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "49323:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49323:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "49323:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49382:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49374:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49374:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "49386:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "49390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "49399:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2535,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "49351:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49351:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "49351:53:0"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "49014:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "49238:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49290:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49277:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49247:48:0"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49313:0:0"
									},
									"scope": 2898,
									"src": "49229:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "49778:186:0",
										"statements": [
											{
												"assignments": [
													2553
												],
												"declarations": [
													{
														"constant": false,
														"id": 2553,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49796:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "49788:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49788:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2565,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49828:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49820:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49820:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "49832:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49849:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49841:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49841:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2554,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "49812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49812:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49788:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2566,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2553,
														"src": "49866:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2567,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49883:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49883:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49866:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2577,
												"nodeType": "IfStatement",
												"src": "49862:96:0",
												"trueBody": {
													"id": 2576,
													"nodeType": "Block",
													"src": "49895:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2573,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "49939:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2572,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "49916:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49916:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2575,
															"nodeType": "RevertStatement",
															"src": "49909:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "49417:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "49746:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "49752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49751:17:0"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49778:0:0"
									},
									"scope": 2898,
									"src": "49737:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "50359:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2589,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "50373:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50379:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50379:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50373:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2603,
												"nodeType": "IfStatement",
												"src": "50369:87:0",
												"trueBody": {
													"id": 2602,
													"nodeType": "Block",
													"src": "50391:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50442:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50434:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2596,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50434:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50434:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2595,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "50412:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50412:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2601,
															"nodeType": "RevertStatement",
															"src": "50405:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2605
												],
												"declarations": [
													{
														"constant": false,
														"id": 2605,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50473:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "50465:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50465:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"initialValue": {
													"arguments": [
														{
															"id": 2607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "50497:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2608,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "50501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50510:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50510:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2606,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "50489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50489:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50465:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2615,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "50535:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50560:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50552:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50552:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50535:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2626,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "50637:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2627,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "50654:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50637:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2636,
													"nodeType": "IfStatement",
													"src": "50633:109:0",
													"trueBody": {
														"id": 2635,
														"nodeType": "Block",
														"src": "50660:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2630,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "50702:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2631,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "50708:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2632,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "50717:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2629,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "50681:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50681:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2634,
																"nodeType": "RevertStatement",
																"src": "50674:57:0"
															}
														]
													}
												},
												"id": 2637,
												"nodeType": "IfStatement",
												"src": "50531:211:0",
												"trueBody": {
													"id": 2625,
													"nodeType": "Block",
													"src": "50564:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2622,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "50608:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2621,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "50585:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50585:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2624,
															"nodeType": "RevertStatement",
															"src": "50578:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "49970:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "50297:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50329:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50321:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50306:43:0"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50359:0:0"
									},
									"scope": 2898,
									"src": "50288:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "51756:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2650,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "51780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2651,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "51786:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "51790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51799:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2649,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2657,
															2683
														],
														"referencedDeclaration": 2683,
														"src": "51766:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51766:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "51766:36:0"
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "50754:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "51690:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51712:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51704:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51726:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51718:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51730:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51703:43:0"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51756:0:0"
									},
									"scope": 2898,
									"src": "51681:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "52148:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "52168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "52174:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "52178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "52158:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52158:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "52158:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "52219:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "52225:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "52229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "52238:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2675,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "52196:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52196:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "52196:47:0"
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "51815:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "52055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52091:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52083:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52103:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52095:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52125:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52112:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52112:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52068:62:0"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52148:0:0"
									},
									"scope": 2898,
									"src": "52046:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "52763:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "52782:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2695,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "52786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2696,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "52795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2693,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2701,
															2767
														],
														"referencedDeclaration": 2767,
														"src": "52773:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52773:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2699,
												"nodeType": "ExpressionStatement",
												"src": "52773:33:0"
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "52256:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52702:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52719:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "52748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52740:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52710:43:0"
									},
									"returnParameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52763:0:0"
									},
									"scope": 2898,
									"src": "52693:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "53089:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2713,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "53155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "53168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53184:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53176:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53176:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53176:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "53168:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "53155:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2759,
												"nodeType": "IfStatement",
												"src": "53151:460:0",
												"trueBody": {
													"id": 2758,
													"nodeType": "Block",
													"src": "53188:423:0",
													"statements": [
														{
															"assignments": [
																2722
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2722,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "53210:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2758,
																	"src": "53202:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2721,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "53202:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2726,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2724,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2706,
																		"src": "53232:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2723,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "53218:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53218:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53202:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2727,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "53368:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "53384:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "53376:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2728,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "53376:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53376:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53368:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2733,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "53390:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2734,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "53399:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53390:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "53368:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "53407:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2738,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2722,
																				"src": "53425:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2739,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2708,
																				"src": "53432:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2737,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "53408:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53408:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53368:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2748,
															"nodeType": "IfStatement",
															"src": "53364:142:0",
															"trueBody": {
																"id": 2747,
																"nodeType": "Block",
																"src": "53439:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2744,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "53486:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2743,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "53464:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53464:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2746,
																		"nodeType": "RevertStatement",
																		"src": "53457:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2749,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "53524:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2757,
															"nodeType": "IfStatement",
															"src": "53520:81:0",
															"trueBody": {
																"id": 2756,
																"nodeType": "Block",
																"src": "53535:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2751,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "53567:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2752,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2704,
																					"src": "53574:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2753,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2706,
																					"src": "53578:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2750,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1788,
																				"src": "53558:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53558:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2755,
																		"nodeType": "EmitStatement",
																		"src": "53553:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2760,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "53621:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2762,
														"indexExpression": {
															"id": 2761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "53637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53621:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2763,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "53648:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53621:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "53621:29:0"
											}
										]
									},
									"documentation": {
										"id": 2702,
										"nodeType": "StructuredDocumentation",
										"src": "52819:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "53004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53021:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53013:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "53050:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53042:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "53061:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53056:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53012:59:0"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53089:0:0"
									},
									"scope": 2898,
									"src": "52995:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2803,
										"nodeType": "Block",
										"src": "53959:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2777,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2772,
														"src": "53973:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2778,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53985:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53985:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53973:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2788,
												"nodeType": "IfStatement",
												"src": "53969:91:0",
												"trueBody": {
													"id": 2787,
													"nodeType": "Block",
													"src": "53997:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2784,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2772,
																		"src": "54040:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2783,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "54018:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54018:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2786,
															"nodeType": "RevertStatement",
															"src": "54011:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2789,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "54069:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2792,
															"indexExpression": {
																"id": 2790,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "54088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54069:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2793,
														"indexExpression": {
															"id": 2791,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "54095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54069:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2794,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2774,
														"src": "54107:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54069:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "54069:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "54145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2799,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "54152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2800,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "54162:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2797,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "54130:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54130:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2802,
												"nodeType": "EmitStatement",
												"src": "54125:46:0"
											}
										]
									},
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "53663:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "53875:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "53902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "53894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "53917:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "53909:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "53932:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "53927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53893:48:0"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53959:0:0"
									},
									"scope": 2898,
									"src": "53866:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "54485:169:0",
										"statements": [
											{
												"assignments": [
													2813
												],
												"declarations": [
													{
														"constant": false,
														"id": 2813,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "54503:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2832,
														"src": "54495:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2812,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "54495:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2817,
												"initialValue": {
													"arguments": [
														{
															"id": 2815,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "54520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2814,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "54511:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54511:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54495:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2818,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "54542:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54551:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54551:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54542:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2829,
												"nodeType": "IfStatement",
												"src": "54538:88:0",
												"trueBody": {
													"id": 2828,
													"nodeType": "Block",
													"src": "54563:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2825,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "54607:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2824,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "54584:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54584:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2827,
															"nodeType": "RevertStatement",
															"src": "54577:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2830,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2813,
													"src": "54642:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2811,
												"id": 2831,
												"nodeType": "Return",
												"src": "54635:12:0"
											}
										]
									},
									"documentation": {
										"id": 2805,
										"nodeType": "StructuredDocumentation",
										"src": "54184:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "54422:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "54436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54435:17:0"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "54476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54475:9:0"
									},
									"scope": 2898,
									"src": "54413:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "55295:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2845,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "55309:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55312:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "55309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55317:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55309:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55309:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2895,
												"nodeType": "IfStatement",
												"src": "55305:664:0",
												"trueBody": {
													"id": 2894,
													"nodeType": "Block",
													"src": "55329:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2874,
																		"nodeType": "Block",
																		"src": "55443:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2863,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2861,
																						"src": "55465:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2864,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1734,
																								"src": "55475:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1734_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2865,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "55491:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1733,
																							"src": "55475:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "55508:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "55475:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "55465:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2873,
																				"nodeType": "IfStatement",
																				"src": "55461:130:0",
																				"trueBody": {
																					"id": 2872,
																					"nodeType": "Block",
																					"src": "55518:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2869,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2838,
																										"src": "55569:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2868,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "55547:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2870,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55547:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2871,
																							"nodeType": "RevertStatement",
																							"src": "55540:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2875,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2862,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2861,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "55435:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2875,
																				"src": "55428:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2860,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "55428:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55427:15:0"
																	},
																	"src": "55419:186:0"
																},
																{
																	"block": {
																		"id": 2891,
																		"nodeType": "Block",
																		"src": "55634:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2879,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2877,
																							"src": "55656:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2880,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55663:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55656:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2881,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55673:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "55656:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2889,
																					"nodeType": "Block",
																					"src": "55755:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "55841:86:0",
																								"nodeType": "YulBlock",
																								"src": "55841:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "55878:2:0",
																															"nodeType": "YulLiteral",
																															"src": "55878:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "55882:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55882:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "55874:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "55874:3:0"
																													},
																													"nativeSrc": "55874:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55874:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "55897:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55897:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "55891:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "55891:5:0"
																													},
																													"nativeSrc": "55891:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55891:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "55867:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "55867:6:0"
																											},
																											"nativeSrc": "55867:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "55867:38:0"
																										},
																										"nativeSrc": "55867:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "55867:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2877,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55882:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2877,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55897:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2888,
																							"nodeType": "InlineAssembly",
																							"src": "55832:95:0"
																						}
																					]
																				},
																				"id": 2890,
																				"nodeType": "IfStatement",
																				"src": "55652:293:0",
																				"trueBody": {
																					"id": 2887,
																					"nodeType": "Block",
																					"src": "55676:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2884,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2838,
																										"src": "55727:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2883,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "55705:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2885,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55705:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2886,
																							"nodeType": "RevertStatement",
																							"src": "55698:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2892,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2878,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2877,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "55626:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2892,
																				"src": "55613:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2876,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "55613:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55612:21:0"
																	},
																	"src": "55606:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2854,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "55384:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55384:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2856,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2836,
																		"src": "55398:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2857,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "55404:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2858,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "55413:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2851,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2838,
																				"src": "55363:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2850,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "55347:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1734_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55347:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1734",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55367:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "55347:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55347:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2893,
															"nodeType": "TryStatement",
															"src": "55343:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "54660:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "55202:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55233:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55225:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55247:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55239:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55281:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55268:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55268:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55224:62:0"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55295:0:0"
									},
									"scope": 2898,
									"src": "55193:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2944,
							"src": "39051:16926:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1779,
								1788,
								1797
							]
						},
						{
							"id": 2899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "56022:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2900,
										"name": "ERC721",
										"nameLocations": [
											"56141:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2898,
										"src": "56141:6:0"
									},
									"id": 2901,
									"nodeType": "InheritanceSpecifier",
									"src": "56141:6:0"
								},
								{
									"baseName": {
										"id": 2902,
										"name": "Ownable",
										"nameLocations": [
											"56149:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1717,
										"src": "56149:7:0"
									},
									"id": 2903,
									"nodeType": "InheritanceSpecifier",
									"src": "56149:7:0"
								}
							],
							"canonicalName": "PropiedadesERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2943,
							"linearizedBaseContracts": [
								2943,
								1717,
								2898,
								89,
								1905,
								1880,
								1766,
								1745,
								1572
							],
							"name": "PropiedadesERC721",
							"nameLocation": "56120:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "56218:2:0",
										"statements": []
									},
									"id": 2915,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50726f70",
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_696027a39d7efa560227a7467e8545261c3ad00eb2163fb83856fddf3c4deef2",
														"typeString": "literal_string \"Prop\""
													},
													"value": "Prop"
												},
												{
													"hexValue": "5050",
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_540b393cff473f6b957309e0dbf60ece69869f0016d6a52c1d604449e8e755be",
														"typeString": "literal_string \"PP\""
													},
													"value": "PP"
												}
											],
											"id": 2908,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2905,
												"name": "ERC721",
												"nameLocations": [
													"56177:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "56177:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56177:20:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2910,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "56206:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "56210:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "56206:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2912,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2909,
												"name": "Ownable",
												"nameLocations": [
													"56198:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1717,
												"src": "56198:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56198:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56174:2:0"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56218:0:0"
									},
									"scope": 2943,
									"src": "56163:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2929,
										"nodeType": "Block",
										"src": "56365:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2917,
															"src": "56381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2926,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2919,
															"src": "56385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2924,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "56375:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56375:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2928,
												"nodeType": "ExpressionStatement",
												"src": "56375:18:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2921,
												"name": "onlyOwner",
												"nameLocations": [
													"56355:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "56355:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56355:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "56314:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56327:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "56319:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56339:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "56331:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56318:29:0"
									},
									"returnParameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56365:0:0"
									},
									"scope": 2943,
									"src": "56305:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "56529:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2938,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "56545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2937,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "56539:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56539:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "56539:14:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "onlyOwner",
												"nameLocations": [
													"56519:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "56519:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56519:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "56489:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56502:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "56494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56493:17:0"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56529:0:0"
									},
									"scope": 2943,
									"src": "56480:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2944,
							"src": "56111:451:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1583,
								1588
							],
							"usedEvents": [
								1594,
								1779,
								1788,
								1797
							]
						}
					],
					"src": "146:56417:0"
				},
				"id": 0
			}
		}
	}
}